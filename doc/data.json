{
    "project": {
        "name": "jsDataSet",
        "description": "DataSet (like .Net) made available for javascript and more",
        "version": "1.0.0"
    },
    "files": {
        "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js": {
            "name": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bower_components\\lodash\\lodash.js": {
            "name": "src\\bower_components\\lodash\\lodash.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bower_components\\lodash\\lodash.min.js": {
            "name": "src\\bower_components\\lodash\\lodash.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bower_components\\observe-js\\src\\observe.js": {
            "name": "src\\bower_components\\observe-js\\src\\observe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\jsDataSet.js": {
            "name": "src\\jsDataSet.js",
            "modules": {
                "DataSet": 1,
                "dataenums": 1,
                "DataRow": 1,
                "DataQuery": 1
            },
            "classes": {
                "DataRowObserver": 1,
                "DataRow": 1,
                "sqlFun": 1,
                "dataQuery": 1,
                "DataQuery": 1,
                "AutoIncrementColumn": 1,
                "DataTable": 1,
                "OptimisticLocking": 1,
                "DataRelation": 1,
                "DataSet": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "DataSet": {
            "name": "DataSet",
            "submodules": {
                "dataenums": 1,
                "DataRow": 1,
                "DataQuery": 1
            },
            "classes": {
                "DataRowObserver": 1,
                "DataRow": 1,
                "sqlFun": 1,
                "dataQuery": 1,
                "DataQuery": 1,
                "AutoIncrementColumn": 1,
                "DataTable": 1,
                "OptimisticLocking": 1,
                "DataRelation": 1,
                "DataSet": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\jsDataSet.js",
            "line": 3804,
            "description": "Provides shim for Ado.net DataSet class"
        },
        "dataenums": {
            "name": "dataenums",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "DataSet",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 87,
            "description": "provides DataRow enumeration constants"
        },
        "DataRow": {
            "name": "DataRow",
            "submodules": {},
            "classes": {
                "DataRowObserver": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "DataSet",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 120,
            "description": "Enumerates possible version of a DataRow field: original, current",
            "type": "{dataRowVersion}\n/  $rowVersion = {\n           original: \"original\",\n           current: \"current\"\n       };\n\n\n   /**\nDataRow shim, provides methods to treat objects as Ado.Net DataRows"
        },
        "DataQuery": {
            "name": "DataQuery",
            "submodules": {},
            "classes": {
                "DataRow": 1,
                "sqlFun": 1,
                "dataQuery": 1,
                "DataQuery": 1,
                "AutoIncrementColumn": 1,
                "DataTable": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "DataSet",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 2517,
            "description": "Provides utility functions to filter data and to create sql condition over database.\nEvery function returns a function f where:\nf ( r, context )  = true if r matches condition in the given context\nf( r, context ) = result  evaluated in the given context if f is a computation function\nf.isTrue = true if f is always true\nf.isFalse = true if f is always false\nf ( r, context) = undefined if there is no sufficient data to evaluate f\nnull fields and undefined fields are all considered (and returned) as null values (so they compare equal)\nf.toSql(formatter, context)  = a string representing the underlying condition to be applied to a database.\n formatter is used to obtain details about making the expression, see sqlFormatter for an example\n [context] is the context into which the expression have to be evaluated"
        }
    },
    "classes": {
        "DataRowObserver": {
            "name": "DataRowObserver",
            "shortname": "DataRowObserver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataRow",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 120,
            "description": "Internal class attached to dataRow model data and used to track object changes",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "d",
                    "description": "",
                    "type": "DataRow"
                }
            ],
            "is_constructor": 1
        },
        "DataRow": {
            "name": "DataRow",
            "shortname": "DataRow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataQuery",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 213,
            "description": "Provides methods to treat objects as Ado.Net DataRows"
        },
        "sqlFun": {
            "name": "sqlFun",
            "shortname": "sqlFun",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataQuery",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 668,
            "description": "Function with ability to be converted to sql. When invoked gives a result depending on the arguments."
        },
        "dataQuery": {
            "name": "dataQuery",
            "shortname": "dataQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataQuery",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 680,
            "description": "Compare function provider to help building conditions that can be applyed both to collections,\n using the returned function as a filter, or to a database, using the toSql() method"
        },
        "DataQuery": {
            "name": "DataQuery",
            "shortname": "DataQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataQuery",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 686,
            "description": "collection of function generators",
            "itemtype": "property",
            "type": "String"
        },
        "AutoIncrementColumn": {
            "name": "AutoIncrementColumn",
            "shortname": "AutoIncrementColumn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataQuery",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 2349,
            "description": "Describe how to evaluate the value of a column before posting it"
        },
        "DataTable": {
            "name": "DataTable",
            "shortname": "DataTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "submodule": "DataQuery",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 2517,
            "description": "A DataTable is s collection of DataRow and provides information about the structure of logical table"
        },
        "OptimisticLocking": {
            "name": "OptimisticLocking",
            "shortname": "OptimisticLocking",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 3535,
            "description": "Manages auto fill of locking purposed fields and evaluates filter for optimistic locking for update\nIn his basic implementation accept a list of fields to fill. Values for filling are taken from\n environment.",
            "itemtype": "method",
            "params": [
                {
                    "name": "updateFields",
                    "description": "",
                    "type": "String[]"
                },
                {
                    "name": "createFields",
                    "description": "",
                    "type": "String[]"
                }
            ],
            "is_constructor": 1
        },
        "DataRelation": {
            "name": "DataRelation",
            "shortname": "DataRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 3607,
            "description": "creates a DataRelation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "relationName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parentTableName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parentColsName",
                    "description": "array of string",
                    "type": "String[]"
                },
                {
                    "name": "childTableName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "childColsName",
                    "description": "optional names of child columns",
                    "type": "String[]",
                    "optional": true,
                    "optdefault": "parentColsName"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRelation"
            }
        },
        "DataSet": {
            "name": "DataSet",
            "shortname": "DataSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataSet",
            "namespace": "",
            "file": "src\\jsDataSet.js",
            "line": 3804,
            "description": "Creates an empty DataSet",
            "itemtype": "method",
            "params": [
                {
                    "name": "dataSetName",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "DataSet"
            },
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 23,
            "description": "Starting with version 2.0, this file \"boots\" Jasmine, performing all of the necessary initialization before executing the loaded environment and all of a project's specs. This file should be loaded after `jasmine.js` and `jasmine_html.js`, but before any project source files or spec files are loaded. Thus this file can also be used to customize Jasmine for a project.\n\nIf a project is using Jasmine via the standalone distribution, this file can be customized directly. If a project is using Jasmine via the [Ruby gem][jasmine-gem], this file can be copied into the support directory via `jasmine copy_boot_js`. Other environments (e.g., Python) will have different mechanisms.\n\nThe location of `boot.js` can be specified and/or overridden in `jasmine.yml`.\n\n[jasmine-gem]: http://github.com/pivotal/jasmine-gem",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 35,
            "description": "## Require &amp; Instantiate\n\nRequire Jasmine's core files. Specifically, this requires and attaches all of Jasmine's code to the `jasmine` reference.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 42,
            "description": "Since this is being run in a browser and the results should populate to an HTML page, require the HTML-specific Jasmine code, injecting the same reference.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 47,
            "description": "Create the Jasmine environment. This is used to run all specs in a project.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 52,
            "description": "## The Global Interface\n\nBuild up the functions that will be exposed as the Jasmine public interface. A project can customize, rename or alias any of these functions as desired, provided the implementation remains unchanged.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 59,
            "description": "Add all of the Jasmine global/public interface to the proper global, so a project can use the public interface directly. For example, calling `describe` in specs instead of `jasmine.getEnv().describe`.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 68,
            "description": "## Runner Parameters\n\nMore browser specific code - wrap the query string in an object and to allow for getting/setting parameters from the runner user interface.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 81,
            "description": "## Reporters\nThe `HtmlReporter` builds all of the HTML UI for the runner page. This reporter paints the dots, stars, and x's for specs, as well as all spec names and all failures (if any).",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 95,
            "description": "The `jsApiReporter` also receives spec results, and is used by any environment that needs to extract the results  from JavaScript.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 101,
            "description": "Filter which specs will be run by matching the start of the full name against the `spec` query param.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 112,
            "description": "Setting up timing functions to be able to be overridden. Certain browsers (Safari, IE 8, phantomjs) require this hack.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 120,
            "description": "## Execution\n\nReplace the browser window's `onload`, ensure it's called, and then run all of the loaded specs. This includes initializing the `HtmlReporter` instance and then executing the loaded Jasmine environment. All of this will happen after all of the specs are loaded.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js",
            "line": 135,
            "description": "Helper function for readability above.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1,
            "license": "lodash 3.1.0 (Custom Build) <https://lodash.com/>\nBuild: `lodash modern -o ./lodash.js`\nCopyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\nCopyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\nAvailable under MIT license <https://lodash.com/license>",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 12,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 15,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 18,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 29,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 33,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 37,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 42,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 45,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 48,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 74,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 79,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 85,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 90,
            "description": "Used to match ES template delimiters.\nSee the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\nfor more details.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 97,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 100,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 103,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 106,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 109,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 112,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 115,
            "description": "Used to match `RegExp` special characters.\nSee this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\nfor more details.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 123,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 126,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 129,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 137,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 149,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 159,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 162,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 177,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 192,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 199,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 220,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 230,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 240,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 246,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 256,
            "description": "Used as a reference to the global object.\n\nThe `this` value is used if it is the global object to avoid Greasemonkey's\nrestricted `window` object, otherwise the `window` object is used.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 264,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 267,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 270,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 276,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 281,
            "description": "The base implementation of `compareAscending` which compares values and\nsorts them in ascending order without guaranteeing a stable sort.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to compare to `other`.",
                    "type": "*"
                },
                {
                    "name": "other",
                    "description": "The value to compare to `value`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the sort order indicator for `value`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 305,
            "description": "The base implementation of `_.indexOf` without support for binary searches.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 329,
            "description": "The base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\nto define the sort order of `array` and replaces criteria objects with their\ncorresponding values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to sort.",
                    "type": "Array"
                },
                {
                    "name": "comparer",
                    "description": "The function to define sort order.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 349,
            "description": "Converts `value` to a string if it is not one. An empty string is returned\nfor `null` or `undefined` values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the string.",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 364,
            "description": "Used by `_.max` and `_.min` as the default callback for string values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the code unit of the first character of the string.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 375,
            "description": "Used by `_.trim` and `_.trimLeft` to get the index of the first character\nof `string` that is not found in `chars`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                },
                {
                    "name": "chars",
                    "description": "The characters to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the first character not found in `chars`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 392,
            "description": "Used by `_.trim` and `_.trimRight` to get the index of the last character\nof `string` that is not found in `chars`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                },
                {
                    "name": "chars",
                    "description": "The characters to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the last character not found in `chars`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 408,
            "description": "Used by `_.sortBy` to compare transformed elements of a collection and stable\nsort them in ascending order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare to `other`.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The object to compare to `object`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the sort order indicator for `object`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 421,
            "description": "Used by `_.sortByAll` to compare multiple properties of each element\nin a collection and stable sort them in ascending order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare to `other`.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The object to compare to `object`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the sort order indicator for `object`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 452,
            "description": "Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "letter",
                    "description": "The matched letter to deburr.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the deburred letter.",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 463,
            "description": "Used by `_.escape` to convert characters to HTML entities.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chr",
                    "description": "The matched character to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the escaped character.",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 474,
            "description": "Used by `_.template` to escape characters for inclusion in compiled\nstring literals.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chr",
                    "description": "The matched character to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the escaped character.",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 486,
            "description": "Gets the index at which the first occurrence of `NaN` is found in `array`.\nIf `fromRight` is provided elements of `array` are iterated from right to left.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the matched `NaN`, else `-1`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 509,
            "description": "Checks if `value` is object-like.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is object-like, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 520,
            "description": "Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\ncharacter code is whitespace.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "charCode",
                    "description": "The character code to inspect.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if `charCode` is whitespace, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 533,
            "description": "Replaces all `placeholder` elements in `array` with an internal placeholder\nand returns an array of their indexes.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "placeholder",
                    "description": "The placeholder to replace.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new array of placeholder indexes.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 557,
            "description": "An implementation of `_.uniq` optimized for sorted arrays without support\nfor callback shorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new duplicate-value-free array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 585,
            "description": "Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\ncharacter of `string`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the first non-whitespace character.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 601,
            "description": "Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\ncharacter of `string`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the last non-whitespace character.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 616,
            "description": "Used by `_.unescape` to convert HTML entities to characters.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chr",
                    "description": "The matched character to unescape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the unescaped character.",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 629,
            "description": "Create a new pristine `lodash` function using the given `context` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "context",
                    "description": "The context object.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "root"
                }
            ],
            "return": {
                "description": "Returns a new `lodash` function.",
                "type": "Function"
            },
            "example": [
                "\n\n_.mixin({ 'add': function(a, b) { return a + b; } });\n\nvar lodash = _.runInContext();\nlodash.mixin({ 'sub': function(a, b) { return a - b; } });\n\n_.isFunction(_.add);\n// => true\n_.isFunction(_.sub);\n// => false\n\nlodash.isFunction(lodash.add);\n// => false\nlodash.isFunction(lodash.sub);\n// => true\n\n// using `context` to mock `Date#getTime` use in `_.now`\nvar mock = _.runInContext({\n  'Date': function() {\n    return { 'getTime': getTimeMock };\n  }\n});\n\n// or creating a suped-up `defer` in Node.js\nvar defer = _.runInContext({ 'setTimeout': setImmediate }).defer;"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 671,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 683,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 687,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 690,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 693,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 696,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 699,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 702,
            "description": "Used to resolve the `toStringTag` of values.\nSee the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\nfor more details.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 709,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 712,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 718,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 734,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 758,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 762,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 767,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 770,
            "description": "Used as the maximum length of an array-like value.\nSee the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\nfor more details.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 777,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 782,
            "description": "Creates a `lodash` object which wraps `value` to enable intuitive chaining.\nMethods that operate on and return arrays, collections, and functions can\nbe chained together. Methods that return a boolean or single value will\nautomatically end the chain returning the unwrapped value. Explicit chaining\nmay be enabled using `_.chain`. The execution of chained methods is lazy,\nthat is, execution is deferred until `_#value` is implicitly or explicitly\ncalled.\n\nLazy evaluation allows several methods to support shortcut fusion. Shortcut\nfusion is an optimization that merges iteratees to avoid creating intermediate\narrays and reduce the number of iteratee executions.\n\nChaining is supported in custom builds as long as the `_#value` method is\ndirectly or indirectly included in the build.\n\nIn addition to lodash methods, wrappers also have the following `Array` methods:\n`concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\nand `unshift`\n\nThe wrapper functions that support shortcut fusion are:\n`drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `first`,\n`initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`, `slice`,\n`take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `where`\n\nThe chainable wrapper functions are:\n`after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n`callback`, `chain`, `chunk`, `compact`, `concat`, `constant`, `countBy`,\n`create`, `curry`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n`drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `flatten`,\n`flattenDeep`, `flow`, `flowRight`, `forEach`, `forEachRight`, `forIn`,\n`forInRight`, `forOwn`, `forOwnRight`, `functions`, `groupBy`, `indexBy`,\n`initial`, `intersection`, `invert`, `invoke`, `keys`, `keysIn`, `map`,\n`mapValues`, `matches`, `memoize`, `merge`, `mixin`, `negate`, `noop`,\n`omit`, `once`, `pairs`, `partial`, `partialRight`, `partition`, `pick`,\n`pluck`, `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`,\n`rearg`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n`sortBy`, `sortByAll`, `splice`, `take`, `takeRight`, `takeRightWhile`,\n`takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n`transform`, `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`,\n`where`, `without`, `wrap`, `xor`, `zip`, and `zipObject`\n\nThe wrapper functions that are **not** chainable by default are:\n`attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n`endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n`findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n`identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n`isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n`isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n`isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n`isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n`noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n`random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n`shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n`startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n`trunc`, `unescape`, `uniqueId`, `value`, and `words`\n\nThe wrapper function `sample` will return a wrapped value when `n` is provided,\notherwise an unwrapped value is returned.",
            "name": "_",
            "is_constructor": 1,
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap in a `lodash` instance.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns a `lodash` instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar wrapped = _([1, 2, 3]);\n\n// returns an unwrapped value\nwrapped.reduce(function(sum, n) { return sum + n; });\n// => 6\n\n// returns a wrapped value\nvar squares = wrapped.map(function(n) { return n * n; });\n\n_.isArray(squares);\n// => false\n\n_.isArray(squares.value());\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 876,
            "description": "The base constructor for creating `lodash` wrapper objects.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                },
                {
                    "name": "chainAll",
                    "description": "Enable chaining for all wrapper methods.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "actions",
                    "description": "Actions to peform to resolve the unwrapped value.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 890,
            "description": "An object environment feature flags.",
            "static": 1,
            "memberof": "_",
            "type": "Object",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 901,
            "description": "Detect if functions can be decompiled by `Function#toString`\n(all but Firefox OS certified apps, older Opera mobile browsers, and\nthe PlayStation 3; forced `false` for Windows 8 apps).",
            "memberof": "_.support",
            "type": "boolean",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 911,
            "description": "Detect if `Function#name` is supported (all but IE).",
            "memberof": "_.support",
            "type": "boolean",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 919,
            "description": "Detect if the DOM is supported.",
            "memberof": "_.support",
            "type": "boolean",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 931,
            "description": "Detect if `arguments` object indexes are non-enumerable.\n\nIn Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\nindexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n`arguments` object indexes as non-enumerable and fail `hasOwnProperty`\nchecks for indexes that exceed their function's formal parameters with\nassociated values of `0`.",
            "memberof": "_.support",
            "type": "boolean",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 950,
            "description": "By default, the template delimiters used by lodash are like those in\nembedded Ruby (ERB). Change the following template settings to use\nalternative delimiters.",
            "static": 1,
            "memberof": "_",
            "type": "Object",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 961,
            "description": "Used to detect `data` property values to be HTML-escaped.",
            "memberof": "_.templateSettings",
            "type": "RegExp",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 969,
            "description": "Used to detect code to be evaluated.",
            "memberof": "_.templateSettings",
            "type": "RegExp",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 977,
            "description": "Used to detect `data` property values to inject.",
            "memberof": "_.templateSettings",
            "type": "RegExp",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 985,
            "description": "Used to reference the data object in the template text.",
            "memberof": "_.templateSettings",
            "type": "string",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 993,
            "description": "Used to import variables into the compiled template.",
            "memberof": "_.templateSettings",
            "type": "Object",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1001,
            "description": "A reference to the `lodash` function.",
            "memberof": "_.templateSettings.imports",
            "type": "Function",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1013,
            "description": "Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                }
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1030,
            "description": "Creates a clone of the lazy wrapper object.",
            "access": "private",
            "tagname": "",
            "name": "clone",
            "memberof": "LazyWrapper",
            "return": {
                "description": "Returns the cloned `LazyWrapper` object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1054,
            "description": "Reverses the direction of lazy iteration.",
            "access": "private",
            "tagname": "",
            "name": "reverse",
            "memberof": "LazyWrapper",
            "return": {
                "description": "Returns the new reversed `LazyWrapper` object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1074,
            "description": "Extracts the unwrapped value from its lazy wrapper.",
            "access": "private",
            "tagname": "",
            "name": "value",
            "memberof": "LazyWrapper",
            "return": {
                "description": "Returns the unwrapped value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1135,
            "description": "Creates a cache object to store key/value pairs.",
            "access": "private",
            "tagname": "",
            "static": 1,
            "name": "Cache",
            "memberof": "_.memoize",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1147,
            "description": "Removes `key` and its value from the cache.",
            "access": "private",
            "tagname": "",
            "name": "delete",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the value to remove.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if the entry was removed successfully, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1160,
            "description": "Gets the cached value for `key`.",
            "access": "private",
            "tagname": "",
            "name": "get",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the value to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the cached value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1173,
            "description": "Checks if a cached value for `key` exists.",
            "access": "private",
            "tagname": "",
            "name": "has",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the entry to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if an entry for `key` exists, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1186,
            "description": "Adds `value` to `key` of the cache.",
            "access": "private",
            "tagname": "",
            "name": "set",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the value to cache.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to cache.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the cache object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1205,
            "description": "Creates a cache object to store unique values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "values",
                    "description": "The values to cache.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1221,
            "description": "Checks if `value` is in `cache` mimicking the return signature of\n`_.indexOf` by returning `0` if the value is found, else `-1`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cache",
                    "description": "The cache to search.",
                    "type": "Object"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `0` if `value` is found, else `-1`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1237,
            "description": "Adds `value` to the cache.",
            "access": "private",
            "tagname": "",
            "name": "push",
            "memberof": "SetCache",
            "params": [
                {
                    "name": "value",
                    "description": "The value to cache.",
                    "type": "*"
                }
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1256,
            "description": "Copies the values of `source` to `array`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The array to copy values from.",
                    "type": "Array"
                },
                {
                    "name": "array",
                    "description": "The array to copy values to.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1275,
            "description": "A specialized version of `_.forEach` for arrays without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1296,
            "description": "A specialized version of `_.forEachRight` for arrays without support for\ncallback shorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1316,
            "description": "A specialized version of `_.every` for arrays without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1338,
            "description": "A specialized version of `_.filter` for arrays without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1362,
            "description": "A specialized version of `_.map` for arrays without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new mapped array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1382,
            "description": "A specialized version of `_.max` for arrays without support for iteratees.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the maximum value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1403,
            "description": "A specialized version of `_.min` for arrays without support for iteratees.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the minimum value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1424,
            "description": "A specialized version of `_.reduce` for arrays without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "initFromArray",
                    "description": "Specify using the first element of `array`\n as the initial value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1449,
            "description": "A specialized version of `_.reduceRight` for arrays without support for\ncallback shorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "initFromArray",
                    "description": "Specify using the last element of `array`\n as the initial value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1472,
            "description": "A specialized version of `_.some` for arrays without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if any element passes the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1494,
            "description": "Used by `_.defaults` to customize its `_.assign` use.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectValue",
                    "description": "The destination object property value.",
                    "type": "*"
                },
                {
                    "name": "sourceValue",
                    "description": "The source object property value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the value to assign to the destination object.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1506,
            "description": "Used by `_.template` to customize its `_.assign` use.\n\n**Note:** This method is like `assignDefaults` except that it ignores\ninherited property values when checking if a property is `undefined`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectValue",
                    "description": "The destination object property value.",
                    "type": "*"
                },
                {
                    "name": "sourceValue",
                    "description": "The source object property value.",
                    "type": "*"
                },
                {
                    "name": "key",
                    "description": "The key associated with the object and source values.",
                    "type": "String"
                },
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the value to assign to the destination object.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1525,
            "description": "The base implementation of `_.assign` without support for argument juggling,\nmultiple sources, and `this` binding `customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize assigning values.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the destination object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1556,
            "description": "The base implementation of `_.at` without support for strings and individual\nkey arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object"
                },
                {
                    "name": "props",
                    "description": "The property names or indexes of elements to pick.",
                    "type": "Number[]|string[]",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of picked elements.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1584,
            "description": "Copies the properties of `source` to `object`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The object to copy properties from.",
                    "type": "Object"
                },
                {
                    "name": "object",
                    "description": "The object to copy properties to.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "props",
                    "description": "The property names to copy.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1608,
            "description": "The base implementation of `_.bindAll` without support for individual\nmethod name arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to bind and assign the bound methods to.",
                    "type": "Object"
                },
                {
                    "name": "methodNames",
                    "description": "The object method names to bind.",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1628,
            "description": "The base implementation of `_.callback` which supports specifying the\nnumber of arguments to provide to `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The value to convert to a callback.",
                    "type": "*",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "argCount",
                    "description": "The number of arguments to provide to `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the callback.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1654,
            "description": "The base implementation of `_.clone` without support for argument juggling\nand `this` binding `customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clone.",
                    "type": "*"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep clone.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize cloning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "key",
                    "description": "The key of `value`.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "object",
                    "description": "The object `value` belongs to.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed source objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Associates clones with source counterparts.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns the cloned value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1721,
            "description": "The base implementation of `_.create` without support for assigning\nproperties to the created object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "prototype",
                    "description": "The object to inherit from.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1741,
            "description": "The base implementation of `_.delay` and `_.defer` which accepts an index\nof where to slice the arguments to provide to `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to delay.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to delay invocation.",
                    "type": "Number"
                },
                {
                    "name": "args",
                    "description": "The `arguments` object to slice and provide to `func`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the timer id.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1758,
            "description": "The base implementation of `_.difference` which accepts a single array\nof values to exclude.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to exclude.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1805,
            "description": "The base implementation of `_.forEach` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1830,
            "description": "The base implementation of `_.forEachRight` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1853,
            "description": "The base implementation of `_.every` without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1872,
            "description": "The base implementation of `_.filter` without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1891,
            "description": "The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\nwithout support for callback shorthands and `this` binding, which iterates\nover `collection` using the provided `eachFunc`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over `collection`.",
                    "type": "Function"
                },
                {
                    "name": "retKey",
                    "description": "Specify returning the key of the found element\n instead of the element itself.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the found element or its key, else `undefined`.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1915,
            "description": "The base implementation of `_.flatten` with added support for restricting\nflattening and specifying the start index.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to flatten.",
                    "type": "Array"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep flatten.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "isStrict",
                    "description": "Restrict flattening to arrays and `arguments` objects.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "fromIndex",
                    "description": "The index to start from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns the new flattened array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1954,
            "description": "The base implementation of `baseForIn` and `baseForOwn` which iterates\nover `object` properties returned by `keysFunc` invoking `iteratee` for\neach property. Iterator functions may exit iteration early by explicitly\nreturning `false`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "keysFunc",
                    "description": "The function to get the keys of `object`.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 1981,
            "description": "This function is like `baseFor` except that it iterates over properties\nin the opposite order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "keysFunc",
                    "description": "The function to get the keys of `object`.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2005,
            "description": "The base implementation of `_.forIn` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2018,
            "description": "The base implementation of `_.forOwn` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2031,
            "description": "The base implementation of `_.forOwnRight` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2044,
            "description": "The base implementation of `_.functions` which creates an array of\n`object` function property names filtered from those provided.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to filter.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of filtered property names.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2068,
            "description": "The base implementation of `_.invoke` which requires additional arguments\nto be provided as an array of arguments rather than individually.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "methodName",
                    "description": "The name of the method to invoke or\n the function invoked per iteration.",
                    "type": "Function|string"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the method with.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of results.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2092,
            "description": "The base implementation of `_.isEqual` without support for `this` binding\n`customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to compare.",
                    "type": "*"
                },
                {
                    "name": "other",
                    "description": "The other value to compare.",
                    "type": "*"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isWhere",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the values are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2123,
            "description": "A specialized version of `baseIsEqual` for arrays and objects which performs\ndeep comparisons and tracks traversed objects enabling objects with circular\nreferences to be compared.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The other object to compare.",
                    "type": "Object"
                },
                {
                    "name": "equalFunc",
                    "description": "The function to determine equivalents of values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing objects.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isWhere",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2199,
            "description": "The base implementation of `_.isMatch` without support for callback\nshorthands or `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The source property names to match.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The source values to match.",
                    "type": "Array"
                },
                {
                    "name": "strictCompareFlags",
                    "description": "Strict comparison flags for source values.",
                    "type": "Array"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing objects.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if `object` is a match, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2248,
            "description": "The base implementation of `_.map` without support for callback shorthands\nor `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new mapped array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2265,
            "description": "The base implementation of `_.matches` which supports specifying whether\n`source` should be cloned.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2300,
            "description": "The base implementation of `_.merge` without support for argument juggling,\nmultiple sources, and `this` binding `customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize merging properties.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed source objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Associates values with source counterparts.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns the destination object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2336,
            "description": "A specialized version of `baseMerge` for arrays and objects which performs\ndeep merges and tracks traversed objects enabling objects with circular\nreferences to be merged.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "The key of the value to merge.",
                    "type": "String"
                },
                {
                    "name": "mergeFunc",
                    "description": "The function to merge values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize merging properties.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed source objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Associates values with source counterparts.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2394,
            "description": "The base implementation of `_.property` which does not coerce `key` to a string.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the property to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2407,
            "description": "The base implementation of `_.pullAt` without support for individual\nindex arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "indexes",
                    "description": "The indexes of elements to remove.",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "Returns the new array of removed elements.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2431,
            "description": "The base implementation of `_.random` without support for argument juggling\nand returning floating-point numbers.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum possible value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum possible value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the random number.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2444,
            "description": "The base implementation of `_.reduce` and `_.reduceRight` without support\nfor callback shorthands or `this` binding, which iterates over `collection`\nusing the provided `eachFunc`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*"
                },
                {
                    "name": "initFromCollection",
                    "description": "Specify using the first or last element\n of `collection` as the initial value.",
                    "type": "Boolean"
                },
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over `collection`.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2467,
            "description": "The base implementation of `setData` without support for hot loop detection.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to associate metadata with.",
                    "type": "Function"
                },
                {
                    "name": "data",
                    "description": "The metadata.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `func`.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2480,
            "description": "The base implementation of `_.slice` without an iteratee call guard.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to slice.",
                    "type": "Array"
                },
                {
                    "name": "start",
                    "description": "The start position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "array.length"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2511,
            "description": "The base implementation of `_.some` without support for callback shorthands\nor `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if any element passes the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2531,
            "description": "The base implementation of `_.uniq` without support for callback shorthands\nand `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new duplicate-value-free array.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2583,
            "description": "The base implementation of `_.values` and `_.valuesIn` which creates an\narray of `object` property values corresponding to the property names\nreturned by `keysFunc`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to get values for.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the array of property values.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2604,
            "description": "The base implementation of `wrapperValue` which returns the result of\nperforming a sequence of actions on the unwrapped `value`, where each\nsuccessive action is supplied the return value of the previous.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The unwrapped value.",
                    "type": "*"
                },
                {
                    "name": "actions",
                    "description": "Actions to peform to resolve the unwrapped value.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the resolved unwrapped value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2632,
            "description": "Performs a binary search of `array` to determine the index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "retHighest",
                    "description": "Specify returning the highest, instead\n of the lowest, index at which a value should be inserted into `array`.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2664,
            "description": "This function is like `binaryIndex` except that it invokes `iteratee` for\n`value` and each element of `array` to compute their sort ranking. The\niteratee is invoked with one argument; (value).",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "retHighest",
                    "description": "Specify returning the highest, instead\n of the lowest, index at which a value should be inserted into `array`.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2707,
            "description": "A specialized version of `baseCallback` which only supports `this` binding\nand specifying the number of arguments to provide to `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to bind.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*"
                },
                {
                    "name": "argCount",
                    "description": "The number of arguments to provide to `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the callback.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2743,
            "description": "Creates a clone of the given array buffer.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array buffer to clone.",
                    "type": "ArrayBuffer"
                }
            ],
            "return": {
                "description": "Returns the cloned array buffer.",
                "type": "ArrayBuffer"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2773,
            "description": "Creates an array that is the composition of partially applied arguments,\nplaceholders, and provided arguments into a single array of arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "args",
                    "description": "The provided arguments.",
                    "type": "Array|Object"
                },
                {
                    "name": "partials",
                    "description": "The arguments to prepend to those provided.",
                    "type": "Array"
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of composed arguments.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2803,
            "description": "This function is like `composeArgs` except that the arguments composition\nis tailored for `_.partialRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "args",
                    "description": "The provided arguments.",
                    "type": "Array|Object"
                },
                {
                    "name": "partials",
                    "description": "The arguments to append to those provided.",
                    "type": "Array"
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of composed arguments.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2835,
            "description": "Creates a function that aggregates a collection, creating an accumulator\nobject composed from the results of running each element in the collection\nthrough an iteratee. The `setter` sets the keys and values of the accumulator\nobject. If `initializer` is provided initializes the accumulator object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "setter",
                    "description": "The function to set keys and values of the accumulator object.",
                    "type": "Function"
                },
                {
                    "name": "initializer",
                    "description": "The function to initialize the accumulator object.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new aggregator function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2868,
            "description": "Creates a function that assigns properties of source object(s) to a given\ndestination object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "assigner",
                    "description": "The function to assign values.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new assigner function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2904,
            "description": "Creates a function that wraps `func` and invokes it with the `this`\nbinding of `thisArg`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to bind.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2922,
            "description": "Creates a `Set` cache object to optimize linear searches of large arrays.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "values",
                    "description": "The values to cache.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new cache object if `Set` is supported, else `null`.",
                "type": "Null|Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2933,
            "description": "Creates a function that produces compound words out of the words in a\ngiven string.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to combine each word.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new compounder function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2955,
            "description": "Creates a function that produces an instance of `Ctor` regardless of\nwhether it was invoked as part of a `new` expression or by `call` or `apply`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "Ctor",
                    "description": "The constructor to wrap.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new wrapped function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 2974,
            "description": "Creates a function that gets the extremum value of a collection.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "arrayFunc",
                    "description": "The function to get the extremum value from an array.",
                    "type": "Function"
                },
                {
                    "name": "isMin",
                    "description": "Specify returning the minimum, instead of the maximum,\n extremum value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new extremum function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3007,
            "description": "Creates a function that wraps `func` and invokes it with optional `this`\nbinding of, partial application, and currying.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function or method name to reference.",
                    "type": "Function|string"
                },
                {
                    "name": "bitmask",
                    "description": "The bitmask of flags. See `createWrapper` for more details.",
                    "type": "Number"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "partials",
                    "description": "The arguments to prepend to those provided to the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "partialsRight",
                    "description": "The arguments to append to those provided to the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "holdersRight",
                    "description": "The `partialsRight` placeholder indexes.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "argPos",
                    "description": "The argument positions of the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "ary",
                    "description": "The arity cap of `func`.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new wrapped function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3090,
            "description": "Creates the pad required for `string` based on the given padding length.\nThe `chars` string may be truncated if the number of padding characters\nexceeds the padding length.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to create padding for.",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the pad for `string`.",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3113,
            "description": "Creates a function that wraps `func` and invokes it with the optional `this`\nbinding of `thisArg` and the `partials` prepended to those provided to\nthe wrapper.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to partially apply arguments to.",
                    "type": "Function"
                },
                {
                    "name": "bitmask",
                    "description": "The bitmask of flags. See `createWrapper` for more details.",
                    "type": "Number"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*"
                },
                {
                    "name": "partials",
                    "description": "The arguments to prepend to those provided to the new function.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3149,
            "description": "Creates a function that either curries or invokes `func` with optional\n`this` binding and partially applied arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function or method name to reference.",
                    "type": "Function|string"
                },
                {
                    "name": "bitmask",
                    "description": "The bitmask of flags.\n The bitmask may be composed of the following flags:\n    1 - `_.bind`\n    2 - `_.bindKey`\n    4 - `_.curry` or `_.curryRight` of a bound function\n    8 - `_.curry`\n   16 - `_.curryRight`\n   32 - `_.partial`\n   64 - `_.partialRight`\n  128 - `_.rearg`\n  256 - `_.ary`",
                    "type": "Number"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "partials",
                    "description": "The arguments to be partially applied.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "argPos",
                    "description": "The argument positions of the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "ary",
                    "description": "The arity cap of `func`.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new wrapped function.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3214,
            "description": "A specialized version of `baseIsEqualDeep` for arrays with support for\npartial deep comparisons.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to compare.",
                    "type": "Array"
                },
                {
                    "name": "other",
                    "description": "The other array to compare.",
                    "type": "Array"
                },
                {
                    "name": "equalFunc",
                    "description": "The function to determine equivalents of values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing arrays.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isWhere",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the arrays are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3267,
            "description": "A specialized version of `baseIsEqualDeep` for comparing objects of\nthe same `toStringTag`.\n\n**Note:** This function only supports comparing values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The object to compare.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The other object to compare.",
                    "type": "Object"
                },
                {
                    "name": "tag",
                    "description": "The `toStringTag` of the objects to compare.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3307,
            "description": "A specialized version of `baseIsEqualDeep` for objects with support for\npartial deep comparisons.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The other object to compare.",
                    "type": "Object"
                },
                {
                    "name": "equalFunc",
                    "description": "The function to determine equivalents of values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isWhere",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3370,
            "description": "Gets the extremum value of `collection` invoking `iteratee` for each value\nin `collection` to generate the criterion by which the value is ranked.\nThe `iteratee` is invoked with three arguments; (value, index, collection).",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "isMin",
                    "description": "Specify returning the minimum, instead of the\n maximum, extremum value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the extremum value.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3397,
            "description": "Gets the appropriate \"callback\" function. If the `_.callback` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseCallback` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns the chosen function or its result.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3412,
            "description": "Gets metadata for `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to query.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the metadata for `func`.",
                "type": "*"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3423,
            "description": "Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseIndexOf` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns the chosen function or its result.",
                "type": "Function|number"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3438,
            "description": "Gets the view, applying any `transforms` to the `start` and `end` positions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "start",
                    "description": "The start of the view.",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "The end of the view.",
                    "type": "Number"
                },
                {
                    "name": "transforms",
                    "description": "The transformations to apply to the view.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns an object containing the `start` and `end`\n positions of the view.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3466,
            "description": "Initializes an array clone.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to clone.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the initialized clone.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3485,
            "description": "Initializes an object clone.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to clone.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the initialized clone.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3500,
            "description": "Initializes an object clone based on its `toStringTag`.\n\n**Note:** This function only supports cloning values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to clone.",
                    "type": "Object"
                },
                {
                    "name": "tag",
                    "description": "The `toStringTag` of the object to clone.",
                    "type": "String"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep clone.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the initialized clone.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3540,
            "description": "Checks if `func` is eligible for `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to check.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if `func` is eligible, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3565,
            "description": "Checks if `value` is a valid array-like index.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                },
                {
                    "name": "length",
                    "description": "The upper bounds of a valid index.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "MAX_SAFE_INTEGER"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a valid index, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3579,
            "description": "Checks if the provided arguments are from an iteratee call.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The potential iteratee value argument.",
                    "type": "*"
                },
                {
                    "name": "index",
                    "description": "The potential iteratee index or key argument.",
                    "type": "*"
                },
                {
                    "name": "object",
                    "description": "The potential iteratee object argument.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if the arguments are from an iteratee call, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3602,
            "description": "Checks if `value` is a valid array-like length.\n\n**Note:** This function is based on ES `ToLength`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\nfor more details.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a valid length, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3617,
            "description": "Checks if `value` is suitable for strict equality comparisons, i.e. `===`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` if suitable for strict\n equality comparisons, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3629,
            "description": "Merges the function metadata of `source` into `data`.\n\nMerging metadata reduces the number of wrappers required to invoke a function.\nThis is possible because methods like `_.bind`, `_.curry`, and `_.partial`\nmay be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\naugment function arguments, making the order in which they are executed important,\npreventing the merging of metadata. However, we make an exception for a safe\ncommon case where curried functions have `_.ary` and or `_.rearg` applied.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "The destination metadata.",
                    "type": "Array"
                },
                {
                    "name": "source",
                    "description": "The source metadata.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `data`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3708,
            "description": "A specialized version of `_.pick` that picks `object` properties specified\nby the `props` array.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to pick.",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3733,
            "description": "A specialized version of `_.pick` that picks `object` properties `predicate`\nreturns truthy for.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3752,
            "description": "Reorder `array` according to the specified indexes where the element at\nthe first index is assigned as the first element, the element at\nthe second index is assigned as the second element, and so on.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to reorder.",
                    "type": "Array"
                },
                {
                    "name": "indexes",
                    "description": "The arranged array indexes.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3774,
            "description": "Sets metadata for `func`.\n\n**Note:** If this function becomes hot, i.e. is invoked a lot in a short\nperiod of time, it will trip its breaker and transition to an identity function\nto avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\nfor more details.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to associate metadata with.",
                    "type": "Function"
                },
                {
                    "name": "data",
                    "description": "The metadata.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `func`.",
                "type": "Function"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3807,
            "description": "A fallback implementation of `_.isPlainObject` which checks if `value`\nis an object created by the `Object` constructor or has a `[[Prototype]]`\nof `null`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a plain object, else `false`.",
                "type": "Boolean"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3839,
            "description": "A fallback implementation of `Object.keys` which creates an array of the\nown enumerable property names of `object`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property names.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3868,
            "description": "Converts `value` to an array-like object if it is not one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the array-like object.",
                "type": "Array|Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3885,
            "description": "Converts `value` to an object if it is not one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the object.",
                "type": "Object"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3898,
            "description": "Creates an array of elements split into groups the length of `size`.\nIf `collection` can't be split evenly, the final chunk will be the remaining\nelements.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to process.",
                    "type": "Array"
                },
                {
                    "name": "size",
                    "description": "The length of each chunk.",
                    "type": "Numer",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new array containing chunks.",
                "type": "Array"
            },
            "example": [
                "\n\n_.chunk(['a', 'b', 'c', 'd'], 2);\n// => [['a', 'b'], ['c', 'd']]\n\n_.chunk(['a', 'b', 'c', 'd'], 3);\n// => [['a', 'b', 'c'], ['d']]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3935,
            "description": "Creates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to compact.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.compact([0, 1, false, 2, '', 3]);\n// => [1, 2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3964,
            "description": "Creates an array excluding all values of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The arrays of values to exclude.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.difference([1, 2, 3], [5, 2, 10]);\n// => [1, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 3997,
            "description": "Creates a slice of `array` with `n` elements dropped from the beginning.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to drop.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.drop([1, 2, 3]);\n// => [2, 3]\n\n_.drop([1, 2, 3], 2);\n// => [3]\n\n_.drop([1, 2, 3], 5);\n// => []\n\n_.drop([1, 2, 3], 0);\n// => [1, 2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4033,
            "description": "Creates a slice of `array` with `n` elements dropped from the end.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to drop.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.dropRight([1, 2, 3]);\n// => [1, 2]\n\n_.dropRight([1, 2, 3], 2);\n// => [1]\n\n_.dropRight([1, 2, 3], 5);\n// => []\n\n_.dropRight([1, 2, 3], 0);\n// => [1, 2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4070,
            "description": "Creates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per element.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.dropRightWhile([1, 2, 3], function(n) { return n > 1; });\n// => [1]\n\nvar users = [\n  { 'user': 'barney',  'status': 'busy', 'active': false },\n  { 'user': 'fred',    'status': 'busy', 'active': true },\n  { 'user': 'pebbles', 'status': 'away', 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.dropRightWhile(users, 'active'), 'user');\n// => ['barney']\n\n// using the \"_.matches\" callback shorthand\n_.pluck(_.dropRightWhile(users, { 'status': 'away' }), 'user');\n// => ['barney', 'fred']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4120,
            "description": "Creates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per element.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.dropWhile([1, 2, 3], function(n) { return n < 3; });\n// => [3]\n\nvar users = [\n  { 'user': 'barney',  'status': 'busy', 'active': true },\n  { 'user': 'fred',    'status': 'busy', 'active': false },\n  { 'user': 'pebbles', 'status': 'away', 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.dropWhile(users, 'active'), 'user');\n// => ['fred', 'pebbles']\n\n// using the \"_.matches\" callback shorthand\n_.pluck(_.dropWhile(users, { 'status': 'busy' }), 'user');\n// => ['pebbles']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4171,
            "description": "This method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for, instead of the element itself.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the found element, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n_.findIndex(users, function(chr) { return chr.age < 40; });\n// => 0\n\n// using the \"_.matches\" callback shorthand\n_.findIndex(users, { 'age': 1 });\n// => 2\n\n// using the \"_.property\" callback shorthand\n_.findIndex(users, 'active');\n// => 1"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4223,
            "description": "This method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the found element, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'age': 36, 'active': true },\n  { 'user': 'fred',    'age': 40, 'active': false },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n_.findLastIndex(users, function(chr) { return chr.age < 40; });\n// => 2\n\n// using the \"_.matches\" callback shorthand\n_.findLastIndex(users, { 'age': 40 });\n// => 1\n\n// using the \"_.property\" callback shorthand\n_.findLastIndex(users, 'active');\n// => 0"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4273,
            "description": "Gets the first element of `array`.",
            "static": 1,
            "memberof": "_",
            "alias": "head",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the first element of `array`.",
                "type": "*"
            },
            "example": [
                "\n\n_.first([1, 2, 3]);\n// => 1\n\n_.first([]);\n// => undefined"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4294,
            "description": "Flattens a nested array. If `isDeep` is `true` the array is recursively\nflattened, otherwise it is only flattened a single level.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to flatten.",
                    "type": "Array"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep flatten.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new flattened array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.flatten([1, [2], [3, [[4]]]]);\n// => [1, 2, 3, [[4]]];\n\n// using `isDeep`\n_.flatten([1, [2], [3, [[4]]]], true);\n// => [1, 2, 3, 4];"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4322,
            "description": "Recursively flattens a nested array.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to recursively flatten.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new flattened array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.flattenDeep([1, [2], [3, [[4]]]]);\n// => [1, 2, 3, 4];"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4340,
            "description": "Gets the index at which the first occurrence of `value` is found in `array`\nusing `SameValueZero` for equality comparisons. If `fromIndex` is negative,\nit is used as the offset from the end of `array`. If `array` is sorted\nproviding `true` for `fromIndex` performs a faster binary search.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from or `true`\n to perform a binary search on a sorted array.",
                    "type": "Boolean|number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.indexOf([1, 2, 3, 1, 2, 3], 2);\n// => 1\n\n// using `fromIndex`\n_.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n// => 4\n\n// performing a binary search\n_.indexOf([4, 4, 5, 5, 6, 6], 5, true);\n// => 2"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4388,
            "description": "Gets all but the last element of `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.initial([1, 2, 3]);\n// => [1, 2]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4405,
            "description": "Creates an array of unique values in all provided arrays using `SameValueZero`\nfor equality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to inspect.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of shared values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n// => [1, 2]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4466,
            "description": "Gets the last element of `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the last element of `array`.",
                "type": "*"
            },
            "example": [
                "\n\n_.last([1, 2, 3]);\n// => 3"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4484,
            "description": "This method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from\n or `true` to perform a binary search on a sorted array.",
                    "type": "Boolean|number",
                    "optional": true,
                    "optdefault": "array.length-1"
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n// => 4\n\n// using `fromIndex`\n_.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n// => 1\n\n// performing a binary search\n_.lastIndexOf([4, 4, 5, 5, 6, 6], 5, true);\n// => 3"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4533,
            "description": "Removes all provided values from `array` using `SameValueZero` for equality\ncomparisons.\n\n**Notes:**\n - Unlike `_.without`, this method mutates `array`.\n - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n   except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n   for more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to remove.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [1, 2, 3, 1, 2, 3];\n_.pull(array, 2, 3);\nconsole.log(array);\n// => [1, 1]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4576,
            "description": "Removes elements from `array` corresponding to the given indexes and returns\nan array of the removed elements. Indexes may be specified as an array of\nindexes or as individual arguments.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "indexes",
                    "description": "The indexes of elements to remove,\n specified as individual indexes or arrays of indexes.",
                    "type": "...(number|number[])",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of removed elements.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [5, 10, 15, 20];\nvar evens = _.pullAt(array, [1, 3]);\n\nconsole.log(array);\n// => [5, 15]\n\nconsole.log(evens);\n// => [10, 20]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4605,
            "description": "Removes all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is bound to\n`thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** Unlike `_.filter`, this method mutates `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of removed elements.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) { return n % 2 == 0; });\n\nconsole.log(array);\n// => [1, 3]\n\nconsole.log(evens);\n// => [2, 4]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4656,
            "description": "Gets all but the first element of `array`.",
            "static": 1,
            "memberof": "_",
            "alias": "tail",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.rest([1, 2, 3]);\n// => [2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4674,
            "description": "Creates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This function is used instead of `Array#slice` to support node\nlists in IE < 9 and to ensure dense arrays are returned.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to slice.",
                    "type": "Array"
                },
                {
                    "name": "start",
                    "description": "The start position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "array.length"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4700,
            "description": "Uses a binary search to determine the lowest index at which `value` should\nbe inserted into `array` in order to maintain its sort order. If an iteratee\nfunction is provided it is invoked for `value` and each element of `array`\nto compute their sort ranking. The iteratee is bound to `thisArg` and\ninvoked with one argument; (value).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.sortedIndex([30, 50], 40);\n// => 1\n\n_.sortedIndex([4, 4, 5, 5, 6, 6], 5);\n// => 2\n\nvar dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\n// using an iteratee function\n_.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n  return this.data[word];\n}, dict);\n// => 1\n\n// using the \"_.property\" callback shorthand\n_.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n// => 1"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4752,
            "description": "This method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.sortedLastIndex([4, 4, 5, 5, 6, 6], 5);\n// => 4"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4780,
            "description": "Creates a slice of `array` with `n` elements taken from the beginning.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to take.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.take([1, 2, 3]);\n// => [1]\n\n_.take([1, 2, 3], 2);\n// => [1, 2]\n\n_.take([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.take([1, 2, 3], 0);\n// => []"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4816,
            "description": "Creates a slice of `array` with `n` elements taken from the end.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to take.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.takeRight([1, 2, 3]);\n// => [3]\n\n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n\n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.takeRight([1, 2, 3], 0);\n// => []"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4853,
            "description": "Creates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is bound to `thisArg`\nand invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per element.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.takeRightWhile([1, 2, 3], function(n) { return n > 1; });\n// => [2, 3]\n\nvar users = [\n  { 'user': 'barney',  'status': 'busy', 'active': false },\n  { 'user': 'fred',    'status': 'busy', 'active': true },\n  { 'user': 'pebbles', 'status': 'away', 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.takeRightWhile(users, 'active'), 'user');\n// => ['fred', 'pebbles']\n\n// using the \"_.matches\" callback shorthand\n_.pluck(_.takeRightWhile(users, { 'status': 'away' }), 'user');\n// => ['pebbles']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4903,
            "description": "Creates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is bound to\n`thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per element.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.takeWhile([1, 2, 3], function(n) { return n < 3; });\n// => [1, 2]\n\nvar users = [\n  { 'user': 'barney',  'status': 'busy', 'active': true },\n  { 'user': 'fred',    'status': 'busy', 'active': false },\n  { 'user': 'pebbles', 'status': 'away', 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.takeWhile(users, 'active'), 'user');\n// => ['barney']\n\n// using the \"_.matches\" callback shorthand\n_.pluck(_.takeWhile(users, { 'status': 'busy' }), 'user');\n// => ['barney', 'fred']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4954,
            "description": "Creates an array of unique values, in order, of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to inspect.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of combined values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n// => [1, 2, 3, 5, 4]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 4977,
            "description": "Creates a duplicate-value-free version of an array using `SameValueZero`\nfor equality comparisons. Providing `true` for `isSorted` performs a faster\nsearch algorithm for sorted arrays. If an iteratee function is provided it\nis invoked for each value in the array to generate the criterion by which\nuniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\nwith three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "alias": "unique",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "isSorted",
                    "description": "Specify the array is sorted.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.\n If a property name or object is provided it is used to create a \"_.property\"\n or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new duplicate-value-free array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.uniq([1, 2, 1]);\n// => [1, 2]\n\n// using `isSorted`\n_.uniq([1, 1, 2], true);\n// => [1, 2]\n\n// using an iteratee function\n_.uniq([1, 2.5, 1.5, 2], function(n) { return this.floor(n); }, Math);\n// => [1, 2.5]\n\n// using the \"_.property\" callback shorthand\n_.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5045,
            "description": "This method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-`_.zip`\nconfiguration.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array of grouped elements to process.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of regrouped elements.",
                "type": "Array"
            },
            "example": [
                "\n\nvar zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n// => [['fred', 30, true], ['barney', 40, false]]\n\n_.unzip(zipped);\n// => [['fred', 'barney'], [30, 40], [true, false]]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5074,
            "description": "Creates an array excluding all provided values using `SameValueZero` for\nequality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to filter.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to exclude.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n// => [2, 3, 4]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5098,
            "description": "Creates an array that is the symmetric difference of the provided arrays.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\nmore details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to inspect.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.xor([1, 2, 3], [5, 2, 1, 4]);\n// => [3, 5, 4]\n\n_.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n// => [1, 4, 5]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5131,
            "description": "Creates an array of grouped elements, the first of which contains the first\nelements of the given arrays, the second of which contains the second elements\nof the given arrays, and so on.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to process.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of grouped elements.",
                "type": "Array"
            },
            "example": [
                "\n\n_.zip(['fred', 'barney'], [30, 40], [true, false]);\n// => [['fred', 30, true], ['barney', 40, false]]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5156,
            "description": "Creates an object composed from arrays of property names and values. Provide\neither a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\nor two arrays, one of property names and one of corresponding values.",
            "static": 1,
            "memberof": "_",
            "alias": "object",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "props",
                    "description": "The property names.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The property values.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.zipObject(['fred', 'barney'], [30, 40]);\n// => { 'fred': 30, 'barney': 40 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5194,
            "description": "Creates a `lodash` object that wraps `value` with explicit method\nchaining enabled.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new `lodash` object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'age': 36 },\n  { 'user': 'fred',    'age': 40 },\n  { 'user': 'pebbles', 'age': 1 }\n];\n\nvar youngest = _.chain(users)\n  .sortBy('age')\n  .map(function(chr) { return chr.user + ' is ' + chr.age; })\n  .first()\n  .value();\n// => 'pebbles is 1'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5224,
            "description": "This method invokes `interceptor` and returns `value`. The interceptor is\nbound to `thisArg` and invoked with one argument; (value). The purpose of\nthis method is to \"tap into\" a method chain in order to perform operations\non intermediate results within the chain.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to provide to `interceptor`.",
                    "type": "*"
                },
                {
                    "name": "interceptor",
                    "description": "The function to invoke.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `interceptor`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `value`.",
                "type": "*"
            },
            "example": [
                "\n\n_([1, 2, 3])\n .tap(function(array) { array.pop(); })\n .reverse()\n .value();\n// => [2, 1]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5250,
            "description": "This method is like `_.tap` except that it returns the result of `interceptor`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to provide to `interceptor`.",
                    "type": "*"
                },
                {
                    "name": "interceptor",
                    "description": "The function to invoke.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `interceptor`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the result of `interceptor`.",
                "type": "*"
            },
            "example": [
                "\n\n_([1, 2, 3])\n .last()\n .thru(function(value) { return [value]; })\n .value();\n// => [3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5272,
            "description": "Enables explicit method chaining on the wrapper object.",
            "name": "chain",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the `lodash` object.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// without explicit chaining\n_(users).first();\n// => { 'user': 'barney', 'age': 36 }\n\n// with explicit chaining\n_(users).chain()\n  .first()\n  .pick('user')\n  .value();\n// => { 'user': 'barney' }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5301,
            "description": "Reverses the wrapped array so the first element becomes the last, the\nsecond element becomes the second to last, and so on.\n\n**Note:** This method mutates the wrapped array.",
            "name": "reverse",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the new reversed `lodash` object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar array = [1, 2, 3];\n\n_(array).reverse().value()\n// => [3, 2, 1]\n\nconsole.log(array);\n// => [3, 2, 1]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5334,
            "description": "Produces the result of coercing the unwrapped value to a string.",
            "name": "toString",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the coerced string value.",
                "type": "String"
            },
            "example": [
                "\n\n_([1, 2, 3]).toString();\n// => '1,2,3'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5350,
            "description": "Executes the chained sequence to extract the unwrapped value.",
            "name": "value",
            "memberof": "_",
            "alias": "toJSON, valueOf",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the resolved unwrapped value.",
                "type": "*"
            },
            "example": [
                "\n\n_([1, 2, 3]).value();\n// => [1, 2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5369,
            "description": "Creates an array of elements corresponding to the given keys, or indexes,\nof `collection`. Keys may be specified as individual arguments or as arrays\nof keys.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "props",
                    "description": "The property names\n or indexes of elements to pick, specified individually or in arrays.",
                    "type": "...(number|number[]|string|string[])",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of picked elements.",
                "type": "Array"
            },
            "example": [
                "\n\n_.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n// => ['a', 'c', 'e']\n\n_.at(['fred', 'barney', 'pebbles'], 0, 2);\n// => ['fred', 'pebbles']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5397,
            "description": "Checks if `value` is in `collection` using `SameValueZero` for equality\ncomparisons. If `fromIndex` is negative, it is used as the offset from\nthe end of `collection`.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "alias": "contains, include",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "target",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns `true` if a matching element is found, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.includes([1, 2, 3], 1);\n// => true\n\n_.includes([1, 2, 3], 1, 2);\n// => false\n\n_.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n// => true\n\n_.includes('pebbles', 'eb');\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5448,
            "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the number of times the key was returned by `iteratee`.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the composed aggregate object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.countBy([4.3, 6.1, 6.4], function(n) { return Math.floor(n); });\n// => { '4': 1, '6': 2 }\n\n_.countBy([4.3, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n// => { '4': 1, '6': 2 }\n\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5486,
            "description": "Checks if `predicate` returns truthy for **all** elements of `collection`.\nThe predicate is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "all",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.every([true, 1, null, 'yes']);\n// => false\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// using the \"_.property\" callback shorthand\n_.every(users, 'age');\n// => true\n\n// using the \"_.matches\" callback shorthand\n_.every(users, { 'age': 36 });\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5535,
            "description": "Iterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "select",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar evens = _.filter([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n// => [2, 4]\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.filter(users, 'active'), 'user');\n// => ['fred']\n\n// using the \"_.matches\" callback shorthand\n_.pluck(_.filter(users, { 'age': 36 }), 'user');\n// => ['barney']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5581,
            "description": "Iterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "detect",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the matched element, else `undefined`.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n_.result(_.find(users, function(chr) { return chr.age < 40; }), 'user');\n// => 'barney'\n\n// using the \"_.matches\" callback shorthand\n_.result(_.find(users, { 'age': 1 }), 'user');\n// => 'pebbles'\n\n// using the \"_.property\" callback shorthand\n_.result(_.find(users, 'active'), 'user');\n// => 'fred'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5631,
            "description": "This method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the matched element, else `undefined`.",
                "type": "*"
            },
            "example": [
                "\n\n_.findLast([1, 2, 3, 4], function(n) { return n % 2 == 1; });\n// => 3"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5654,
            "description": "Performs a deep comparison between each element in `collection` and the\nsource object, returning the first element that has equivalent property\nvalues.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the matched element, else `undefined`.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'status': 'busy' },\n  { 'user': 'fred',   'age': 40, 'status': 'busy' }\n];\n\n_.result(_.findWhere(users, { 'status': 'busy' }), 'user');\n// => 'barney'\n\n_.result(_.findWhere(users, { 'age': 40 }), 'user');\n// => 'fred'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5682,
            "description": "Iterates over elements of `collection` invoking `iteratee` for each element.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection). Iterator functions may exit iteration early\nby explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a `length` property\nare iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\nmay be used for object iteration.",
            "static": 1,
            "memberof": "_",
            "alias": "each",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "example": [
                "\n\n_([1, 2, 3]).forEach(function(n) { console.log(n); }).value();\n// => logs each value from left to right and returns the array\n\n_.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(n, key) { console.log(n, key); });\n// => logs each value-key pair and returns the object (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5714,
            "description": "This method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
            "static": 1,
            "memberof": "_",
            "alias": "eachRight",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "example": [
                "\n\n_([1, 2, 3]).forEachRight(function(n) { console.log(n); }).join(',');\n// => logs each value from right to left and returns the array"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5737,
            "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is an array of the elements responsible for generating the key.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the composed aggregate object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.groupBy([4.2, 6.1, 6.4], function(n) { return Math.floor(n); });\n// => { '4': [4.2], '6': [6.1, 6.4] }\n\n_.groupBy([4.2, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n// => { '4': [4.2], '6': [6.1, 6.4] }\n\n// using the \"_.property\" callback shorthand\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5780,
            "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the last element responsible for generating the key. The\niteratee function is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the composed aggregate object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar keyData = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n\n_.indexBy(keyData, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\n_.indexBy(keyData, function(object) { return String.fromCharCode(object.code); });\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\n_.indexBy(keyData, function(object) { return this.fromCharCode(object.code); }, String);\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5823,
            "description": "Invokes the method named by `methodName` on each element in `collection`,\nreturning an array of the results of each invoked method. Any additional\narguments are provided to each invoked method. If `methodName` is a function\nit is invoked for, and `this` bound to, each element in `collection`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "methodName",
                    "description": "The name of the method to invoke or\n the function invoked per iteration.",
                    "type": "Function|string"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the method with.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of results.",
                "type": "Array"
            },
            "example": [
                "\n\n_.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n\n_.invoke([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5849,
            "description": "Creates an array of values by running each element in `collection` through\n`iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\narguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "collect",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new mapped array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.map([1, 2, 3], function(n) { return n * 3; });\n// => [3, 6, 9]\n\n_.map({ 'one': 1, 'two': 2, 'three': 3 }, function(n) { return n * 3; });\n// => [3, 6, 9] (iteration order is not guaranteed)\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\n// using the \"_.property\" callback shorthand\n_.map(users, 'user');\n// => ['barney', 'fred']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5894,
            "description": "Gets the maximum value of `collection`. If `collection` is empty or falsey\n`-Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments; (value, index, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.\n If a property name or object is provided it is used to create a \"_.property\"\n or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the maximum value.",
                "type": "*"
            },
            "example": [
                "\n\n_.max([4, 2, 8, 6]);\n// => 8\n\n_.max([]);\n// => -Infinity\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n_.max(users, function(chr) { return chr.age; });\n// => { 'user': 'fred', 'age': 40 };\n\n// using the \"_.property\" callback shorthand\n_.max(users, 'age');\n// => { 'user': 'fred', 'age': 40 };"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5939,
            "description": "Gets the minimum value of `collection`. If `collection` is empty or falsey\n`Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments; (value, index, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.\n If a property name or object is provided it is used to create a \"_.property\"\n or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the minimum value.",
                "type": "*"
            },
            "example": [
                "\n\n_.min([4, 2, 8, 6]);\n// => 2\n\n_.min([]);\n// => Infinity\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n_.min(users, function(chr) { return chr.age; });\n// => { 'user': 'barney', 'age': 36 };\n\n// using the \"_.property\" callback shorthand\n_.min(users, 'age');\n// => { 'user': 'barney', 'age': 36 };"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 5984,
            "description": "Creates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, while the second of which\ncontains elements `predicate` returns falsey for. The predicate is bound\nto `thisArg` and invoked with three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of grouped elements.",
                "type": "Array"
            },
            "example": [
                "\n\n_.partition([1, 2, 3], function(n) { return n % 2; });\n// => [[1, 3], [2]]\n\n_.partition([1.2, 2.3, 3.4], function(n) { return this.floor(n) % 2; }, Math);\n// => [[1, 3], [2]]\n\nvar users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n// using the \"_.matches\" callback shorthand\n_.map(_.partition(users, { 'age': 1 }), function(array) { return _.pluck(array, 'user'); });\n// => [['pebbles'], ['barney', 'fred']]\n\n// using the \"_.property\" callback shorthand\n_.map(_.partition(users, 'active'), function(array) { return _.pluck(array, 'user'); });\n// => [['fred'], ['barney', 'pebbles']]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6032,
            "description": "Gets the value of `key` from all elements in `collection`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "key",
                    "description": "The key of the property to pluck.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the property values.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n_.pluck(users, 'user');\n// => ['barney', 'fred']\n\nvar userIndex = _.indexBy(users, 'user');\n_.pluck(userIndex, 'age');\n// => [36, 40] (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6059,
            "description": "Reduces `collection` to a value which is the accumulated result of running\neach element in `collection` through `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not provided the first element of `collection` is used as the initial\nvalue. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n(accumulator, value, index|key, collection).",
            "static": 1,
            "memberof": "_",
            "alias": "foldl, inject",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "example": [
                "\n\nvar sum = _.reduce([1, 2, 3], function(sum, n) { return sum + n; });\n// => 6\n\nvar mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n  result[key] = n * 3;\n  return result;\n}, {});\n// => { 'a': 3, 'b': 6, 'c': 9 } (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6092,
            "description": "This method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
            "static": 1,
            "memberof": "_",
            "alias": "foldr",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "example": [
                "\n\nvar array = [[0, 1], [2, 3], [4, 5]];\n_.reduceRight(array, function(flattened, other) { return flattened.concat(other); }, []);\n// => [4, 5, 2, 3, 0, 1]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6116,
            "description": "The opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar odds = _.reject([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n// => [1, 3]\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.reject(users, 'active'), 'user');\n// => ['barney']\n\n// using the \"_.matches\" callback shorthand\n_.pluck(_.reject(users, { 'age': 36 }), 'user');\n// => ['fred']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6162,
            "description": "Gets a random element or `n` random elements from a collection.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to sample.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "n",
                    "description": "The number of elements to sample.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the random sample(s).",
                "type": "*"
            },
            "example": [
                "\n\n_.sample([1, 2, 3, 4]);\n// => 2\n\n_.sample([1, 2, 3, 4], 2);\n// => [3, 1]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6191,
            "description": "Creates an array of shuffled values, using a version of the Fisher-Yates\nshuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to shuffle.",
                    "type": "Array|Object|string"
                }
            ],
            "return": {
                "description": "Returns the new shuffled array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.shuffle([1, 2, 3, 4]);\n// => [4, 1, 3, 2]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6223,
            "description": "Gets the size of `collection` by returning `collection.length` for\narray-like values or the number of own enumerable properties for objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to inspect.",
                    "type": "Array|Object|string"
                }
            ],
            "return": {
                "description": "Returns the size of `collection`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.size([1, 2]);\n// => 2\n\n_.size({ 'one': 1, 'two': 2, 'three': 3 });\n// => 3\n\n_.size('pebbles');\n// => 7"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6248,
            "description": "Checks if `predicate` returns truthy for **any** element of `collection`.\nThe function returns as soon as it finds a passing value and does not iterate\nover the entire collection. The predicate is bound to `thisArg` and invoked\nwith three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "any",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if any element passes the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.some([null, 0, 'yes', false], Boolean);\n// => true\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n// using the \"_.property\" callback shorthand\n_.some(users, 'active');\n// => true\n\n// using the \"_.matches\" callback shorthand\n_.some(users, { 'age': 1 });\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6298,
            "description": "Creates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection through `iteratee`. This method performs\na stable sort, that is, it preserves the original sort order of equal elements.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function\n invoked per iteration. If a property name or an object is provided it is\n used to create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Array|Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new sorted array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.sortBy([1, 2, 3], function(n) { return Math.sin(n); });\n// => [3, 1, 2]\n\n_.sortBy([1, 2, 3], function(n) { return this.sin(n); }, Math);\n// => [3, 1, 2]\n\nvar users = [\n  { 'user': 'fred' },\n  { 'user': 'pebbles' },\n  { 'user': 'barney' }\n];\n\n// using the \"_.property\" callback shorthand\n_.pluck(_.sortBy(users, 'user'), 'user');\n// => ['barney', 'fred', 'pebbles']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6354,
            "description": "This method is like `_.sortBy` except that it sorts by property names\ninstead of an iteratee function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "props",
                    "description": "The property names to sort by,\n specified as individual property names or arrays of property names.",
                    "type": "...(string|string[])"
                }
            ],
            "return": {
                "description": "Returns the new sorted array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 26 },\n  { 'user': 'fred',   'age': 30 }\n];\n\n_.map(_.sortByAll(users, ['user', 'age']), _.values);\n// => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6399,
            "description": "Performs a deep comparison between each element in `collection` and the\nsource object, returning an array of all elements that have equivalent\nproperty values.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'status': 'busy', 'pets': ['hoppy'] },\n  { 'user': 'fred',   'age': 40, 'status': 'busy', 'pets': ['baby puss', 'dino'] }\n];\n\n_.pluck(_.where(users, { 'age': 36 }), 'user');\n// => ['barney']\n\n_.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n// => ['fred']\n\n_.pluck(_.where(users, { 'status': 'busy' }), 'user');\n// => ['barney', 'fred']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6432,
            "description": "Gets the number of milliseconds that have elapsed since the Unix epoch\n(1 January 1970 00:00:00 UTC).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Date"
            ],
            "example": [
                "\n\n_.defer(function(stamp) { console.log(_.now() - stamp); }, _.now());\n// => logs the number of milliseconds it took for the deferred function to be invoked"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6450,
            "description": "The opposite of `_.before`; this method creates a function that invokes\n`func` once it is called `n` or more times.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number of calls before `func` is invoked.",
                    "type": "Number"
                },
                {
                    "name": "func",
                    "description": "The function to restrict.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new restricted function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar saves = ['profile', 'settings'];\n\nvar done = _.after(saves.length, function() {\n  console.log('done saving!');\n});\n\n_.forEach(saves, function(type) {\n  asyncSave({ 'type': type, 'complete': done });\n});\n// => logs 'done saving!' after the two async saves have completed"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6491,
            "description": "Creates a function that accepts up to `n` arguments ignoring any\nadditional arguments.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to cap arguments for.",
                    "type": "Function"
                },
                {
                    "name": "n",
                    "description": "The arity cap.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\n_.map(['6', '8', '10'], _.ary(parseInt, 1));\n// => [6, 8, 10]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6515,
            "description": "Creates a function that invokes `func`, with the `this` binding and arguments\nof the created function, while it is called less than `n` times. Subsequent\ncalls to the created function return the result of the last `func` invocation.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number of calls at which `func` is no longer invoked.",
                    "type": "Number"
                },
                {
                    "name": "func",
                    "description": "The function to restrict.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new restricted function.",
                "type": "Function"
            },
            "example": [
                "\n\njQuery('#add').on('click', _.before(5, addContactToList));\n// => allows adding up to 4 contacts to the list"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6552,
            "description": "Creates a function that invokes `func` with the `this` binding of `thisArg`\nand prepends any additional `_.bind` arguments to those provided to the\nbound function.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind` this method does not set the `length`\nproperty of bound functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to bind.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*"
                },
                {
                    "name": "args",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar greet = function(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n};\n\nvar object = { 'user': 'fred' };\n\nvar bound = _.bind(greet, object, 'hi');\nbound('!');\n// => 'hi fred!'\n\n// using placeholders\nvar bound = _.bind(greet, object, _, '!');\nbound('hi');\n// => 'hi fred!'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6598,
            "description": "Binds methods of an object to the object itself, overwriting the existing\nmethod. Method names may be specified as individual arguments or as arrays\nof method names. If no method names are provided all enumerable function\nproperties, own and inherited, of `object` are bound.\n\n**Note:** This method does not set the `length` property of bound functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to bind and assign the bound methods to.",
                    "type": "Object"
                },
                {
                    "name": "methodNames",
                    "description": "The object method names to bind,\n specified as individual method names or arrays of method names.",
                    "type": "...(string|string[])",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nvar view = {\n  'label': 'docs',\n  'onClick': function() { console.log('clicked ' + this.label); }\n};\n\n_.bindAll(view);\njQuery('#docs').on('click', view.onClick);\n// => logs 'clicked docs' when the element is clicked"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6632,
            "description": "Creates a function that invokes the method at `object[key]` and prepends\nany additional `_.bindKey` arguments to those provided to the bound function.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist.\nSee [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object the method belongs to.",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "The key of the method.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar object = {\n  'user': 'fred',\n  'greet': function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\n\nvar bound = _.bindKey(object, 'greet', 'hi');\nbound('!');\n// => 'hi fred!'\n\nobject.greet = function(greeting, punctuation) {\n  return greeting + 'ya ' + this.user + punctuation;\n};\n\nbound('!');\n// => 'hiya fred!'\n\n// using placeholders\nvar bound = _.bindKey(object, 'greet', _, '!');\nbound('hi');\n// => 'hiya fred!'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6687,
            "description": "Creates a function that accepts one or more arguments of `func` that when\ncalled either invokes `func` returning its result, if all `func` arguments\nhave been provided, or returns a function that accepts one or more of the\nremaining `func` arguments, and so on. The arity of `func` may be specified\nif `func.length` is not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the `length` property of curried functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to curry.",
                    "type": "Function"
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new curried function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curry(abc);\n\ncurried(1)(2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// using placeholders\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6736,
            "description": "This method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the `length` property of curried functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to curry.",
                    "type": "Function"
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new curried function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curryRight(abc);\n\ncurried(3)(2)(1);\n// => [1, 2, 3]\n\ncurried(2, 3)(1);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// using placeholders\ncurried(3)(1, _)(2);\n// => [1, 2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6782,
            "description": "Creates a function that delays invoking `func` until after `wait` milliseconds\nhave elapsed since the last time it was invoked. The created function comes\nwith a `cancel` method to cancel delayed invocations. Provide an options\nobject to indicate that `func` should be invoked on the leading and/or\ntrailing edge of the `wait` timeout. Subsequent calls to the debounced\nfunction return the result of the last `func` invocation.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the debounced function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.debounce` and `_.throttle`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to debounce.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to delay.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "leading",
                            "description": "Specify invoking on the leading\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "maxWait",
                            "description": "The maximum time `func` is allowed to be\n delayed before it is invoked.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "trailing",
                            "description": "Specify invoking on the trailing\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns the new debounced function.",
                "type": "Function"
            },
            "example": [
                "\n\n// avoid costly calculations while the window size is in flux\njQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\n// invoke `sendMail` when the click event is fired, debouncing subsequent calls\njQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n  'leading': true,\n  'trailing': false\n}));\n\n// ensure `batchLog` is invoked once after 1 second of debounced calls\nvar source = new EventSource('/stream');\njQuery(source).on('message', _.debounce(batchLog, 250, {\n  'maxWait': 1000\n}));\n\n// cancel a debounced call\nvar todoChanges = _.debounce(batchLog, 1000);\nObject.observe(models.todo, todoChanges);\n\nObject.observe(models, function(changes) {\n  if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n    todoChanges.cancel();\n  }\n}, ['delete']);\n\n// ...at some point `models.todo` is changed\nmodels.todo.completed = true;\n\n// ...before 1 second has passed `models.todo` is deleted\n// which cancels the debounced `todoChanges` call\ndelete models.todo;"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6958,
            "description": "Defers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it is invoked.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to defer.",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the function with.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the timer id.",
                "type": "Number"
            },
            "example": [
                "\n\n_.defer(function(text) { console.log(text); }, 'deferred');\n// logs 'deferred' after one or more milliseconds"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6977,
            "description": "Invokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it is invoked.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to delay.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to delay invocation.",
                    "type": "Number"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the function with.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the timer id.",
                "type": "Number"
            },
            "example": [
                "\n\n_.delay(function(text) { console.log(text); }, 1000, 'later');\n// => logs 'later' after one second"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 6997,
            "description": "Creates a function that returns the result of invoking the provided\nfunctions with the `this` binding of the created function, where each\nsuccessive invocation is supplied the return value of the previous.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "funcs",
                    "description": "Functions to invoke.",
                    "type": "...Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flow(add, square);\naddSquare(1, 2);\n// => 9"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7042,
            "description": "This method is like `_.flow` except that it creates a function that\ninvokes the provided functions from right to left.",
            "static": 1,
            "memberof": "_",
            "alias": "backflow, compose",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "funcs",
                    "description": "Functions to invoke.",
                    "type": "...Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flowRight(square, add);\naddSquare(1, 2);\n// => 9"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7087,
            "description": "Creates a function that memoizes the result of `func`. If `resolver` is\nprovided it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is coerced to a string and used as the\ncache key. The `func` is invoked with the `this` binding of the memoized\nfunction.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the ES `Map` method interface\nof `get`, `has`, and `set`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to have its output memoized.",
                    "type": "Function"
                },
                {
                    "name": "resolver",
                    "description": "The function to resolve the cache key.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new memoizing function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar upperCase = _.memoize(function(string) {\n  return string.toUpperCase();\n});\n\nupperCase('fred');\n// => 'FRED'\n\n// modifying the result cache\nupperCase.cache.set('fred', 'BARNEY');\nupperCase('fred');\n// => 'BARNEY'\n\n// replacing `_.memoize.Cache`\nvar object = { 'user': 'fred' };\nvar other = { 'user': 'barney' };\nvar identity = _.memoize(_.identity);\n\nidentity(object);\n// => { 'user': 'fred' }\nidentity(other);\n// => { 'user': 'fred' }\n\n_.memoize.Cache = WeakMap;\nvar identity = _.memoize(_.identity);\n\nidentity(object);\n// => { 'user': 'fred' }\nidentity(other);\n// => { 'user': 'barney' }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7159,
            "description": "Creates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "predicate",
                    "description": "The predicate to negate.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nfunction isEven(n) {\n  return n % 2 == 0;\n}\n\n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n// => [1, 3, 5]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7187,
            "description": "Creates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first call. The `func` is invoked\nwith the `this` binding of the created function.",
            "static": 1,
            "memberof": "_",
            "type": "Function",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to restrict.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new restricted function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// `initialize` invokes `createApplication` once"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7209,
            "description": "Creates a function that invokes `func` with `partial` arguments prepended\nto those provided to the new function. This method is like `_.bind` except\nit does **not** alter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the `length` property of partially\napplied functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to partially apply arguments to.",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new partially applied function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar greet = function(greeting, name) {\n  return greeting + ' ' + name;\n};\n\nvar sayHelloTo = _.partial(greet, 'hello');\nsayHelloTo('fred');\n// => 'hello fred'\n\n// using placeholders\nvar greetFred = _.partial(greet, _, 'fred');\ngreetFred('hi');\n// => 'hi fred'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7248,
            "description": "This method is like `_.partial` except that partially applied arguments\nare appended to those provided to the new function.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the `length` property of partially\napplied functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to partially apply arguments to.",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new partially applied function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar greet = function(greeting, name) {\n  return greeting + ' ' + name;\n};\n\nvar greetFred = _.partialRight(greet, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\n// using placeholders\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\nsayHelloTo('fred');\n// => 'hello fred'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7286,
            "description": "Creates a function that invokes `func` with arguments arranged according\nto the specified indexes where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to rearrange arguments for.",
                    "type": "Function"
                },
                {
                    "name": "indexes",
                    "description": "The arranged argument indexes,\n specified as individual indexes or arrays of indexes.",
                    "type": "...(number|number[])"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, 2, 0, 1);\n\nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']\n\nvar map = _.rearg(_.map, [1, 0]);\nmap(function(n) { return n * 3; }, [1, 2, 3]);\n// => [3, 6, 9]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7317,
            "description": "Creates a function that only invokes `func` at most once per every `wait`\nmilliseconds. The created function comes with a `cancel` method to cancel\ndelayed invocations. Provide an options object to indicate that `func`\nshould be invoked on the leading and/or trailing edge of the `wait` timeout.\nSubsequent calls to the throttled function return the result of the last\n`func` call.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the throttled function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.throttle` and `_.debounce`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to throttle.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to throttle invocations to.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "leading",
                            "description": "Specify invoking on the leading\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "trailing",
                            "description": "Specify invoking on the trailing\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns the new throttled function.",
                "type": "Function"
            },
            "example": [
                "\n\n// avoid excessively updating the position while scrolling\njQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\n// invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\nvar throttled =  _.throttle(renewToken, 300000, { 'trailing': false })\njQuery('.interactive').on('click', throttled);\n\n// cancel a trailing throttled call\njQuery(window).on('popstate', throttled.cancel);"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7374,
            "description": "Creates a function that provides `value` to the wrapper function as its\nfirst argument. Any additional arguments provided to the function are\nappended to those provided to the wrapper function. The wrapper is invoked\nwith the `this` binding of the created function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                },
                {
                    "name": "wrapper",
                    "description": "The wrapper function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar p = _.wrap(_.escape, function(func, text) {\n  return '<p>' + func(text) + '</p>';\n});\n\np('fred, barney, & pebbles');\n// => '<p>fred, barney, &amp; pebbles</p>'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7402,
            "description": "Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\notherwise they are assigned by reference. If `customizer` is provided it is\ninvoked to produce the cloned values. If `customizer` returns `undefined`\ncloning is handled by the method instead. The `customizer` is bound to\n`thisArg` and invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the structured clone algorithm.\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to clone.",
                    "type": "*"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep clone.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize cloning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the cloned value.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\nvar shallow = _.clone(users);\nshallow[0] === users[0];\n// => true\n\nvar deep = _.clone(users, true);\ndeep[0] === users[0];\n// => false\n\n// using a customizer callback\nvar body = _.clone(document.body, function(value) {\n  return _.isElement(value) ? value.cloneNode(false) : undefined;\n});\n\nbody === document.body\n// => false\nbody.nodeName\n// => BODY\nbody.childNodes.length;\n// => 0"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7462,
            "description": "Creates a deep clone of `value`. If `customizer` is provided it is invoked\nto produce the cloned values. If `customizer` returns `undefined` cloning\nis handled by the method instead. The `customizer` is bound to `thisArg`\nand invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the structured clone algorithm.\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to deep clone.",
                    "type": "*"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize cloning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the deep cloned value.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\nvar deep = _.cloneDeep(users);\ndeep[0] === users[0];\n// => false\n\n// using a customizer callback\nvar el = _.cloneDeep(document.body, function(value) {\n  return _.isElement(value) ? value.cloneNode(true) : undefined;\n});\n\nbody === document.body\n// => false\nbody.nodeName\n// => BODY\nbody.childNodes.length;\n// => 20"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7510,
            "description": "Checks if `value` is classified as an `arguments` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n(function() { return _.isArguments(arguments); })();\n// => true\n\n_.isArguments([1, 2, 3]);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7531,
            "description": "Checks if `value` is classified as an `Array` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isArray([1, 2, 3]);\n// => true\n\n(function() { return _.isArray(arguments); })();\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7551,
            "description": "Checks if `value` is classified as a boolean primitive or object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isBoolean(false);\n// => true\n\n_.isBoolean(null);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7571,
            "description": "Checks if `value` is classified as a `Date` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isDate(new Date);\n// => true\n\n_.isDate('Mon April 23 2012');\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7591,
            "description": "Checks if `value` is a DOM element.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a DOM element, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isElement(document.body);\n// => true\n\n_.isElement('<body>');\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7618,
            "description": "Checks if a value is empty. A value is considered empty unless it is an\n`arguments` object, array, string, or jQuery-like collection with a length\ngreater than `0` or an object with own enumerable properties.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to inspect.",
                    "type": "Array|Object|string"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is empty, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isEmpty(null);\n// => true\n\n_.isEmpty(true);\n// => true\n\n_.isEmpty(1);\n// => true\n\n_.isEmpty([1, 2, 3]);\n// => false\n\n_.isEmpty({ 'a': 1 });\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7657,
            "description": "Performs a deep comparison between two values to determine if they are\nequivalent. If `customizer` is provided it is invoked to compare values.\nIf `customizer` returns `undefined` comparisons are handled by the method\ninstead. The `customizer` is bound to `thisArg` and invoked with three\narguments; (value, other [, index|key]).\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Functions and DOM nodes\nare **not** supported. Provide a customizer function to extend support\nfor comparing other values.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to compare.",
                    "type": "*"
                },
                {
                    "name": "other",
                    "description": "The other value to compare.",
                    "type": "*"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the values are equivalent, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred' };\nvar other = { 'user': 'fred' };\n\nobject == other;\n// => false\n\n_.isEqual(object, other);\n// => true\n\n// using a customizer callback\nvar array = ['hello', 'goodbye'];\nvar other = ['hi', 'goodbye'];\n\n_.isEqual(array, other, function(value, other) {\n  return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n});\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7706,
            "description": "Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is an error object, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isError(new Error);\n// => true\n\n_.isError(Error);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7727,
            "description": "Checks if `value` is a finite primitive number.\n\n**Note:** This method is based on ES `Number.isFinite`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a finite number, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isFinite(10);\n// => true\n\n_.isFinite('10');\n// => false\n\n_.isFinite(true);\n// => false\n\n_.isFinite(Object(10));\n// => false\n\n_.isFinite(Infinity);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7760,
            "description": "Checks if `value` is classified as a `Function` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isFunction(_);\n// => true\n\n_.isFunction(/abc/);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7791,
            "description": "Checks if `value` is the language type of `Object`.\n(e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\n**Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is an object, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isObject({});\n// => true\n\n_.isObject([1, 2, 3]);\n// => true\n\n_.isObject(1);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7820,
            "description": "Performs a deep comparison between `object` and `source` to determine if\n`object` contains equivalent property values. If `customizer` is provided\nit is invoked to compare values. If `customizer` returns `undefined`\ncomparisons are handled by the method instead. The `customizer` is bound\nto `thisArg` and invoked with three arguments; (value, other, index|key).\n\n**Note:** This method supports comparing properties of arrays, booleans,\n`Date` objects, numbers, `Object` objects, regexes, and strings. Functions\nand DOM nodes are **not** supported. Provide a customizer function to extend\nsupport for comparing other values.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "source",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if `object` is a match, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40 };\n\n_.isMatch(object, { 'age': 40 });\n// => true\n\n_.isMatch(object, { 'age': 36 });\n// => false\n\n// using a customizer callback\nvar object = { 'greeting': 'hello' };\nvar source = { 'greeting': 'hi' };\n\n_.isMatch(object, source, function(value, other) {\n  return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n});\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7882,
            "description": "Checks if `value` is `NaN`.\n\n**Note:** This method is not the same as native `isNaN` which returns `true`\nfor `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is `NaN`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNaN(NaN);\n// => true\n\n_.isNaN(new Number(NaN));\n// => true\n\nisNaN(undefined);\n// => true\n\n_.isNaN(undefined);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7914,
            "description": "Checks if `value` is a native function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a native function, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNative(Array.prototype.push);\n// => true\n\n_.isNative(_);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7940,
            "description": "Checks if `value` is `null`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is `null`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNull(null);\n// => true\n\n_.isNull(void 0);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7960,
            "description": "Checks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\nas numbers, use the `_.isFinite` method.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNumber(8.4);\n// => true\n\n_.isNumber(NaN);\n// => true\n\n_.isNumber('8.4');\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 7986,
            "description": "Checks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.\n\n**Note:** This method assumes objects created by the `Object` constructor\nhave no inherited enumerable properties.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a plain object, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n}\n\n_.isPlainObject(new Foo);\n// => false\n\n_.isPlainObject([1, 2, 3]);\n// => false\n\n_.isPlainObject({ 'x': 0, 'y': 0 });\n// => true\n\n_.isPlainObject(Object.create(null));\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8028,
            "description": "Checks if `value` is classified as a `RegExp` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isRegExp(/abc/);\n// => true\n\n_.isRegExp('/abc/');\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8048,
            "description": "Checks if `value` is classified as a `String` primitive or object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isString('abc');\n// => true\n\n_.isString(1);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8068,
            "description": "Checks if `value` is classified as a typed array.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isTypedArray(new Uint8Array);\n// => true\n\n_.isTypedArray([]);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8088,
            "description": "Checks if `value` is `undefined`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is `undefined`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isUndefined(void 0);\n// => true\n\n_.isUndefined(null);\n// => false"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8108,
            "description": "Converts `value` to an array.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to convert.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the converted array.",
                "type": "Array"
            },
            "example": [
                "\n\n(function() { return _.toArray(arguments).slice(1); })(1, 2, 3);\n// => [2, 3]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8132,
            "description": "Converts `value` to a plain object flattening inherited enumerable\nproperties of `value` to own properties of the plain object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to convert.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the converted plain object.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8161,
            "description": "Assigns own enumerable properties of source object(s) to the destination\nobject. Subsequent sources overwrite property assignments of previous sources.\nIf `customizer` is provided it is invoked to produce the assigned values.\nThe `customizer` is bound to `thisArg` and invoked with five arguments;\n(objectValue, sourceValue, key, object, source).",
            "static": 1,
            "memberof": "_",
            "alias": "extend",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects.",
                    "type": "...Object",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize assigning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\n_.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n// => { 'user': 'fred', 'age': 40 }\n\n// using a customizer callback\nvar defaults = _.partialRight(_.assign, function(value, other) {\n  return typeof value == 'undefined' ? other : value;\n});\n\ndefaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n// => { 'user': 'barney', 'age': 36 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8192,
            "description": "Creates an object that inherits from the given `prototype` object. If a\n`properties` object is provided its own enumerable properties are assigned\nto the created object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "prototype",
                    "description": "The object to inherit from.",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "The properties to assign to the object.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\nfunction Circle() {\n  Shape.call(this);\n}\n\nCircle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n\nvar circle = new Circle;\ncircle instanceof Circle;\n// => true\n\ncircle instanceof Shape;\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8232,
            "description": "Assigns own enumerable properties of source object(s) to the destination\nobject for all destination properties that resolve to `undefined`. Once a\nproperty is set, additional defaults of the same property are ignored.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects.",
                    "type": "...Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\n_.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n// => { 'user': 'barney', 'age': 36 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8257,
            "description": "This method is like `_.findIndex` except that it returns the key of the\nfirst element `predicate` returns truthy for, instead of the element itself.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to search.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the key of the matched element, else `undefined`.",
                "type": "String|undefined"
            },
            "example": [
                "\n\nvar users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findKey(users, function(chr) { return chr.age < 40; });\n// => 'barney' (iteration order is not guaranteed)\n\n// using the \"_.matches\" callback shorthand\n_.findKey(users, { 'age': 1 });\n// => 'pebbles'\n\n// using the \"_.property\" callback shorthand\n_.findKey(users, 'active');\n// => 'barney'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8301,
            "description": "This method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to search.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the key of the matched element, else `undefined`.",
                "type": "String|undefined"
            },
            "example": [
                "\n\nvar users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findLastKey(users, function(chr) { return chr.age < 40; });\n// => returns `pebbles` assuming `_.findKey` returns `barney`\n\n// using the \"_.matches\" callback shorthand\n_.findLastKey(users, { 'age': 36 });\n// => 'barney'\n\n// using the \"_.property\" callback shorthand\n_.findLastKey(users, 'active');\n// => 'pebbles'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8345,
            "description": "Iterates over own and inherited enumerable properties of an object invoking\n`iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\nwith three arguments; (value, key, object). Iterator functions may exit\niteration early by explicitly returning `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forIn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => logs 'a', 'b', and 'c' (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8379,
            "description": "This method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forInRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8409,
            "description": "Iterates over own enumerable properties of an object invoking `iteratee`\nfor each property. The `iteratee` is bound to `thisArg` and invoked with\nthree arguments; (value, key, object). Iterator functions may exit iteration\nearly by explicitly returning `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\n_.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n  console.log(key);\n});\n// => logs '0', '1', and 'length' (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8436,
            "description": "This method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\n_.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n  console.log(key);\n});\n// => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8459,
            "description": "Creates an array of function property names from all enumerable properties,\nown and inherited, of `object`.",
            "static": 1,
            "memberof": "_",
            "alias": "methods",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new array of property names.",
                "type": "Array"
            },
            "example": [
                "\n\n_.functions(_);\n// => ['all', 'any', 'bind', ...]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8478,
            "description": "Checks if `key` exists as a direct property of `object` instead of an\ninherited property.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "The key to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if `key` is a direct property, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8497,
            "description": "Creates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite property\nassignments of previous values unless `multiValue` is `true`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to invert.",
                    "type": "Object"
                },
                {
                    "name": "multiValue",
                    "description": "Allow multiple values per key.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new inverted object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.invert({ 'first': 'fred', 'second': 'barney' });\n// => { 'fred': 'first', 'barney': 'second' }\n\n// without `multiValue`\n_.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' });\n// => { 'fred': 'third', 'barney': 'second' }\n\n// with `multiValue`\n_.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' }, true);\n// => { 'fred': ['first', 'third'], 'barney': ['second'] }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8549,
            "description": "Creates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property names.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n\n_.keys('hi');\n// => ['0', '1']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8588,
            "description": "Creates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property names.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keysIn(new Foo);\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8639,
            "description": "Creates an object with the same keys as `object` and values generated by\nrunning each own enumerable property of `object` through `iteratee`. The\niteratee function is bound to `thisArg` and invoked with three arguments;\n(value, key, object).\n\nIf a property name is provided for `iteratee` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `iteratee` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration. If a property name or object is provided it is used to\n create a \"_.property\" or \"_.matches\" style callback respectively.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new mapped object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(n) { return n * 3; });\n// => { 'a': 3, 'b': 6, 'c': 9 }\n\nvar users = {\n  'fred':    { 'user': 'fred',    'age': 40 },\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\n};\n\n// using the \"_.property\" callback shorthand\n_.mapValues(users, 'age');\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8685,
            "description": "Recursively merges own enumerable properties of the source object(s), that\ndon't resolve to `undefined` into the destination object. Subsequent sources\noverwrite property assignments of previous sources. If `customizer` is\nprovided it is invoked to produce the merged values of the destination and\nsource properties. If `customizer` returns `undefined` merging is handled\nby the method instead. The `customizer` is bound to `thisArg` and invoked\nwith five arguments; (objectValue, sourceValue, key, object, source).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects.",
                    "type": "...Object",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize merging properties.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nvar users = {\n  'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n};\n\nvar ages = {\n  'data': [{ 'age': 36 }, { 'age': 40 }]\n};\n\n_.merge(users, ages);\n// => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\n// using a customizer callback\nvar object = {\n  'fruits': ['apple'],\n  'vegetables': ['beet']\n};\n\nvar other = {\n  'fruits': ['banana'],\n  'vegetables': ['carrot']\n};\n\n_.merge(object, other, function(a, b) {\n  return _.isArray(a) ? a.concat(b) : undefined;\n});\n// => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8733,
            "description": "The opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable properties of `object` that are not omitted.\nProperty names may be specified as individual arguments or as arrays of\nproperty names. If `predicate` is provided it is invoked for each property\nof `object` omitting the properties `predicate` returns truthy for. The\npredicate is bound to `thisArg` and invoked with three arguments;\n(value, key, object).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per\n iteration or property names to omit, specified as individual property\n names or arrays of property names.",
                    "type": "Function|...(string|string[])",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40 };\n\n_.omit(object, 'age');\n// => { 'user': 'fred' }\n\n_.omit(object, _.isNumber);\n// => { 'user': 'fred' }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8775,
            "description": "Creates a two dimensional array of the key-value pairs for `object`,\ne.g. `[[key1, value1], [key2, value2]]`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new array of key-value pairs.",
                "type": "Array"
            },
            "example": [
                "\n\n_.pairs({ 'barney': 36, 'fred': 40 });\n// => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8802,
            "description": "Creates an object composed of the picked `object` properties. Property\nnames may be specified as individual arguments or as arrays of property\nnames. If `predicate` is provided it is invoked for each property of `object`\npicking the properties `predicate` returns truthy for. The predicate is\nbound to `thisArg` and invoked with three arguments; (value, key, object).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per\n iteration or property names to pick, specified as individual property\n names or arrays of property names.",
                    "type": "Function|...(string|string[])",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40 };\n\n_.pick(object, 'user');\n// => { 'user': 'fred' }\n\n_.pick(object, _.isString);\n// => { 'user': 'fred' }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8837,
            "description": "Resolves the value of property `key` on `object`. If the value of `key` is\na function it is invoked with the `this` binding of `object` and its result\nis returned, else the property value is returned. If the property value is\n`undefined` the `defaultValue` is used in its place.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "The key of the property to resolve.",
                    "type": "String"
                },
                {
                    "name": "defaultValue",
                    "description": "The value returned if the property value\n resolves to `undefined`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the resolved value.",
                "type": "*"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': _.constant(40) };\n\n_.result(object, 'user');\n// => 'fred'\n\n_.result(object, 'age');\n// => 40\n\n_.result(object, 'status', 'busy');\n// => 'busy'\n\n_.result(object, 'status', _.constant('busy'));\n// => 'busy'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8875,
            "description": "An alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own enumerable\nproperties through `iteratee`, with each invocation potentially mutating\nthe `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\nwith four arguments; (accumulator, value, key, object). Iterator functions\nmay exit iteration early by explicitly returning `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Array|Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "accumulator",
                    "description": "The custom accumulator value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "example": [
                "\n\nvar squares = _.transform([1, 2, 3, 4, 5, 6], function(result, n) {\n  n *= n;\n  if (n % 2) {\n    return result.push(n) < 3;\n  }\n});\n// => [1, 9, 25]\n\nvar mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n  result[key] = n * 3;\n});\n// => { 'a': 3, 'b': 6, 'c': 9 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8928,
            "description": "Creates an array of the own enumerable property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property values.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.values(new Foo);\n// => [1, 2] (iteration order is not guaranteed)\n\n_.values('hi');\n// => ['h', 'i']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8957,
            "description": "Creates an array of the own and inherited enumerable property values\nof `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property values.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.valuesIn(new Foo);\n// => [1, 2, 3] (iteration order is not guaranteed)"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 8986,
            "description": "Produces a random number between `min` and `max` (inclusive). If only one\nargument is provided a number between `0` and the given number is returned.\nIf `floating` is `true`, or either `min` or `max` are floats, a floating-point\nnumber is returned instead of an integer.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Number"
            ],
            "params": [
                {
                    "name": "min",
                    "description": "The minimum possible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "max",
                    "description": "The maximum possible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "floating",
                    "description": "Specify returning a floating-point number.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the random number.",
                "type": "Number"
            },
            "example": [
                "\n\n_.random(0, 5);\n// => an integer between 0 and 5\n\n_.random(5);\n// => also an integer between 0 and 5\n\n_.random(5, true);\n// => a floating-point number between 0 and 5\n\n_.random(1.2, 5.2);\n// => a floating-point number between 1.2 and 5.2"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9050,
            "description": "Converts `string` to camel case.\nSee [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the camel cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.camelCase('Foo Bar');\n// => 'fooBar'\n\n_.camelCase('--foo-bar');\n// => 'fooBar'\n\n_.camelCase('__foo_bar__');\n// => 'fooBar'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9075,
            "description": "Capitalizes the first character of `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to capitalize.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the capitalized string.",
                "type": "String"
            },
            "example": [
                "\n\n_.capitalize('fred');\n// => 'Fred'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9093,
            "description": "Deburrs `string` by converting latin-1 supplementary letters to basic latin letters.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to deburr.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the deburred string.",
                "type": "String"
            },
            "example": [
                "\n\n_.deburr('déjà vu');\n// => 'deja vu'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9113,
            "description": "Checks if `string` ends with the given target string.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to search.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "target",
                    "description": "The string to search for.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "position",
                    "description": "The position to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "string.length"
                }
            ],
            "return": {
                "description": "Returns `true` if `string` ends with `target`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.endsWith('abc', 'c');\n// => true\n\n_.endsWith('abc', 'b');\n// => false\n\n_.endsWith('abc', 'b', 2);\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9143,
            "description": "Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\ntheir corresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional characters\nuse a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't require escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value.\nSee [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nBackticks are escaped because in Internet Explorer < 9, they can break out\nof attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n[#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\nthe [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\nWhen working with HTML you should always quote attribute values to reduce\nXSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to escape.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the escaped string.",
                "type": "String"
            },
            "example": [
                "\n\n_.escape('fred, barney, & pebbles');\n// => 'fred, barney, &amp; pebbles'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9183,
            "description": "Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n\"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to escape.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the escaped string.",
                "type": "String"
            },
            "example": [
                "\n\n_.escapeRegExp('[lodash](https://lodash.com/)');\n// => '\\[lodash\\]\\(https://lodash\\.com/\\)'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9204,
            "description": "Converts `string` to kebab case (a.k.a. spinal case).\nSee [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\nmore details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the kebab cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.kebabCase('Foo Bar');\n// => 'foo-bar'\n\n_.kebabCase('fooBar');\n// => 'foo-bar'\n\n_.kebabCase('__foo_bar__');\n// => 'foo-bar'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9229,
            "description": "Pads `string` on the left and right sides if it is shorter then the given\npadding length. The `chars` string may be truncated if the number of padding\ncharacters can't be evenly divided by the padding length.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the padded string.",
                "type": "String"
            },
            "example": [
                "\n\n_.pad('abc', 8);\n// => '  abc   '\n\n_.pad('abc', 8, '_-');\n// => '_-abc_-_'\n\n_.pad('abc', 3);\n// => 'abc'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9268,
            "description": "Pads `string` on the left side if it is shorter then the given padding\nlength. The `chars` string may be truncated if the number of padding\ncharacters exceeds the padding length.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the padded string.",
                "type": "String"
            },
            "example": [
                "\n\n_.padLeft('abc', 6);\n// => '   abc'\n\n_.padLeft('abc', 6, '_-');\n// => '_-_abc'\n\n_.padLeft('abc', 3);\n// => 'abc'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9296,
            "description": "Pads `string` on the right side if it is shorter then the given padding\nlength. The `chars` string may be truncated if the number of padding\ncharacters exceeds the padding length.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the padded string.",
                "type": "String"
            },
            "example": [
                "\n\n_.padRight('abc', 6);\n// => 'abc   '\n\n_.padRight('abc', 6, '_-');\n// => 'abc_-_'\n\n_.padRight('abc', 3);\n// => 'abc'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9324,
            "description": "Converts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\nin which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the ES5 implementation of `parseInt`.\nSee the [ES5 spec](https://es5.github.io/#E) for more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String"
                },
                {
                    "name": "radix",
                    "description": "The radix to interpret `value` by.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the converted integer.",
                "type": "Number"
            },
            "example": [
                "\n\n_.parseInt('08');\n// => 8\n\n_.map(['6', '08', '10'], _.parseInt);\n// => [6, 8, 10]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9369,
            "description": "Repeats the given string `n` times.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to repeat.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "n",
                    "description": "The number of times to repeat the string.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns the repeated string.",
                "type": "String"
            },
            "example": [
                "\n\n_.repeat('*', 3);\n// => '***'\n\n_.repeat('abc', 2);\n// => 'abcabc'\n\n_.repeat('abc', 0);\n// => ''"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9409,
            "description": "Converts `string` to snake case.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the snake cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.snakeCase('Foo Bar');\n// => 'foo_bar'\n\n_.snakeCase('fooBar');\n// => 'foo_bar'\n\n_.snakeCase('--foo-bar');\n// => 'foo_bar'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9433,
            "description": "Converts `string` to start case.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the start cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.startCase('--foo-bar');\n// => 'Foo Bar'\n\n_.startCase('fooBar');\n// => 'Foo Bar'\n\n_.startCase('__foo_bar__');\n// => 'Foo Bar'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9458,
            "description": "Checks if `string` starts with the given target string.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to search.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "target",
                    "description": "The string to search for.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "position",
                    "description": "The position to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns `true` if `string` starts with `target`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.startsWith('abc', 'a');\n// => true\n\n_.startsWith('abc', 'b');\n// => false\n\n_.startsWith('abc', 'b', 1);\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9485,
            "description": "Creates a compiled template function that can interpolate data properties\nin \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\nproperties may be accessed as free variables in the template. If a setting\nobject is provided it takes precedence over `_.templateSettings` values.\n\n**Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\nSee the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\nfor more details.\n\nFor more information on precompiling templates see\n[lodash's custom builds documentation](https://lodash.com/custom-builds).\n\nFor more information on Chrome extension sandboxes see\n[Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The template string.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "escape",
                            "description": "The HTML \"escape\" delimiter.",
                            "type": "RegExp",
                            "optional": true
                        },
                        {
                            "name": "evaluate",
                            "description": "The \"evaluate\" delimiter.",
                            "type": "RegExp",
                            "optional": true
                        },
                        {
                            "name": "imports",
                            "description": "An object to import into the template as free variables.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "interpolate",
                            "description": "The \"interpolate\" delimiter.",
                            "type": "RegExp",
                            "optional": true
                        },
                        {
                            "name": "sourceURL",
                            "description": "The sourceURL of the template's compiled source.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "variable",
                            "description": "The data object variable name.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "-",
                    "description": "[otherOptions] Enables the legacy `options` param signature.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the compiled template function.",
                "type": "Function"
            },
            "example": [
                "\n\n// using the \"interpolate\" delimiter to create a compiled template\nvar compiled = _.template('hello <%= user %>!');\ncompiled({ 'user': 'fred' });\n// => 'hello fred!'\n\n// using the HTML \"escape\" delimiter to escape data property values\nvar compiled = _.template('<b><%- value %></b>');\ncompiled({ 'value': '<script>' });\n// => '<b>&lt;script&gt;</b>'\n\n// using the \"evaluate\" delimiter to execute JavaScript and generate HTML\nvar compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n\n// using the internal `print` function in \"evaluate\" delimiters\nvar compiled = _.template('<% print(\"hello \" + user); %>!');\ncompiled({ 'user': 'barney' });\n// => 'hello barney!'\n\n// using the ES delimiter as an alternative to the default \"interpolate\" delimiter\nvar compiled = _.template('hello ${ user }!');\ncompiled({ 'user': 'pebbles' });\n// => 'hello pebbles!'\n\n// using custom template delimiters\n_.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\nvar compiled = _.template('hello {{ user }}!');\ncompiled({ 'user': 'mustache' });\n// => 'hello mustache!'\n\n// using backslashes to treat delimiters as plain text\nvar compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\ncompiled({ 'value': 'ignored' });\n// => '<%- value %>'\n\n// using the `imports` option to import `jQuery` as `jq`\nvar text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\nvar compiled = _.template(text, { 'imports': { 'jq': jQuery } });\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n\n// using the `sourceURL` option to specify a custom sourceURL for the template\nvar compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\ncompiled(data);\n// => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\n// using the `variable` option to ensure a with-statement isn't used in the compiled template\nvar compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\ncompiled.source;\n// => function(data) {\n  var __t, __p = '';\n  __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n  return __p;\n}\n\n// using the `source` property to inline compiled templates for meaningful\n// line numbers in error messages and a stack trace\nfs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n  var JST = {\\\n    \"main\": ' + _.template(mainText).source + '\\\n  };\\\n');"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9687,
            "description": "Removes leading and trailing whitespace or specified characters from `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "chars",
                    "description": "The characters to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "whitespace"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the trimmed string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trim('  abc  ');\n// => 'abc'\n\n_.trim('-_-abc-_-', '_-');\n// => 'abc'\n\n_.map(['  foo  ', '  bar  '], _.trim);\n// => ['foo', 'bar]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9721,
            "description": "Removes leading whitespace or specified characters from `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "chars",
                    "description": "The characters to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "whitespace"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the trimmed string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trimLeft('  abc  ');\n// => 'abc  '\n\n_.trimLeft('-_-abc-_-', '_-');\n// => 'abc-_-'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9751,
            "description": "Removes trailing whitespace or specified characters from `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "chars",
                    "description": "The characters to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "whitespace"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the trimmed string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trimRight('  abc  ');\n// => '  abc'\n\n_.trimRight('-_-abc-_-', '_-');\n// => '-_-abc'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9781,
            "description": "Truncates `string` if it is longer than the given maximum string length.\nThe last characters of the truncated string are replaced with the omission\nstring which defaults to \"...\".",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to truncate.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "options",
                    "description": "The options object or maximum string length.",
                    "type": "Object|number",
                    "optional": true,
                    "props": [
                        {
                            "name": "length",
                            "description": "The maximum string length.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "30"
                        },
                        {
                            "name": "omission",
                            "description": "The string to indicate text is omitted.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'...'"
                        },
                        {
                            "name": "separator",
                            "description": "The separator pattern to truncate to.",
                            "type": "RegExp|string",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the truncated string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trunc('hi-diddly-ho there, neighborino');\n// => 'hi-diddly-ho there, neighbo...'\n\n_.trunc('hi-diddly-ho there, neighborino', 24);\n// => 'hi-diddly-ho there, n...'\n\n_.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': ' ' });\n// => 'hi-diddly-ho there,...'\n\n_.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': /,? +/ });\n//=> 'hi-diddly-ho there...'\n\n_.trunc('hi-diddly-ho there, neighborino', { 'omission': ' [...]' });\n// => 'hi-diddly-ho there, neig [...]'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9865,
            "description": "The inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\ncorresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional HTML\nentities use a third-party library like [_he_](https://mths.be/he).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to unescape.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the unescaped string.",
                "type": "String"
            },
            "example": [
                "\n\n_.unescape('fred, barney, &amp; pebbles');\n// => 'fred, barney, & pebbles'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9890,
            "description": "Splits `string` into an array of its words.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "pattern",
                    "description": "The pattern to match words.",
                    "type": "RegExp|string",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the words of `string`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.words('fred, barney, & pebbles');\n// => ['fred', 'barney', 'pebbles']\n\n_.words('fred, barney, & pebbles', /[^, ]+/g);\n// => ['fred', 'barney', '&', 'pebbles']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9918,
            "description": "Attempts to invoke `func`, returning either the result or the caught\nerror object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to attempt.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the `func` result or error object.",
                "type": "*"
            },
            "example": [
                "\n\n// avoid throwing errors for invalid selectors\nvar elements = _.attempt(function() {\n  return document.querySelectorAll(selector);\n});\n\nif (_.isError(elements)) {\n  elements = [];\n}"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9946,
            "description": "Creates a function bound to an optional `thisArg`. If `func` is a property\nname the created callback returns the property value for a given element.\nIf `func` is an object the created callback returns `true` for elements\nthat contain the equivalent object properties, otherwise it returns `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "iteratee",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The value to convert to a callback.",
                    "type": "*",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the callback.",
                "type": "Function"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// wrap to create custom callback shorthands\n_.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n  var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n  if (!match) {\n    return callback(func, thisArg);\n  }\n  return function(object) {\n    return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n  };\n});\n\n_.filter(users, 'age__gt36');\n// => [{ 'user': 'fred', 'age': 40 }]"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 9990,
            "description": "Creates a function that returns `value`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to return from the new function.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred' };\nvar getter = _.constant(object);\ngetter() === object;\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10011,
            "description": "This method returns the first argument provided to it.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "Any value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `value`.",
                "type": "*"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred' };\n_.identity(object) === object;\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10029,
            "description": "Creates a function which performs a deep comparison between a given object\nand `source`, returning `true` if the given object has equivalent property\nvalues, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 36 }\n];\n\nvar matchesAge = _.matches({ 'age': 36 });\n\n_.filter(users, matchesAge);\n// => [{ 'user': 'barney', 'age': 36 }]\n\n_.find(users, matchesAge);\n// => { 'user': 'barney', 'age': 36 }"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10058,
            "description": "Adds all own enumerable function properties of a source object to the\ndestination object. If `object` is a function then methods are added to\nits prototype as well.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "object The destination object.",
                    "type": "Function|Object",
                    "optional": true,
                    "optdefault": "this"
                },
                {
                    "name": "source",
                    "description": "The object of functions to add.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "chain",
                            "description": "Specify whether the functions added\n are chainable.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Function|Object"
            },
            "example": [
                "\n\nfunction vowels(string) {\n  return _.filter(string, function(v) {\n    return /[aeiou]/i.test(v);\n  });\n}\n\n_.mixin({ 'vowels': vowels });\n_.vowels('fred');\n// => ['e']\n\n_('fred').vowels().value();\n// => ['e']\n\n_.mixin({ 'vowels': vowels }, { 'chain': false });\n_('fred').vowels();\n// => ['e']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10142,
            "description": "Reverts the `_` variable to its previous value and returns a reference to\nthe `lodash` function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "return": {
                "description": "Returns the `lodash` function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar lodash = _.noConflict();"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10159,
            "description": "A no-operation function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "example": [
                "\n\nvar object = { 'user': 'fred' };\n_.noop(object) === undefined;\n// => true"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10175,
            "description": "Creates a function which returns the property value of `key` on a given object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "key",
                    "description": "The key of the property to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'fred' },\n  { 'user': 'barney' }\n];\n\nvar getName = _.property('user');\n\n_.map(users, getName);\n// => ['fred', barney']\n\n_.pluck(_.sortBy(users, getName), 'user');\n// => ['barney', 'fred']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10202,
            "description": "The inverse of `_.property`; this method creates a function which returns\nthe property value of a given key on `object`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40, 'active': true };\n_.map(['active', 'user'], _.propertyOf(object));\n// => [true, 'fred']\n\nvar object = { 'a': 3, 'b': 1, 'c': 2 };\n_.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n// => ['b', 'c', 'a']"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10227,
            "description": "Creates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. If `start` is less than `end` a\nzero-length range is created unless a negative `step` is specified.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "start",
                    "description": "The start of the range.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end of the range.",
                    "type": "Number"
                },
                {
                    "name": "step",
                    "description": "The value to increment or decrement by.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "return": {
                "description": "Returns the new array of numbers.",
                "type": "Array"
            },
            "example": [
                "\n\n_.range(4);\n// => [0, 1, 2, 3]\n\n_.range(1, 5);\n// => [1, 2, 3, 4]\n\n_.range(0, 20, 5);\n// => [0, 5, 10, 15]\n\n_.range(0, -4, -1);\n// => [0, -1, -2, -3]\n\n_.range(1, 4, 0);\n// => [1, 1, 1]\n\n_.range(0);\n// => []"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10285,
            "description": "Invokes the iteratee function `n` times, returning an array of the results\nof each invocation. The `iteratee` is bound to `thisArg` and invoked with\none argument; (index).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number of times to invoke `iteratee`.",
                    "type": "Number"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of results.",
                "type": "Array"
            },
            "example": [
                "\n\nvar diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n// => [3, 6, 4]\n\n_.times(3, function(n) { mage.castSpell(n); });\n// => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n\n_.times(3, function(n) { this.cast(n); }, mage);\n// => also invokes `mage.castSpell(n)` three times"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10330,
            "description": "Generates a unique ID. If `prefix` is provided the ID is appended to it.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "prefix",
                    "description": "The value to prefix the ID with.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the unique ID.",
                "type": "String"
            },
            "example": [
                "\n\n_.uniqueId('contact_');\n// => 'contact_104'\n\n_.uniqueId();\n// => '105'"
            ],
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.js",
            "line": 10600,
            "description": "The semantic version number.",
            "static": 1,
            "memberof": "_",
            "type": "string",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\lodash\\lodash.min.js",
            "line": 1,
            "license": "lodash 3.1.0 (Custom Build) lodash.com/license | Underscore.js 1.7.0 underscorejs.org/LICENSE\nBuild: `lodash modern -o ./lodash.js`",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\observe-js\\src\\observe.js",
            "line": 1399,
            "description": "Splice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\bower_components\\observe-js\\src\\observe.js",
            "line": 1413,
            "description": "Lacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1,
            "description": "Created by Gaetano Lazzo on 07/02/2015.\nThanks to lodash, ObjectObserve",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 11,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 15,
            "description": "Escapes special characters in a string",
            "itemtype": "method",
            "name": "myRegExpEscape",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "str",
                    "description": "the string to be escaped"
                }
            ],
            "return": {
                "description": "escaped string",
                "type": "String"
            },
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 52,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 58,
            "description": "Used as a reference to the global object. (thanks lodash)\n\nThe `this` value is used if it is the global object to avoid Greasemonkey's\nrestricted `window` object, otherwise the `window` object is used.",
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 66,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 69,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 72,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 78,
            "class": "DataRowObserver"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 93,
            "description": "Enumerates possible state of a DataRow: detached, deleted, added, unchanged, modified",
            "type": "{dataRowState}",
            "class": "DataRowObserver",
            "module": "DataSet",
            "submodule": "dataenums"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 134,
            "description": "Take track of object changes, managing added fields, removed fields, modified fields.\nThis is called automatically by the ObjectObserver attached to the object",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "dataRowReactOnChange",
            "params": [
                {
                    "name": "added",
                    "description": ""
                },
                {
                    "name": "removed",
                    "description": ""
                },
                {
                    "name": "changed",
                    "description": ""
                },
                {
                    "name": "getOldValueFn",
                    "description": ""
                }
            ],
            "class": "DataRowObserver",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 219,
            "description": "Creates a DataRow from a generic plain object, and returns the DataRow",
            "itemtype": "method",
            "name": "DataRow",
            "params": [
                {
                    "name": "o",
                    "description": "this is the main object managed by the application logic",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow"
            },
            "is_constructor": 1,
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 248,
            "description": "current value of the DataRow is the object o itself",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "current",
            "type": "Object",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 254,
            "description": "previous values of the DataRow, only previous values of changed fields are stored",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "old",
            "type": "Object",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 261,
            "description": "fields added to object (after last acceptChanges())",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "added",
            "type": "Object",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 268,
            "description": "fields removed (with delete o.field) from object (after last acceptChanges())",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "removed",
            "type": "Object",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 279,
            "description": "State of the DataRow, possible values are added unchanged modified deleted detached",
            "itemtype": "property",
            "name": "state",
            "type": "{dataRowState}",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 305,
            "description": "Get the DataRow attached to an object. This method is attached to the object itself,\n so you can get the DataRow calling o.getRow() where o is the plain object",
            "itemtype": "property",
            "name": "getRow",
            "type": "DataRow",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 328,
            "description": "get the value of a field of the object. If dataRowVer is omitted, it's equivalent to o.fieldName",
            "itemtype": "method",
            "name": "getValue",
            "params": [
                {
                    "name": "fieldName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "dataRowVer",
                    "description": "possible values are 'original', 'current'",
                    "type": "DataRowVersion",
                    "optional": true,
                    "optdefault": "'current'"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 352,
            "description": "Gets the original row, before changes was made, undefined if current state is added",
            "itemtype": "method",
            "name": "originalRow",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 386,
            "description": "changes current row to make it's current values equal to another one. Deleted rows becomes modified",
            "itemtype": "method",
            "name": "makeEqualTo",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 411,
            "description": "changes current row to make it's current values equal to another one. Deleted rows becomes modified",
            "itemtype": "method",
            "name": "patchTo",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 430,
            "description": "get changes from the ObjectObserver",
            "itemtype": "method",
            "name": "commit",
            "access": "private",
            "tagname": "",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 444,
            "description": "Makes changes permanents, discarding old values. state becomes unchanged.",
            "itemtype": "method",
            "name": "acceptChanges",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 460,
            "description": "Discard changes, restoring the original values of the object. state becomes unchanged",
            "itemtype": "method",
            "name": "rejectChanges",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 491,
            "description": "resets all change and sets state to unchanged",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_reset",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 503,
            "description": "Detaches row, loosing all changes made. object is also removed from the underlying DataTable",
            "itemtype": "method",
            "name": "detach",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 520,
            "description": "Deletes the row. If it is in added state it becomes detached. Otherwise any changes are lost, and\n only rejectChanges can bring the row into life again",
            "itemtype": "method",
            "name": "del",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 540,
            "description": "Debug - helper function",
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "toString",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 552,
            "description": "Gets the parent(s) of this row in the dataSet it is contained, following the relation with the\n specified name",
            "itemtype": "method",
            "name": "getParentRows",
            "params": [
                {
                    "name": "relName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 567,
            "description": "Gets all parent rows of this one",
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 577,
            "description": "Gets parents row of this row in a given table",
            "itemtype": "method",
            "name": "getParentsInTable",
            "params": [
                {
                    "name": "parentTableName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 591,
            "description": "Gets the child(s) of this row in the dataSet it is contained, following the relation with the\n specified name",
            "itemtype": "method",
            "name": "getChildRows",
            "params": [
                {
                    "name": "relName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 606,
            "description": "Gets all child rows of this one",
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 617,
            "description": "Gets child rows of this row in a given table",
            "itemtype": "method",
            "name": "getChildsInTable",
            "params": [
                {
                    "name": "childTableName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 631,
            "description": "DataTable that contains this DataRow",
            "itemtype": "property",
            "name": "table",
            "type": "{DataTable}",
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 637,
            "description": "Get an object with all key fields of this row",
            "itemtype": "method",
            "name": "keySample",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DataRow",
            "module": "DataSet",
            "submodule": "DataRow"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 674,
            "description": "Converts a SqlFun into a string",
            "itemtype": "method",
            "name": "toSql",
            "class": "sqlFun",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 696,
            "description": "Check if an object is the null or undefined constant",
            "itemtype": "method",
            "name": "isNullOrUndefined",
            "params": [
                {
                    "name": "o",
                    "description": ""
                }
            ],
            "return": {
                "description": "true if o is null or undefined",
                "type": "Boolean"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 706,
            "description": "Adds some useful methods and properties to a function in order to transform it into a sqlFun",
            "itemtype": "method",
            "name": "sqlFun",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "toSql",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 742,
            "description": "returns  a function that given an environment will give the input functions applied to that.",
            "itemtype": "method",
            "name": "context",
            "params": [
                {
                    "name": "environmentFunction",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "example": [
                " if environment = {a:1, b:2} and envifonmentFunction = function (env){return env.a}\n  context(environmentFunction) applied to environment will return 1"
            ],
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 771,
            "description": "Gets a field from an object. This is a very important function to distinguish between generic strings and\n field names.",
            "itemtype": "method",
            "name": "field",
            "params": [
                {
                    "name": "fieldName",
                    "description": ""
                },
                {
                    "name": "tableName",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "f such that\n f(r) = r[fieldName]\n f.toSql() = 'fieldName' or 'tableName.fieldName' where tableName is specified",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 804,
            "access": "private",
            "tagname": "transform strings into fields, leaves other things unchanged\nFor example 'a' becomes f(r)-> r['a'],\n 12 is returned unchanged,\n a function is returned  unchanged",
            "itemtype": "method",
            "name": "autofield",
            "params": [
                {
                    "name": "p",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 822,
            "description": "Defines a constant function. The toSql method invokes the formatter.quote function",
            "itemtype": "method",
            "name": "constant",
            "params": [
                {
                    "name": "K",
                    "description": "is a literal",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "f such that f()= k, f.toSql()= formatter.quote(k)",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 866,
            "description": "Evaluates an expression in a given context",
            "itemtype": "method",
            "name": "calc",
            "params": [
                {
                    "name": "expr",
                    "description": "function representing a generic expression"
                },
                {
                    "name": "r",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "expr evaluated in the context r\n undefined are returned as null constant",
                "type": "Object"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 896,
            "description": "Check if an expression evaluates to null",
            "itemtype": "method",
            "name": "isNull",
            "params": [
                {
                    "name": "expr1",
                    "description": ""
                }
            ],
            "return": {
                "description": "f where f(expr) = true if expr evaluates to null or undefined\n f.toSql() = something like '(EXPR is null)' where EXPR is the sql representation of the given expr",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 924,
            "itemtype": "method",
            "name": "minus",
            "params": [
                {
                    "name": "expr1",
                    "description": ""
                }
            ],
            "return": {
                "description": "f where f(r) = - r. r should evaluate into a number",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 950,
            "itemtype": "method",
            "name": "not",
            "params": [
                {
                    "name": "expr1",
                    "description": ""
                }
            ],
            "return": {
                "description": "f where f(r) = not r. r should evaluate into a boolean",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 973,
            "description": "Check if the nth bit of expression is set",
            "itemtype": "method",
            "name": "bitSet",
            "params": [
                {
                    "name": "expression",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "nbit",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1008,
            "description": "Check if the nth bit of expression is not set",
            "itemtype": "method",
            "name": "bitClear",
            "params": [
                {
                    "name": "expression",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "nbit",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1045,
            "description": "check if expr1 & mask === val & mask",
            "itemtype": "method",
            "name": "testMask",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "mask",
                    "description": "",
                    "type": "Expression"
                },
                {
                    "name": "val",
                    "description": "",
                    "type": "Expression"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1093,
            "description": "Check if expr1 evaluates between min and max",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1136,
            "description": "Checks if expr1 is (sql-like) mask, where mask can contain * and _ characters",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "expr1",
                    "description": "expr1 note: this is autofield-ed, so if you can use a field name for it",
                    "type": "String"
                },
                {
                    "name": "mask",
                    "description": "mask is a string or a function that evaluates into a string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "example": [
                " like('a','s%') compiles into (a like 's%')\n       like(const('a'),'s%') compiles into ('a' like 's%')"
            ],
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1174,
            "description": "Finds distinct values of a field",
            "itemtype": "method",
            "name": "distinctVal",
            "params": [
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "fieldname",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object[]"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1191,
            "description": "Finds distinct values of a field",
            "itemtype": "method",
            "name": "distinctVal",
            "params": [
                {
                    "name": "exprList",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1229,
            "description": "checks if expr1 is in the array list",
            "itemtype": "method",
            "name": "isIn",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "list",
                    "description": "Array or function that evaluates into an array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1265,
            "description": "checks if expr1 is not in the array list",
            "itemtype": "method",
            "name": "isNotIn",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "list",
                    "description": "Array or function that evaluates into an array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1286,
            "description": "checks if expr1 evaluates equal to expr2",
            "itemtype": "method",
            "name": "eq",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1316,
            "description": "checks if expr1 evaluates different from expr2",
            "itemtype": "method",
            "name": "ne",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1346,
            "description": "checks if expr1 evaluates less than from expr2",
            "itemtype": "method",
            "name": "lt",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1381,
            "description": "checks if expr1 evaluates less than or equal to from expr2",
            "itemtype": "method",
            "name": "le",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1417,
            "description": "checks if expr1 evaluates greater than expr2",
            "itemtype": "method",
            "name": "gt",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1453,
            "description": "checks if expr1 evaluates greater than or equal to expr2",
            "itemtype": "method",
            "name": "ge",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1490,
            "description": "checks if at least one of supplied expression evaluates to a truthy value",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "arr",
                    "description": "array or list of expression",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1558,
            "description": "return the first object not null in the  array parameter",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "SqlFun[]"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1595,
            "description": "checks if expr1 is null or equal to expr2",
            "itemtype": "method",
            "name": "isNullOrEq",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1607,
            "description": "checks if expr1 is null or greater than expr2",
            "itemtype": "method",
            "name": "isNullOrGt",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1619,
            "description": "checks if expr1 is null or greater than or equal to expr2",
            "itemtype": "method",
            "name": "isNullOrGe",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1631,
            "description": "checks if expr1 is null or less than expr2",
            "itemtype": "method",
            "name": "isNullOrLt",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1643,
            "description": "checks if expr1 is null or less than or equal to expr2",
            "itemtype": "method",
            "name": "isNullOrLe",
            "params": [
                {
                    "name": "expr1",
                    "description": "note: this is autofield-ed, so if you can use a field name for it"
                },
                {
                    "name": "expr2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1655,
            "description": "Evaluates the maximum value of an expression in a table. If any undefined is found, return undefined.\nNull are skipped. If all is null return null",
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "Expression"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1699,
            "description": "Evaluates the minimum value of an expression in a table. If any undefined is found, return undefined.\nNull are skipped. If all is null return null",
            "itemtype": "method",
            "name": "min",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "Expression"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1745,
            "itemtype": "method",
            "name": "substring",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "Expression"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "len",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1796,
            "description": "Converts a generic expression into an integer",
            "itemtype": "method",
            "name": "convertToInt",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "Expression"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1828,
            "description": "Converts a generic expression into a string",
            "itemtype": "method",
            "name": "convertToString",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "Expression"
                },
                {
                    "name": "maxLen",
                    "description": "maximum string len",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1860,
            "description": "checks if all supplied expression evaluate to truthy values",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "arr",
                    "description": "array or list of expression",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 1929,
            "description": "Compares a set of keys of an object with an array of values or with fields of another object\n values can be an array or an object",
            "itemtype": "method",
            "name": "mcmp",
            "params": [
                {
                    "name": "keys",
                    "description": "",
                    "type": "String[]"
                },
                {
                    "name": "values",
                    "description": ""
                },
                {
                    "name": "alias",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "f(r) = true if :\n case values is an array: r[keys[i]] = values[i] for each i=0..keys.length-1\n case values is an object: r[keys[i]] = values[keys[i]] for each i=0..keys.length-1",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2009,
            "description": "Compares a set of keys of an object with an array of values or with fields of another object",
            "itemtype": "method",
            "name": "mcmpLike",
            "params": [
                {
                    "name": "example",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "f(r) = true if  for each non empty field of r:\n case field is a string containing a %: r[field] LIKE example[field]\n otherwise: r[field] = example[field]",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2041,
            "description": "returns a functions that evaluates the sum of a list or array of values given when it is CREATED",
            "itemtype": "method",
            "name": "sub",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "SqlFun"
                },
                {
                    "name": "expr2",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2082,
            "description": "returns a functions that evaluates the sum of a list or array of values given when it is CREATED",
            "itemtype": "method",
            "name": "div",
            "params": [
                {
                    "name": "expr1",
                    "description": "",
                    "type": "SqlFun"
                },
                {
                    "name": "expr2",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2123,
            "description": "returns a functions that evaluates the sum of a list or array of values given when it is CREATED",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "values",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2162,
            "description": "returns a functions that evaluates the concatenation of a list or array of strings given when it is CREATED",
            "itemtype": "method",
            "name": "concat",
            "params": [
                {
                    "name": "values",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2202,
            "description": "Evaluates the sum of an array of element given at run time",
            "itemtype": "method",
            "name": "sum",
            "params": [
                {
                    "name": "expr1",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "F"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2250,
            "description": "returns a functions that evaluates the multiply of a list or array of values\nIf some operand is 0, returns the always 0 function",
            "itemtype": "method",
            "name": "mul",
            "params": [
                {
                    "name": "values",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataQuery",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2355,
            "description": "Create a AutoIncrementColumn",
            "itemtype": "method",
            "name": "AutoIncrementColumn",
            "params": [
                {
                    "name": "columnName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "same options as AutoIncrement properties",
                    "type": "Object"
                }
            ],
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2362,
            "description": "name of the column that has to be auto-incremented",
            "itemtype": "property",
            "name": "columnName",
            "type": "String",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2368,
            "description": "Array of column names of selector fields. The max() is evaluating filtering the values of those fields",
            "itemtype": "property",
            "name": "[selector]",
            "type": "String[]",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2374,
            "description": "Array of bit mask to use for comparing selector. If present, only corrisponding bits will be compared,\n i.e. instead of sel=value it will be compared (sel & mask) = value",
            "itemtype": "property",
            "name": "[selectorMask]",
            "type": "Number[]",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2381,
            "description": "A field to use as prefix for the evaluated field",
            "itemtype": "property",
            "name": "[prefixField]",
            "type": "String",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2387,
            "description": "String literal to be appended to the prefix before the evaluated max",
            "itemtype": "property",
            "name": "[middleConst]",
            "type": "String",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2394,
            "description": "for string id, the len of the evaluated max. It is not the overall size of the evaluated id, because a\n prefix and a middle const might be present\nIf idLen = 0 and there is no prefix, the field is assumed to be a number, otherwise a 0 prefixed string-number",
            "itemtype": "property",
            "name": "[idLen=0]",
            "type": "Number",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2402,
            "description": "Indicates that numbering does NOT depend on prefix value, I.e. is linear in every section of the calculated field",
            "itemtype": "property",
            "name": "[linearField=false]",
            "type": "Boolean",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2408,
            "description": "Minimum temporary value for in-memory rows",
            "itemtype": "property",
            "name": "[minimum=0]",
            "type": "Number",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2431,
            "description": "Gets a function that filter selector fields eventually masking with selectorMask",
            "params": [
                {
                    "name": "row",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2454,
            "description": "evaluates the function to filter selector on a specified row and column",
            "itemtype": "method",
            "name": "getSelector",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                }
            ],
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2469,
            "description": "Gets the prefix evaluated for a given row",
            "itemtype": "method",
            "name": "getPrefix",
            "params": [
                {
                    "name": "r",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2487,
            "description": "gets the expression to be used for retrieving the max",
            "itemtype": "method",
            "name": "getExpression",
            "params": [
                {
                    "name": "r",
                    "description": ""
                }
            ],
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2503,
            "description": "Cached function that evaluates selector basing on autoIncrement fields",
            "itemtype": "method",
            "name": "[getSelector]",
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2510,
            "description": "Custom function to be called to evaluate the maximum value",
            "itemtype": "method",
            "name": "[customFunction] ( r, {string} columnName, {DataAccess} conn}",
            "type": "DataRow",
            "class": "AutoIncrementColumn",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2522,
            "description": "DataSet to which this table belongs",
            "itemtype": "property",
            "name": "dataset",
            "type": "DataSet",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2527,
            "description": "Creates an empty DataTable",
            "params": [
                {
                    "name": "tableName",
                    "description": "",
                    "type": "String"
                }
            ],
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "DataTable"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2534,
            "description": "Name of the table",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2540,
            "description": "Collection of rows, each one hiddenly surrounded with a DataRow object",
            "itemtype": "property",
            "name": "rows",
            "type": "{Array}",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2547,
            "description": "Array of key column names",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "myKey",
            "type": "String[]",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2554,
            "description": "Set of properties to be assigned to new rows when they are created",
            "itemtype": "property",
            "name": "myDefaults",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2561,
            "description": "Array of column names",
            "itemtype": "property",
            "name": "columns",
            "type": "{Array}",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2570,
            "description": "A ordering to use for posting of this table",
            "itemtype": "property",
            "name": "postingOrder",
            "type": "{string | string[] | function}",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2580,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "maxCache",
            "type": "{object}",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2586,
            "description": "Mark the table as optimized / not optimized\nAn optimized table has a cache for all autoincrement field",
            "itemtype": "method",
            "name": "setOptimize",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2602,
            "description": "Check if this table is optimized",
            "itemtype": "method",
            "name": "isOptimized",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2611,
            "description": "Clear evaluated max cache",
            "itemtype": "method",
            "name": "clearMaxCache",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2621,
            "description": "Set a value in the max cache",
            "itemtype": "method",
            "name": "setMaxExpr",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "expr",
                    "description": "",
                    "type": "SqlFun"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun"
                },
                {
                    "name": "num",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2637,
            "description": "get/set the minimum temp value for a field, assuming 0 if undefined",
            "itemtype": "method",
            "name": "minimumTempValue",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2658,
            "description": "gets the max in cache for a field and updates the cache",
            "itemtype": "method",
            "name": "getMaxExpr",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "expr",
                    "description": "",
                    "type": "SqlFun|string"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2676,
            "description": "Evaluates the max of an expression eventually using a cached value",
            "itemtype": "method",
            "name": "cachedMaxSubstring",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "len",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2698,
            "description": "Evaluates the max of an expression without using any cached value. If len = 0 the expression is treated\n as a number with max(field) otherwise it is performed max(convertToInt(substring(field,start,len)))",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "len",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2732,
            "description": "Extract a set of rows matching a filter function - skipping deleted rows",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2766,
            "description": "Extract a set of rows matching a filter function - including deleted rows",
            "itemtype": "method",
            "name": "selectAll",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow[]"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2780,
            "description": "Get the filter that compares key fields of a given row",
            "itemtype": "method",
            "name": "keyFilter",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*|sqlFun"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2793,
            "description": "Compares the key of two objects",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2803,
            "description": "Get/Set the primary key in a Jquery fashioned style. If k is given, the key is set, otherwise the existing\n key is returned",
            "itemtype": "method",
            "name": "key",
            "params": [
                {
                    "name": "k",
                    "description": "",
                    "type": "String[]",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*|string[]"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2824,
            "description": "Clears the table detaching all rows.",
            "itemtype": "method",
            "name": "clear",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2838,
            "description": "Detaches a row from the table",
            "itemtype": "method",
            "name": "detach",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2854,
            "description": "Adds an object to the table setting the datarow in the state of \"added\"",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "obj",
                    "description": "plain object"
                }
            ],
            "return": {
                "description": "DataRow created"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2869,
            "description": "check if a row is present in the table. If there is  a key, it is used for finding the row,\n otherwise a ==== comparison is made",
            "itemtype": "method",
            "name": "existingRow",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "DataRow | undefined"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2891,
            "description": "Adds an object to the table setting the datarow in the state of \"unchanged\"",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "obj",
                    "description": "plain object to load in the table",
                    "type": "Object"
                },
                {
                    "name": "safe",
                    "description": "if false doesn't verify existence of row",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "created DataRow",
                "type": "DataRow"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2912,
            "description": "Adds an object to the table setting the datarow in the state of 'unchanged'",
            "itemtype": "method",
            "name": "loadArray",
            "params": [
                {
                    "name": "arr",
                    "description": "array of plain objects",
                    "type": "Array"
                },
                {
                    "name": "safe",
                    "description": "if false doesn't verify existence of row",
                    "type": "Bool"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2924,
            "description": "Accept any changes setting all dataRows in the state of 'unchanged'.\nDeleted rows become detached and are removed from the table",
            "itemtype": "method",
            "name": "acceptChanges",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2945,
            "description": "Reject any changes putting all to 'unchanged' state.\nAdded rows become detached.",
            "itemtype": "method",
            "name": "rejectChanges",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2966,
            "description": "Check if any DataRow in the table has changes",
            "itemtype": "method",
            "name": "hasChanges",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2978,
            "description": "gets an array of all modified/added/deleted rows",
            "itemtype": "method",
            "name": "getChanges",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2989,
            "description": "Debug-helper function",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 2998,
            "description": "import a row preserving it's state, the row should already have a DataRow attached",
            "itemtype": "method",
            "name": "importRow",
            "params": [
                {
                    "name": "row",
                    "description": "input",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "created",
                "type": "DataRow"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3022,
            "description": "Get/set the object defaults in a JQuery fashioned style. When def is present, its fields and values are\n merged into existent defaults.",
            "itemtype": "method",
            "name": "defaults",
            "params": [
                {
                    "name": "def",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object|*"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3037,
            "description": "Clears any stored default value for the table",
            "itemtype": "method",
            "name": "clearDefaults",
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3045,
            "description": "creates a DataRow and returns the created object. The created object has the default values merged to the\n values in the optional parameter obj.",
            "itemtype": "method",
            "name": "newRow",
            "params": [
                {
                    "name": "obj",
                    "description": "contains the initial value of the created objects.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "parentRow",
                    "description": "",
                    "type": "DataRow",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3067,
            "description": "Make childRow child of parentRow if a relation between the two is found",
            "itemtype": "method",
            "name": "makeChild",
            "params": [
                {
                    "name": "childRow",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parentTable",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parentRow",
                    "description": "",
                    "type": "DataRow",
                    "optional": true
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3088,
            "description": "Get/Set a flag indicating that this table is not subjected to security functions in a Jquery fashioned\n style",
            "itemtype": "method",
            "name": "skipSecurity",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*|boolean"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3106,
            "description": "Get/Set the name of table  to be used to read data from database in a Jquery fashioned style",
            "itemtype": "method",
            "name": "tableForReading",
            "params": [
                {
                    "name": "tableName",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*|DataTable.myTableForReading|DataTable.name"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3120,
            "description": "Get/Set the name of table  to be used to write data from database in a Jquery fashioned style",
            "itemtype": "method",
            "name": "tableForWriting",
            "params": [
                {
                    "name": "tableName",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*|DataTable.myTableForWriting|DataTable.name"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3134,
            "description": "Get/Set a static filter  to be used to read data from database in a Jquery fashioned style",
            "itemtype": "method",
            "name": "staticFilter",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3147,
            "description": "Get/set the ordering that have to be user reading from db",
            "params": [
                {
                    "name": "fieldList",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3160,
            "description": "get the list of columns",
            "itemtype": "method",
            "name": "columnList",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3172,
            "description": "Gets all autoincrement column names of this table",
            "return": {
                "description": "",
                "type": "String[]"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3180,
            "description": "Get/Set autoincrement properties of fields",
            "itemtype": "method",
            "name": "autoIncrement",
            "params": [
                {
                    "name": "fieldName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "autoIncrementInfo",
                    "description": "//see AutoIncrementColumn properties for details",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*|AutoIncrementColumn"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3196,
            "description": "Get a serializable version of this table. If serializeStructure=true, also structure information is serialized",
            "params": [
                {
                    "name": "serializeStructure",
                    "description": "",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "filterRow",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3236,
            "description": "Get data from a serialized structure. If serializeStructure=true, also structure information is serialized",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "deserializeStructure",
                    "description": "",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3276,
            "description": "adds an array of objects to collection, as unchanged, if they still are not present. Existence is verified\n basing on  key",
            "itemtype": "method",
            "name": "mergeArray",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "DataRow []"
                },
                {
                    "name": "overwrite",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3300,
            "description": "clones table structure without copying any DataRow",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "DataTable"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3319,
            "description": "Clones table structure and copies data\nmethod @copy",
            "return": {
                "description": "",
                "type": "DataTable"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3332,
            "description": "Gets a filter of colliding rows supposing to change r[field]= value, on  a specified column",
            "itemtype": "method",
            "name": "collisionFilter",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "autoInfo",
                    "description": "",
                    "type": "AutoIncrementColumn"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3353,
            "description": "Assign a field assuring it will not cause duplicates on table's autoincrement fields",
            "itemtype": "method",
            "name": "safeAssign",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "field",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3366,
            "description": "check if changing a key field of a row it would collide with come autoincrement field. If it would,\n recalculates colliding rows/filter in accordance",
            "itemtype": "method",
            "name": "avoidCollisions",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3388,
            "description": "Recalc a field to avoid collisions on some rows identified by a filter",
            "itemtype": "method",
            "name": "avoidCollisionsOnField",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3401,
            "description": "Assign a value to a field and update all dependencies",
            "itemtype": "method",
            "name": "assignField",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3414,
            "description": "assign a value to a field in a row and all descending child rows",
            "itemtype": "method",
            "name": "cascadeAssignField",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "parentField",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3439,
            "description": "Gets all autoincrement fields that depends on a given field, i.e. those having field as selector or prefixfield",
            "itemtype": "method",
            "name": "fieldDependencies",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String[]"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3461,
            "description": "Re calculate temporaryID affected by a field change. It should be done for every autoincrement field\n that has that field as a selector or as a prefix field",
            "itemtype": "method",
            "name": "updateDependencies",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3478,
            "description": "Augment r[field] in order to avoid collision with another row that needs to take that value\nif field is not specified, this is applied to all autoincrement field of the table\nPrecondition: r[[field] should be an autoincrement field",
            "itemtype": "method",
            "name": "calcTemporaryId",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "DataTable",
            "module": "DataSet",
            "submodule": "DataQuery"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3553,
            "description": "This function is called before posting row into db for every insert/update",
            "itemtype": "method",
            "name": "prepareForPosting",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                },
                {
                    "name": "env",
                    "description": "",
                    "type": "Environment"
                }
            ],
            "class": "OptimisticLocking",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3574,
            "description": "Get the optimistic lock for updating a row",
            "itemtype": "method",
            "name": "getOptimisticLock",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "DataRow"
                }
            ],
            "return": {
                "description": "",
                "type": "SqlFun"
            },
            "class": "OptimisticLocking",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3620,
            "description": "Parent table name",
            "itemtype": "property",
            "name": "parentTable",
            "type": "{string}",
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3627,
            "description": "DataSet to which this DataRelation belongs to. It is used to retrieve parent and child table",
            "itemtype": "property",
            "name": "dataSet",
            "type": "DataSet",
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3634,
            "description": "Array of parent column names or comma separated column names",
            "itemtype": "property",
            "name": "parentCols",
            "type": "{string|string[]}",
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3643,
            "description": "Child table name",
            "itemtype": "property",
            "name": "childTable",
            "type": "{string}",
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3650,
            "description": "Array of child column names  or comma separated column names",
            "itemtype": "property",
            "name": "childCols",
            "type": "{string|string[]}",
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3665,
            "description": "Gets a filter that will be applied to the child table and will find any child row of a given DataRow",
            "itemtype": "method",
            "name": "getChildsFilter",
            "params": [
                {
                    "name": "parentRow",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alias",
                    "description": "when present is used to attach an alias for the parent table in the composed filter",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3681,
            "description": "Get any child of a given DataRow following this DataRelation",
            "itemtype": "method",
            "name": "getChilds",
            "params": [
                {
                    "name": "parentRow",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3696,
            "description": "Gets a filter that will be applied to the parent table and will find any parent row of a given DataRow",
            "itemtype": "method",
            "name": "getParentsFilter",
            "params": [
                {
                    "name": "childRow",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alias",
                    "description": "when present is used to attach an alias for the parent table in the composed filter",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3713,
            "description": "Get any parent of a given DataRow following this DataRelation",
            "itemtype": "method",
            "name": "getParents",
            "params": [
                {
                    "name": "childRow",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3744,
            "description": "get/set the activation filter for the relation, i.e. a condition that must be satisfied in order to\n follow the relation when automatically filling dataset from database. The condition is meant to be applied\n to parent rows",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "SqlFun",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3759,
            "description": "Establish if  a relation links the key of  a table into a subset of another table key",
            "itemtype": "method",
            "name": "isEntityRelation",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3782,
            "description": "Modifies childRow in order to make it child of parentRow. Sets to null corresponding fields if\n parentRow is null or undefined",
            "itemtype": "method",
            "name": "makeChild",
            "params": [
                {
                    "name": "parentRow",
                    "description": ""
                },
                {
                    "name": "childRow",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataRelation",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3816,
            "description": "DataSet name",
            "itemtype": "property",
            "name": "name",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3823,
            "description": "Collection of DataTable where tables[tableName] is a DataTable named tableName",
            "itemtype": "property",
            "name": "tables",
            "type": "Hash",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3830,
            "description": "Collection of DataRelation  where relations[relName] is a DataRelation named relName",
            "itemtype": "property",
            "name": "relations",
            "type": "Hash",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3836,
            "description": "Gets all relations where the parent table is the key of the hash\nrelationsByParent['a'] is an array of all DataRelations where 'a' is the parent",
            "itemtype": "property",
            "name": "relationsByParent",
            "type": "{DataRelation []}",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3844,
            "description": "Gets all relations where the child table is the key of the hash\nrelationsByChild['a'] is an array of all DataRelations where 'a' is the child",
            "itemtype": "property",
            "name": "relationsByChild",
            "type": "{DataRelation []}",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3852,
            "description": "DataSet - level optmistic locking, this property is set in custom implementations",
            "itemtype": "property",
            "name": "optimisticLocking",
            "type": "OptimisticLocking",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3866,
            "description": "Clones a DataSet replicating its structure but without copying any DataRow",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "DataSet"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3887,
            "description": "Creates a new DataTable attaching it to the DataSet",
            "itemtype": "method",
            "name": "newTable",
            "params": [
                {
                    "name": "tableName",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "DataTable"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3905,
            "description": "Creates a copy of the DataSet, including both structure and data.",
            "itemtype": "method",
            "name": "copy",
            "return": {
                "description": "",
                "type": "DataSet"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3921,
            "description": "Calls acceptChanges to all contained DataTables",
            "itemtype": "method",
            "name": "acceptChanges",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3931,
            "description": "Calls rejectChanges to all contained DataTables",
            "itemtype": "method",
            "name": "rejectChanges",
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3941,
            "description": "Check if any contained DataTable has any changes",
            "itemtype": "method",
            "name": "hasChanges",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3952,
            "description": "Creates a new DataRelation and attaches it to the DataSet",
            "itemtype": "method",
            "name": "newRelation",
            "params": [
                {
                    "name": "relationName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parentTableName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parentColsName",
                    "description": "array of string",
                    "type": "String []"
                },
                {
                    "name": "childTableName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "childColsName",
                    "description": "array of string",
                    "type": "String []"
                }
            ],
            "return": {
                "description": "",
                "type": "DataRelation"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 3991,
            "description": "Deletes a row with all subentity child",
            "itemtype": "method",
            "name": "cascadeDelete",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "DataRow"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 4016,
            "description": "Creates a serializable version of this DataSet",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "serializeStructure",
                    "description": "when true serialized also structure, when false only row data",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "filterRow",
                    "description": "function to select which rows have to be serialized",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 4040,
            "description": "Restores data from an object obtained with serialize().",
            "itemtype": "method",
            "name": "deSerialize",
            "params": [
                {
                    "name": "d",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "deSerializeStructure",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 4067,
            "description": "merges changes from DataSet d assuming they are unchanged and they can be present in this or not.\nIf a row is not present, it is added. If it is present, it is updated.\nIt is assumed that \"this\" dataset is unchanged at the beginning",
            "itemtype": "method",
            "name": "mergeAsPut",
            "params": [
                {
                    "name": "d",
                    "description": "",
                    "type": "DataSet"
                }
            ],
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 4089,
            "description": "merges changes from DataSet d assuming they are unchanged and they are not present in this dataset.\nRows are all added 'as is' to this, in the state of ADDED\nIt is assumed that \"this\" dataset is unchanged at the beginning",
            "itemtype": "method",
            "name": "mergeAsPost",
            "params": [
                {
                    "name": "d",
                    "description": "",
                    "type": "DataSet"
                }
            ],
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 4106,
            "description": "merges changes from DataSet d assuming they are unchanged and they are all present in this dataset.\nRows are updated, but only  fields actually present in d are modified. Other field are left unchanged.\nIt is assumed that \"this\" dataset is unchanged at the beginning",
            "itemtype": "method",
            "name": "mergeAsPatch",
            "params": [
                {
                    "name": "d",
                    "description": "",
                    "type": "DataSet"
                }
            ],
            "class": "DataSet",
            "module": "DataSet"
        },
        {
            "file": "src\\jsDataSet.js",
            "line": 4126,
            "description": "Import data from a given dataset",
            "itemtype": "method",
            "name": "importData",
            "params": [
                {
                    "name": "d",
                    "description": "",
                    "type": "DataSet"
                }
            ],
            "class": "DataSet",
            "module": "DataSet"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: license",
            "line": " src\\bower_components\\lodash\\lodash.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:281"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:305"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:329"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:349"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:364"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:375"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:392"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:408"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:421"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:463"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:474"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:486"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:509"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:520"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:533"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:557"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:585"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:601"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:616"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:629"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:629"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:782"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:782"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:890"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:901"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:911"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:919"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:931"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:950"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:961"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:969"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:977"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:985"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:993"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1001"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1030"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1030"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1030"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1054"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1054"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1054"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1074"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1074"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1074"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1135"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1135"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1147"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1147"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1147"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1160"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1160"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1160"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1173"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1173"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1186"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1221"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:1237"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:1237"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1275"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1296"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1316"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1338"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1362"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1382"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1403"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1424"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1449"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1472"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1494"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1506"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1525"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1556"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1584"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1608"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1628"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1654"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1721"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1741"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1758"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1805"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1830"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1853"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1872"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1891"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1915"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1954"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:1981"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2005"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2018"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2031"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2044"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2068"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2092"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2265"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2300"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2336"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2394"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2407"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2431"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2444"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2467"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2480"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2511"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2531"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2583"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2604"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2632"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2664"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2707"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2773"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2803"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2835"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2868"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2904"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2922"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2933"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2955"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:2974"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3007"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3090"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3267"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3307"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3370"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3397"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3412"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3423"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3438"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3466"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3485"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3500"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3565"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3579"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3602"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3617"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3629"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3708"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3733"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3752"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3774"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3807"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3839"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3868"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3885"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:3898"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3898"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:3935"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3935"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:3964"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3964"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:3997"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:3997"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4033"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4033"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4070"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4070"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4120"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4171"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4171"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4223"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4223"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4273"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:4273"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4273"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4294"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4322"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4322"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4340"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4340"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4388"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4388"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4405"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4405"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4466"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4466"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4484"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4533"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4533"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4576"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4576"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4605"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4605"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4656"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:4656"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4656"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4674"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4700"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4700"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4752"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4752"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4780"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4780"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4816"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4816"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4853"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4853"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4903"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4903"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4954"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4954"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:4977"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:4977"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:4977"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5045"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5045"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5074"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5074"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5098"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5098"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5131"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5156"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5156"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5156"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5194"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5224"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5224"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5250"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5250"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:5272"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5272"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5272"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:5301"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5301"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5301"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:5334"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5334"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5334"
        },
        {
            "message": "unknown tag: name",
            "line": " src\\bower_components\\lodash\\lodash.js:5350"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5350"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5350"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5350"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5369"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5397"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5397"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5397"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5448"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5448"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5486"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5486"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5486"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5535"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5535"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5535"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5581"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5581"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5581"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5631"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5631"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5654"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5654"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5682"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5682"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5682"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5714"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5714"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5714"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5737"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5737"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5780"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5780"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5823"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5823"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5849"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:5849"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5849"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5894"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5894"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5939"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5939"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:5984"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:5984"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6032"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6032"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6059"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:6059"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6059"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6092"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:6092"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6092"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6116"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6116"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6162"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6162"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6191"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6191"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6223"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6223"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6248"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:6248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6248"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6298"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6298"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6354"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6354"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6399"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6399"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6432"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6450"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6450"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6491"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6491"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6515"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6515"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6552"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6552"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6598"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6598"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6632"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6632"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6687"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6687"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6736"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6736"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6782"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6782"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6958"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6958"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6977"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6977"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:6997"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:6997"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7042"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:7042"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7042"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7087"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7087"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7159"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7159"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7187"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7187"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7209"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7209"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7248"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7286"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7286"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7317"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7317"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7374"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7374"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7402"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7402"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7462"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7462"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7510"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7510"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7531"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7531"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7551"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7551"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7571"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7571"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7591"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7591"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7618"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7618"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7657"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7657"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7706"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7706"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7727"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7727"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7760"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7760"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7791"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7791"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7820"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7820"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7882"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7882"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7914"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7914"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7940"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7940"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7960"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7960"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:7986"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:7986"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8028"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8028"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8048"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8048"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8068"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8068"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8088"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8088"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8108"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8132"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8161"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:8161"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8161"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8192"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8232"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8232"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8257"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8301"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8301"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8345"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8345"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8379"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8379"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8409"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8409"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8436"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8436"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8459"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:8459"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8459"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8478"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8478"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8497"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8497"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8549"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8549"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8588"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8588"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8639"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8639"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8685"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8733"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8733"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8775"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8775"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8802"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8802"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8837"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8837"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8875"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8875"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8928"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8928"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8957"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8957"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:8986"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:8986"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9050"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9050"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9075"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9075"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9093"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9093"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9113"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9143"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9183"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9183"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9204"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9204"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9229"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9229"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9268"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9268"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9296"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9296"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9324"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9324"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9369"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9409"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9409"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9433"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9433"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9458"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9458"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9485"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9485"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9687"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9687"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9721"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9721"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9751"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9751"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9781"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9781"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9865"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9865"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9890"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9890"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9918"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9918"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9946"
        },
        {
            "message": "unknown tag: alias",
            "line": " src\\bower_components\\lodash\\lodash.js:9946"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9946"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:9990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:9990"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10011"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10011"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10029"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10029"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10058"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10058"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10142"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10159"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10175"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10202"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10202"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10227"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10227"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10285"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10330"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\bower_components\\lodash\\lodash.js:10330"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\bower_components\\lodash\\lodash.js:10600"
        },
        {
            "message": "unknown tag: license",
            "line": " src\\bower_components\\lodash\\lodash.min.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:219"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:328"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:552"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:567"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:577"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:591"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:606"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:617"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:637"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1093"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1174"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1191"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1229"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1265"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1286"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1316"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1346"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1381"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1417"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1490"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1558"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1607"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1643"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1655"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1699"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1745"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1796"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:1828"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2202"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2431"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2469"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2602"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2732"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2766"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2780"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2793"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2803"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2854"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2891"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2966"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2989"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:2998"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3022"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3045"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3088"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3147"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3160"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3172"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3180"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3461"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3574"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3681"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3713"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3744"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3759"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3804"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3866"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3887"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:3941"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\jsDataSet.js:4016"
        },
        {
            "message": "Missing item type\nStarting with version 2.0, this file \"boots\" Jasmine, performing all of the necessary initialization before executing the loaded environment and all of a project's specs. This file should be loaded after `jasmine.js` and `jasmine_html.js`, but before any project source files or spec files are loaded. Thus this file can also be used to customize Jasmine for a project.\n\nIf a project is using Jasmine via the standalone distribution, this file can be customized directly. If a project is using Jasmine via the [Ruby gem][jasmine-gem], this file can be copied into the support directory via `jasmine copy_boot_js`. Other environments (e.g., Python) will have different mechanisms.\n\nThe location of `boot.js` can be specified and/or overridden in `jasmine.yml`.\n\n[jasmine-gem]: http://github.com/pivotal/jasmine-gem",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:23"
        },
        {
            "message": "Missing item type\n## Require &amp; Instantiate\n\nRequire Jasmine's core files. Specifically, this requires and attaches all of Jasmine's code to the `jasmine` reference.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:35"
        },
        {
            "message": "Missing item type\nSince this is being run in a browser and the results should populate to an HTML page, require the HTML-specific Jasmine code, injecting the same reference.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:42"
        },
        {
            "message": "Missing item type\nCreate the Jasmine environment. This is used to run all specs in a project.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:47"
        },
        {
            "message": "Missing item type\n## The Global Interface\n\nBuild up the functions that will be exposed as the Jasmine public interface. A project can customize, rename or alias any of these functions as desired, provided the implementation remains unchanged.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:52"
        },
        {
            "message": "Missing item type\nAdd all of the Jasmine global/public interface to the proper global, so a project can use the public interface directly. For example, calling `describe` in specs instead of `jasmine.getEnv().describe`.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:59"
        },
        {
            "message": "Missing item type\n## Runner Parameters\n\nMore browser specific code - wrap the query string in an object and to allow for getting/setting parameters from the runner user interface.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:68"
        },
        {
            "message": "Missing item type\n## Reporters\nThe `HtmlReporter` builds all of the HTML UI for the runner page. This reporter paints the dots, stars, and x's for specs, as well as all spec names and all failures (if any).",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:81"
        },
        {
            "message": "Missing item type\nThe `jsApiReporter` also receives spec results, and is used by any environment that needs to extract the results  from JavaScript.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:95"
        },
        {
            "message": "Missing item type\nFilter which specs will be run by matching the start of the full name against the `spec` query param.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:101"
        },
        {
            "message": "Missing item type\nSetting up timing functions to be able to be overridden. Certain browsers (Safari, IE 8, phantomjs) require this hack.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:112"
        },
        {
            "message": "Missing item type\n## Execution\n\nReplace the browser window's `onload`, ensure it's called, and then run all of the loaded specs. This includes initializing the `HtmlReporter` instance and then executing the loaded Jasmine environment. All of this will happen after all of the specs are loaded.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:120"
        },
        {
            "message": "Missing item type\nHelper function for readability above.",
            "line": " src\\bower_components\\jasmine\\lib\\jasmine-core\\boot.js:135"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:12"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:15"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:18"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:29"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:33"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:37"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:42"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:45"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:48"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:74"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:79"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:85"
        },
        {
            "message": "Missing item type\nUsed to match ES template delimiters.\nSee the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:90"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:97"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:100"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:103"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:106"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:109"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:112"
        },
        {
            "message": "Missing item type\nUsed to match `RegExp` special characters.\nSee this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:115"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:123"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:126"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:129"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:137"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:149"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:159"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:162"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:177"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:192"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:199"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:220"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:230"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:240"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:246"
        },
        {
            "message": "Missing item type\nUsed as a reference to the global object.\n\nThe `this` value is used if it is the global object to avoid Greasemonkey's\nrestricted `window` object, otherwise the `window` object is used.",
            "line": " src\\bower_components\\lodash\\lodash.js:256"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:264"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:267"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:270"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:276"
        },
        {
            "message": "Missing item type\nThe base implementation of `compareAscending` which compares values and\nsorts them in ascending order without guaranteeing a stable sort.",
            "line": " src\\bower_components\\lodash\\lodash.js:281"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.indexOf` without support for binary searches.",
            "line": " src\\bower_components\\lodash\\lodash.js:305"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\nto define the sort order of `array` and replaces criteria objects with their\ncorresponding values.",
            "line": " src\\bower_components\\lodash\\lodash.js:329"
        },
        {
            "message": "Missing item type\nConverts `value` to a string if it is not one. An empty string is returned\nfor `null` or `undefined` values.",
            "line": " src\\bower_components\\lodash\\lodash.js:349"
        },
        {
            "message": "Missing item type\nUsed by `_.max` and `_.min` as the default callback for string values.",
            "line": " src\\bower_components\\lodash\\lodash.js:364"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimLeft` to get the index of the first character\nof `string` that is not found in `chars`.",
            "line": " src\\bower_components\\lodash\\lodash.js:375"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimRight` to get the index of the last character\nof `string` that is not found in `chars`.",
            "line": " src\\bower_components\\lodash\\lodash.js:392"
        },
        {
            "message": "Missing item type\nUsed by `_.sortBy` to compare transformed elements of a collection and stable\nsort them in ascending order.",
            "line": " src\\bower_components\\lodash\\lodash.js:408"
        },
        {
            "message": "Missing item type\nUsed by `_.sortByAll` to compare multiple properties of each element\nin a collection and stable sort them in ascending order.",
            "line": " src\\bower_components\\lodash\\lodash.js:421"
        },
        {
            "message": "Missing item type\nUsed by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.",
            "line": " src\\bower_components\\lodash\\lodash.js:452"
        },
        {
            "message": "Missing item type\nUsed by `_.escape` to convert characters to HTML entities.",
            "line": " src\\bower_components\\lodash\\lodash.js:463"
        },
        {
            "message": "Missing item type\nUsed by `_.template` to escape characters for inclusion in compiled\nstring literals.",
            "line": " src\\bower_components\\lodash\\lodash.js:474"
        },
        {
            "message": "Missing item type\nGets the index at which the first occurrence of `NaN` is found in `array`.\nIf `fromRight` is provided elements of `array` are iterated from right to left.",
            "line": " src\\bower_components\\lodash\\lodash.js:486"
        },
        {
            "message": "Missing item type\nChecks if `value` is object-like.",
            "line": " src\\bower_components\\lodash\\lodash.js:509"
        },
        {
            "message": "Missing item type\nUsed by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\ncharacter code is whitespace.",
            "line": " src\\bower_components\\lodash\\lodash.js:520"
        },
        {
            "message": "Missing item type\nReplaces all `placeholder` elements in `array` with an internal placeholder\nand returns an array of their indexes.",
            "line": " src\\bower_components\\lodash\\lodash.js:533"
        },
        {
            "message": "Missing item type\nAn implementation of `_.uniq` optimized for sorted arrays without support\nfor callback shorthands and `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:557"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\ncharacter of `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:585"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\ncharacter of `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:601"
        },
        {
            "message": "Missing item type\nUsed by `_.unescape` to convert HTML entities to characters.",
            "line": " src\\bower_components\\lodash\\lodash.js:616"
        },
        {
            "message": "Missing item type\nCreate a new pristine `lodash` function using the given `context` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:629"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:671"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:683"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:687"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:690"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:693"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:696"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:699"
        },
        {
            "message": "Missing item type\nUsed to resolve the `toStringTag` of values.\nSee the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:702"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:709"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:712"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:718"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:734"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:758"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:762"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:767"
        },
        {
            "message": "Missing item type\nUsed as the maximum length of an array-like value.\nSee the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:770"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.js:777"
        },
        {
            "message": "Missing item type\nCreates a `lodash` object which wraps `value` to enable intuitive chaining.\nMethods that operate on and return arrays, collections, and functions can\nbe chained together. Methods that return a boolean or single value will\nautomatically end the chain returning the unwrapped value. Explicit chaining\nmay be enabled using `_.chain`. The execution of chained methods is lazy,\nthat is, execution is deferred until `_#value` is implicitly or explicitly\ncalled.\n\nLazy evaluation allows several methods to support shortcut fusion. Shortcut\nfusion is an optimization that merges iteratees to avoid creating intermediate\narrays and reduce the number of iteratee executions.\n\nChaining is supported in custom builds as long as the `_#value` method is\ndirectly or indirectly included in the build.\n\nIn addition to lodash methods, wrappers also have the following `Array` methods:\n`concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\nand `unshift`\n\nThe wrapper functions that support shortcut fusion are:\n`drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `first`,\n`initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`, `slice`,\n`take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `where`\n\nThe chainable wrapper functions are:\n`after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n`callback`, `chain`, `chunk`, `compact`, `concat`, `constant`, `countBy`,\n`create`, `curry`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n`drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `flatten`,\n`flattenDeep`, `flow`, `flowRight`, `forEach`, `forEachRight`, `forIn`,\n`forInRight`, `forOwn`, `forOwnRight`, `functions`, `groupBy`, `indexBy`,\n`initial`, `intersection`, `invert`, `invoke`, `keys`, `keysIn`, `map`,\n`mapValues`, `matches`, `memoize`, `merge`, `mixin`, `negate`, `noop`,\n`omit`, `once`, `pairs`, `partial`, `partialRight`, `partition`, `pick`,\n`pluck`, `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`,\n`rearg`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n`sortBy`, `sortByAll`, `splice`, `take`, `takeRight`, `takeRightWhile`,\n`takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n`transform`, `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`,\n`where`, `without`, `wrap`, `xor`, `zip`, and `zipObject`\n\nThe wrapper functions that are **not** chainable by default are:\n`attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n`endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n`findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n`identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n`isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n`isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n`isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n`isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n`noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n`random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n`shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n`startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n`trunc`, `unescape`, `uniqueId`, `value`, and `words`\n\nThe wrapper function `sample` will return a wrapped value when `n` is provided,\notherwise an unwrapped value is returned.",
            "line": " src\\bower_components\\lodash\\lodash.js:782"
        },
        {
            "message": "Missing item type\nThe base constructor for creating `lodash` wrapper objects.",
            "line": " src\\bower_components\\lodash\\lodash.js:876"
        },
        {
            "message": "Missing item type\nAn object environment feature flags.",
            "line": " src\\bower_components\\lodash\\lodash.js:890"
        },
        {
            "message": "Missing item type\nDetect if functions can be decompiled by `Function#toString`\n(all but Firefox OS certified apps, older Opera mobile browsers, and\nthe PlayStation 3; forced `false` for Windows 8 apps).",
            "line": " src\\bower_components\\lodash\\lodash.js:901"
        },
        {
            "message": "Missing item type\nDetect if `Function#name` is supported (all but IE).",
            "line": " src\\bower_components\\lodash\\lodash.js:911"
        },
        {
            "message": "Missing item type\nDetect if the DOM is supported.",
            "line": " src\\bower_components\\lodash\\lodash.js:919"
        },
        {
            "message": "Missing item type\nDetect if `arguments` object indexes are non-enumerable.\n\nIn Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\nindexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n`arguments` object indexes as non-enumerable and fail `hasOwnProperty`\nchecks for indexes that exceed their function's formal parameters with\nassociated values of `0`.",
            "line": " src\\bower_components\\lodash\\lodash.js:931"
        },
        {
            "message": "Missing item type\nBy default, the template delimiters used by lodash are like those in\nembedded Ruby (ERB). Change the following template settings to use\nalternative delimiters.",
            "line": " src\\bower_components\\lodash\\lodash.js:950"
        },
        {
            "message": "Missing item type\nUsed to detect `data` property values to be HTML-escaped.",
            "line": " src\\bower_components\\lodash\\lodash.js:961"
        },
        {
            "message": "Missing item type\nUsed to detect code to be evaluated.",
            "line": " src\\bower_components\\lodash\\lodash.js:969"
        },
        {
            "message": "Missing item type\nUsed to detect `data` property values to inject.",
            "line": " src\\bower_components\\lodash\\lodash.js:977"
        },
        {
            "message": "Missing item type\nUsed to reference the data object in the template text.",
            "line": " src\\bower_components\\lodash\\lodash.js:985"
        },
        {
            "message": "Missing item type\nUsed to import variables into the compiled template.",
            "line": " src\\bower_components\\lodash\\lodash.js:993"
        },
        {
            "message": "Missing item type\nA reference to the `lodash` function.",
            "line": " src\\bower_components\\lodash\\lodash.js:1001"
        },
        {
            "message": "Missing item type\nCreates a lazy wrapper object which wraps `value` to enable lazy evaluation.",
            "line": " src\\bower_components\\lodash\\lodash.js:1013"
        },
        {
            "message": "Missing item type\nCreates a clone of the lazy wrapper object.",
            "line": " src\\bower_components\\lodash\\lodash.js:1030"
        },
        {
            "message": "Missing item type\nReverses the direction of lazy iteration.",
            "line": " src\\bower_components\\lodash\\lodash.js:1054"
        },
        {
            "message": "Missing item type\nExtracts the unwrapped value from its lazy wrapper.",
            "line": " src\\bower_components\\lodash\\lodash.js:1074"
        },
        {
            "message": "Missing item type\nCreates a cache object to store key/value pairs.",
            "line": " src\\bower_components\\lodash\\lodash.js:1135"
        },
        {
            "message": "Missing item type\nRemoves `key` and its value from the cache.",
            "line": " src\\bower_components\\lodash\\lodash.js:1147"
        },
        {
            "message": "Missing item type\nGets the cached value for `key`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1160"
        },
        {
            "message": "Missing item type\nChecks if a cached value for `key` exists.",
            "line": " src\\bower_components\\lodash\\lodash.js:1173"
        },
        {
            "message": "Missing item type\nAdds `value` to `key` of the cache.",
            "line": " src\\bower_components\\lodash\\lodash.js:1186"
        },
        {
            "message": "Missing item type\nCreates a cache object to store unique values.",
            "line": " src\\bower_components\\lodash\\lodash.js:1205"
        },
        {
            "message": "Missing item type\nChecks if `value` is in `cache` mimicking the return signature of\n`_.indexOf` by returning `0` if the value is found, else `-1`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1221"
        },
        {
            "message": "Missing item type\nAdds `value` to the cache.",
            "line": " src\\bower_components\\lodash\\lodash.js:1237"
        },
        {
            "message": "Missing item type\nCopies the values of `source` to `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1256"
        },
        {
            "message": "Missing item type\nA specialized version of `_.forEach` for arrays without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1275"
        },
        {
            "message": "Missing item type\nA specialized version of `_.forEachRight` for arrays without support for\ncallback shorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1296"
        },
        {
            "message": "Missing item type\nA specialized version of `_.every` for arrays without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1316"
        },
        {
            "message": "Missing item type\nA specialized version of `_.filter` for arrays without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1338"
        },
        {
            "message": "Missing item type\nA specialized version of `_.map` for arrays without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1362"
        },
        {
            "message": "Missing item type\nA specialized version of `_.max` for arrays without support for iteratees.",
            "line": " src\\bower_components\\lodash\\lodash.js:1382"
        },
        {
            "message": "Missing item type\nA specialized version of `_.min` for arrays without support for iteratees.",
            "line": " src\\bower_components\\lodash\\lodash.js:1403"
        },
        {
            "message": "Missing item type\nA specialized version of `_.reduce` for arrays without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1424"
        },
        {
            "message": "Missing item type\nA specialized version of `_.reduceRight` for arrays without support for\ncallback shorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1449"
        },
        {
            "message": "Missing item type\nA specialized version of `_.some` for arrays without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1472"
        },
        {
            "message": "Missing item type\nUsed by `_.defaults` to customize its `_.assign` use.",
            "line": " src\\bower_components\\lodash\\lodash.js:1494"
        },
        {
            "message": "Missing item type\nUsed by `_.template` to customize its `_.assign` use.\n\n**Note:** This method is like `assignDefaults` except that it ignores\ninherited property values when checking if a property is `undefined`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1506"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.assign` without support for argument juggling,\nmultiple sources, and `this` binding `customizer` functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:1525"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.at` without support for strings and individual\nkey arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:1556"
        },
        {
            "message": "Missing item type\nCopies the properties of `source` to `object`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1584"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.bindAll` without support for individual\nmethod name arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:1608"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.callback` which supports specifying the\nnumber of arguments to provide to `func`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1628"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.clone` without support for argument juggling\nand `this` binding `customizer` functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:1654"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.create` without support for assigning\nproperties to the created object.",
            "line": " src\\bower_components\\lodash\\lodash.js:1721"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.delay` and `_.defer` which accepts an index\nof where to slice the arguments to provide to `func`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1741"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.difference` which accepts a single array\nof values to exclude.",
            "line": " src\\bower_components\\lodash\\lodash.js:1758"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forEach` without support for callback\nshorthands and `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1805"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forEachRight` without support for callback\nshorthands and `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1830"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.every` without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1853"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.filter` without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:1872"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\nwithout support for callback shorthands and `this` binding, which iterates\nover `collection` using the provided `eachFunc`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1891"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.flatten` with added support for restricting\nflattening and specifying the start index.",
            "line": " src\\bower_components\\lodash\\lodash.js:1915"
        },
        {
            "message": "Missing item type\nThe base implementation of `baseForIn` and `baseForOwn` which iterates\nover `object` properties returned by `keysFunc` invoking `iteratee` for\neach property. Iterator functions may exit iteration early by explicitly\nreturning `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:1954"
        },
        {
            "message": "Missing item type\nThis function is like `baseFor` except that it iterates over properties\nin the opposite order.",
            "line": " src\\bower_components\\lodash\\lodash.js:1981"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forIn` without support for callback\nshorthands and `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2005"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forOwn` without support for callback\nshorthands and `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2018"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forOwnRight` without support for callback\nshorthands and `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2031"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.functions` which creates an array of\n`object` function property names filtered from those provided.",
            "line": " src\\bower_components\\lodash\\lodash.js:2044"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.invoke` which requires additional arguments\nto be provided as an array of arguments rather than individually.",
            "line": " src\\bower_components\\lodash\\lodash.js:2068"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.isEqual` without support for `this` binding\n`customizer` functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:2092"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqual` for arrays and objects which performs\ndeep comparisons and tracks traversed objects enabling objects with circular\nreferences to be compared.",
            "line": " src\\bower_components\\lodash\\lodash.js:2123"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.isMatch` without support for callback\nshorthands or `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2199"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.map` without support for callback shorthands\nor `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2248"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.matches` which supports specifying whether\n`source` should be cloned.",
            "line": " src\\bower_components\\lodash\\lodash.js:2265"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.merge` without support for argument juggling,\nmultiple sources, and `this` binding `customizer` functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:2300"
        },
        {
            "message": "Missing item type\nA specialized version of `baseMerge` for arrays and objects which performs\ndeep merges and tracks traversed objects enabling objects with circular\nreferences to be merged.",
            "line": " src\\bower_components\\lodash\\lodash.js:2336"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.property` which does not coerce `key` to a string.",
            "line": " src\\bower_components\\lodash\\lodash.js:2394"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.pullAt` without support for individual\nindex arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:2407"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.random` without support for argument juggling\nand returning floating-point numbers.",
            "line": " src\\bower_components\\lodash\\lodash.js:2431"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.reduce` and `_.reduceRight` without support\nfor callback shorthands or `this` binding, which iterates over `collection`\nusing the provided `eachFunc`.",
            "line": " src\\bower_components\\lodash\\lodash.js:2444"
        },
        {
            "message": "Missing item type\nThe base implementation of `setData` without support for hot loop detection.",
            "line": " src\\bower_components\\lodash\\lodash.js:2467"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.slice` without an iteratee call guard.",
            "line": " src\\bower_components\\lodash\\lodash.js:2480"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.some` without support for callback shorthands\nor `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2511"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.uniq` without support for callback shorthands\nand `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:2531"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.values` and `_.valuesIn` which creates an\narray of `object` property values corresponding to the property names\nreturned by `keysFunc`.",
            "line": " src\\bower_components\\lodash\\lodash.js:2583"
        },
        {
            "message": "Missing item type\nThe base implementation of `wrapperValue` which returns the result of\nperforming a sequence of actions on the unwrapped `value`, where each\nsuccessive action is supplied the return value of the previous.",
            "line": " src\\bower_components\\lodash\\lodash.js:2604"
        },
        {
            "message": "Missing item type\nPerforms a binary search of `array` to determine the index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
            "line": " src\\bower_components\\lodash\\lodash.js:2632"
        },
        {
            "message": "Missing item type\nThis function is like `binaryIndex` except that it invokes `iteratee` for\n`value` and each element of `array` to compute their sort ranking. The\niteratee is invoked with one argument; (value).",
            "line": " src\\bower_components\\lodash\\lodash.js:2664"
        },
        {
            "message": "Missing item type\nA specialized version of `baseCallback` which only supports `this` binding\nand specifying the number of arguments to provide to `func`.",
            "line": " src\\bower_components\\lodash\\lodash.js:2707"
        },
        {
            "message": "Missing item type\nCreates a clone of the given array buffer.",
            "line": " src\\bower_components\\lodash\\lodash.js:2743"
        },
        {
            "message": "Missing item type\nCreates an array that is the composition of partially applied arguments,\nplaceholders, and provided arguments into a single array of arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:2773"
        },
        {
            "message": "Missing item type\nThis function is like `composeArgs` except that the arguments composition\nis tailored for `_.partialRight`.",
            "line": " src\\bower_components\\lodash\\lodash.js:2803"
        },
        {
            "message": "Missing item type\nCreates a function that aggregates a collection, creating an accumulator\nobject composed from the results of running each element in the collection\nthrough an iteratee. The `setter` sets the keys and values of the accumulator\nobject. If `initializer` is provided initializes the accumulator object.",
            "line": " src\\bower_components\\lodash\\lodash.js:2835"
        },
        {
            "message": "Missing item type\nCreates a function that assigns properties of source object(s) to a given\ndestination object.",
            "line": " src\\bower_components\\lodash\\lodash.js:2868"
        },
        {
            "message": "Missing item type\nCreates a function that wraps `func` and invokes it with the `this`\nbinding of `thisArg`.",
            "line": " src\\bower_components\\lodash\\lodash.js:2904"
        },
        {
            "message": "Missing item type\nCreates a `Set` cache object to optimize linear searches of large arrays.",
            "line": " src\\bower_components\\lodash\\lodash.js:2922"
        },
        {
            "message": "Missing item type\nCreates a function that produces compound words out of the words in a\ngiven string.",
            "line": " src\\bower_components\\lodash\\lodash.js:2933"
        },
        {
            "message": "Missing item type\nCreates a function that produces an instance of `Ctor` regardless of\nwhether it was invoked as part of a `new` expression or by `call` or `apply`.",
            "line": " src\\bower_components\\lodash\\lodash.js:2955"
        },
        {
            "message": "Missing item type\nCreates a function that gets the extremum value of a collection.",
            "line": " src\\bower_components\\lodash\\lodash.js:2974"
        },
        {
            "message": "Missing item type\nCreates a function that wraps `func` and invokes it with optional `this`\nbinding of, partial application, and currying.",
            "line": " src\\bower_components\\lodash\\lodash.js:3007"
        },
        {
            "message": "Missing item type\nCreates the pad required for `string` based on the given padding length.\nThe `chars` string may be truncated if the number of padding characters\nexceeds the padding length.",
            "line": " src\\bower_components\\lodash\\lodash.js:3090"
        },
        {
            "message": "Missing item type\nCreates a function that wraps `func` and invokes it with the optional `this`\nbinding of `thisArg` and the `partials` prepended to those provided to\nthe wrapper.",
            "line": " src\\bower_components\\lodash\\lodash.js:3113"
        },
        {
            "message": "Missing item type\nCreates a function that either curries or invokes `func` with optional\n`this` binding and partially applied arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:3149"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqualDeep` for arrays with support for\npartial deep comparisons.",
            "line": " src\\bower_components\\lodash\\lodash.js:3214"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqualDeep` for comparing objects of\nthe same `toStringTag`.\n\n**Note:** This function only supports comparing values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "line": " src\\bower_components\\lodash\\lodash.js:3267"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqualDeep` for objects with support for\npartial deep comparisons.",
            "line": " src\\bower_components\\lodash\\lodash.js:3307"
        },
        {
            "message": "Missing item type\nGets the extremum value of `collection` invoking `iteratee` for each value\nin `collection` to generate the criterion by which the value is ranked.\nThe `iteratee` is invoked with three arguments; (value, index, collection).",
            "line": " src\\bower_components\\lodash\\lodash.js:3370"
        },
        {
            "message": "Missing item type\nGets the appropriate \"callback\" function. If the `_.callback` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseCallback` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "line": " src\\bower_components\\lodash\\lodash.js:3397"
        },
        {
            "message": "Missing item type\nGets metadata for `func`.",
            "line": " src\\bower_components\\lodash\\lodash.js:3412"
        },
        {
            "message": "Missing item type\nGets the appropriate \"indexOf\" function. If the `_.indexOf` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseIndexOf` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "line": " src\\bower_components\\lodash\\lodash.js:3423"
        },
        {
            "message": "Missing item type\nGets the view, applying any `transforms` to the `start` and `end` positions.",
            "line": " src\\bower_components\\lodash\\lodash.js:3438"
        },
        {
            "message": "Missing item type\nInitializes an array clone.",
            "line": " src\\bower_components\\lodash\\lodash.js:3466"
        },
        {
            "message": "Missing item type\nInitializes an object clone.",
            "line": " src\\bower_components\\lodash\\lodash.js:3485"
        },
        {
            "message": "Missing item type\nInitializes an object clone based on its `toStringTag`.\n\n**Note:** This function only supports cloning values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "line": " src\\bower_components\\lodash\\lodash.js:3500"
        },
        {
            "message": "Missing item type\nChecks if `func` is eligible for `this` binding.",
            "line": " src\\bower_components\\lodash\\lodash.js:3540"
        },
        {
            "message": "Missing item type\nChecks if `value` is a valid array-like index.",
            "line": " src\\bower_components\\lodash\\lodash.js:3565"
        },
        {
            "message": "Missing item type\nChecks if the provided arguments are from an iteratee call.",
            "line": " src\\bower_components\\lodash\\lodash.js:3579"
        },
        {
            "message": "Missing item type\nChecks if `value` is a valid array-like length.\n\n**Note:** This function is based on ES `ToLength`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:3602"
        },
        {
            "message": "Missing item type\nChecks if `value` is suitable for strict equality comparisons, i.e. `===`.",
            "line": " src\\bower_components\\lodash\\lodash.js:3617"
        },
        {
            "message": "Missing item type\nMerges the function metadata of `source` into `data`.\n\nMerging metadata reduces the number of wrappers required to invoke a function.\nThis is possible because methods like `_.bind`, `_.curry`, and `_.partial`\nmay be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\naugment function arguments, making the order in which they are executed important,\npreventing the merging of metadata. However, we make an exception for a safe\ncommon case where curried functions have `_.ary` and or `_.rearg` applied.",
            "line": " src\\bower_components\\lodash\\lodash.js:3629"
        },
        {
            "message": "Missing item type\nA specialized version of `_.pick` that picks `object` properties specified\nby the `props` array.",
            "line": " src\\bower_components\\lodash\\lodash.js:3708"
        },
        {
            "message": "Missing item type\nA specialized version of `_.pick` that picks `object` properties `predicate`\nreturns truthy for.",
            "line": " src\\bower_components\\lodash\\lodash.js:3733"
        },
        {
            "message": "Missing item type\nReorder `array` according to the specified indexes where the element at\nthe first index is assigned as the first element, the element at\nthe second index is assigned as the second element, and so on.",
            "line": " src\\bower_components\\lodash\\lodash.js:3752"
        },
        {
            "message": "Missing item type\nSets metadata for `func`.\n\n**Note:** If this function becomes hot, i.e. is invoked a lot in a short\nperiod of time, it will trip its breaker and transition to an identity function\nto avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:3774"
        },
        {
            "message": "Missing item type\nA fallback implementation of `_.isPlainObject` which checks if `value`\nis an object created by the `Object` constructor or has a `[[Prototype]]`\nof `null`.",
            "line": " src\\bower_components\\lodash\\lodash.js:3807"
        },
        {
            "message": "Missing item type\nA fallback implementation of `Object.keys` which creates an array of the\nown enumerable property names of `object`.",
            "line": " src\\bower_components\\lodash\\lodash.js:3839"
        },
        {
            "message": "Missing item type\nConverts `value` to an array-like object if it is not one.",
            "line": " src\\bower_components\\lodash\\lodash.js:3868"
        },
        {
            "message": "Missing item type\nConverts `value` to an object if it is not one.",
            "line": " src\\bower_components\\lodash\\lodash.js:3885"
        },
        {
            "message": "Missing item type\nCreates an array of elements split into groups the length of `size`.\nIf `collection` can't be split evenly, the final chunk will be the remaining\nelements.",
            "line": " src\\bower_components\\lodash\\lodash.js:3898"
        },
        {
            "message": "Missing item type\nCreates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
            "line": " src\\bower_components\\lodash\\lodash.js:3935"
        },
        {
            "message": "Missing item type\nCreates an array excluding all values of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:3964"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements dropped from the beginning.",
            "line": " src\\bower_components\\lodash\\lodash.js:3997"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements dropped from the end.",
            "line": " src\\bower_components\\lodash\\lodash.js:4033"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4070"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4120"
        },
        {
            "message": "Missing item type\nThis method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for, instead of the element itself.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4171"
        },
        {
            "message": "Missing item type\nThis method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4223"
        },
        {
            "message": "Missing item type\nGets the first element of `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4273"
        },
        {
            "message": "Missing item type\nFlattens a nested array. If `isDeep` is `true` the array is recursively\nflattened, otherwise it is only flattened a single level.",
            "line": " src\\bower_components\\lodash\\lodash.js:4294"
        },
        {
            "message": "Missing item type\nRecursively flattens a nested array.",
            "line": " src\\bower_components\\lodash\\lodash.js:4322"
        },
        {
            "message": "Missing item type\nGets the index at which the first occurrence of `value` is found in `array`\nusing `SameValueZero` for equality comparisons. If `fromIndex` is negative,\nit is used as the offset from the end of `array`. If `array` is sorted\nproviding `true` for `fromIndex` performs a faster binary search.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:4340"
        },
        {
            "message": "Missing item type\nGets all but the last element of `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4388"
        },
        {
            "message": "Missing item type\nCreates an array of unique values in all provided arrays using `SameValueZero`\nfor equality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:4405"
        },
        {
            "message": "Missing item type\nGets the last element of `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4466"
        },
        {
            "message": "Missing item type\nThis method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
            "line": " src\\bower_components\\lodash\\lodash.js:4484"
        },
        {
            "message": "Missing item type\nRemoves all provided values from `array` using `SameValueZero` for equality\ncomparisons.\n\n**Notes:**\n - Unlike `_.without`, this method mutates `array`.\n - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n   except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n   for more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:4533"
        },
        {
            "message": "Missing item type\nRemoves elements from `array` corresponding to the given indexes and returns\nan array of the removed elements. Indexes may be specified as an array of\nindexes or as individual arguments.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4576"
        },
        {
            "message": "Missing item type\nRemoves all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is bound to\n`thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** Unlike `_.filter`, this method mutates `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4605"
        },
        {
            "message": "Missing item type\nGets all but the first element of `array`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4656"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This function is used instead of `Array#slice` to support node\nlists in IE < 9 and to ensure dense arrays are returned.",
            "line": " src\\bower_components\\lodash\\lodash.js:4674"
        },
        {
            "message": "Missing item type\nUses a binary search to determine the lowest index at which `value` should\nbe inserted into `array` in order to maintain its sort order. If an iteratee\nfunction is provided it is invoked for `value` and each element of `array`\nto compute their sort ranking. The iteratee is bound to `thisArg` and\ninvoked with one argument; (value).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4700"
        },
        {
            "message": "Missing item type\nThis method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
            "line": " src\\bower_components\\lodash\\lodash.js:4752"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements taken from the beginning.",
            "line": " src\\bower_components\\lodash\\lodash.js:4780"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements taken from the end.",
            "line": " src\\bower_components\\lodash\\lodash.js:4816"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is bound to `thisArg`\nand invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4853"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is bound to\n`thisArg` and invoked with three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:4903"
        },
        {
            "message": "Missing item type\nCreates an array of unique values, in order, of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:4954"
        },
        {
            "message": "Missing item type\nCreates a duplicate-value-free version of an array using `SameValueZero`\nfor equality comparisons. Providing `true` for `isSorted` performs a faster\nsearch algorithm for sorted arrays. If an iteratee function is provided it\nis invoked for each value in the array to generate the criterion by which\nuniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\nwith three arguments; (value, index, array).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:4977"
        },
        {
            "message": "Missing item type\nThis method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-`_.zip`\nconfiguration.",
            "line": " src\\bower_components\\lodash\\lodash.js:5045"
        },
        {
            "message": "Missing item type\nCreates an array excluding all provided values using `SameValueZero` for\nequality comparisons.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:5074"
        },
        {
            "message": "Missing item type\nCreates an array that is the symmetric difference of the provided arrays.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\nmore details.",
            "line": " src\\bower_components\\lodash\\lodash.js:5098"
        },
        {
            "message": "Missing item type\nCreates an array of grouped elements, the first of which contains the first\nelements of the given arrays, the second of which contains the second elements\nof the given arrays, and so on.",
            "line": " src\\bower_components\\lodash\\lodash.js:5131"
        },
        {
            "message": "Missing item type\nCreates an object composed from arrays of property names and values. Provide\neither a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\nor two arrays, one of property names and one of corresponding values.",
            "line": " src\\bower_components\\lodash\\lodash.js:5156"
        },
        {
            "message": "Missing item type\nCreates a `lodash` object that wraps `value` with explicit method\nchaining enabled.",
            "line": " src\\bower_components\\lodash\\lodash.js:5194"
        },
        {
            "message": "Missing item type\nThis method invokes `interceptor` and returns `value`. The interceptor is\nbound to `thisArg` and invoked with one argument; (value). The purpose of\nthis method is to \"tap into\" a method chain in order to perform operations\non intermediate results within the chain.",
            "line": " src\\bower_components\\lodash\\lodash.js:5224"
        },
        {
            "message": "Missing item type\nThis method is like `_.tap` except that it returns the result of `interceptor`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5250"
        },
        {
            "message": "Missing item type\nEnables explicit method chaining on the wrapper object.",
            "line": " src\\bower_components\\lodash\\lodash.js:5272"
        },
        {
            "message": "Missing item type\nReverses the wrapped array so the first element becomes the last, the\nsecond element becomes the second to last, and so on.\n\n**Note:** This method mutates the wrapped array.",
            "line": " src\\bower_components\\lodash\\lodash.js:5301"
        },
        {
            "message": "Missing item type\nProduces the result of coercing the unwrapped value to a string.",
            "line": " src\\bower_components\\lodash\\lodash.js:5334"
        },
        {
            "message": "Missing item type\nExecutes the chained sequence to extract the unwrapped value.",
            "line": " src\\bower_components\\lodash\\lodash.js:5350"
        },
        {
            "message": "Missing item type\nCreates an array of elements corresponding to the given keys, or indexes,\nof `collection`. Keys may be specified as individual arguments or as arrays\nof keys.",
            "line": " src\\bower_components\\lodash\\lodash.js:5369"
        },
        {
            "message": "Missing item type\nChecks if `value` is in `collection` using `SameValueZero` for equality\ncomparisons. If `fromIndex` is negative, it is used as the offset from\nthe end of `collection`.\n\n**Note:** `SameValueZero` comparisons are like strict equality comparisons,\ne.g. `===`, except that `NaN` matches `NaN`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:5397"
        },
        {
            "message": "Missing item type\nCreates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the number of times the key was returned by `iteratee`.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5448"
        },
        {
            "message": "Missing item type\nChecks if `predicate` returns truthy for **all** elements of `collection`.\nThe predicate is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5486"
        },
        {
            "message": "Missing item type\nIterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5535"
        },
        {
            "message": "Missing item type\nIterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5581"
        },
        {
            "message": "Missing item type\nThis method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
            "line": " src\\bower_components\\lodash\\lodash.js:5631"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between each element in `collection` and the\nsource object, returning the first element that has equivalent property\nvalues.",
            "line": " src\\bower_components\\lodash\\lodash.js:5654"
        },
        {
            "message": "Missing item type\nIterates over elements of `collection` invoking `iteratee` for each element.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection). Iterator functions may exit iteration early\nby explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a `length` property\nare iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\nmay be used for object iteration.",
            "line": " src\\bower_components\\lodash\\lodash.js:5682"
        },
        {
            "message": "Missing item type\nThis method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
            "line": " src\\bower_components\\lodash\\lodash.js:5714"
        },
        {
            "message": "Missing item type\nCreates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is an array of the elements responsible for generating the key.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5737"
        },
        {
            "message": "Missing item type\nCreates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the last element responsible for generating the key. The\niteratee function is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5780"
        },
        {
            "message": "Missing item type\nInvokes the method named by `methodName` on each element in `collection`,\nreturning an array of the results of each invoked method. Any additional\narguments are provided to each invoked method. If `methodName` is a function\nit is invoked for, and `this` bound to, each element in `collection`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5823"
        },
        {
            "message": "Missing item type\nCreates an array of values by running each element in `collection` through\n`iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\narguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5849"
        },
        {
            "message": "Missing item type\nGets the maximum value of `collection`. If `collection` is empty or falsey\n`-Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments; (value, index, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5894"
        },
        {
            "message": "Missing item type\nGets the minimum value of `collection`. If `collection` is empty or falsey\n`Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments; (value, index, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5939"
        },
        {
            "message": "Missing item type\nCreates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, while the second of which\ncontains elements `predicate` returns falsey for. The predicate is bound\nto `thisArg` and invoked with three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:5984"
        },
        {
            "message": "Missing item type\nGets the value of `key` from all elements in `collection`.",
            "line": " src\\bower_components\\lodash\\lodash.js:6032"
        },
        {
            "message": "Missing item type\nReduces `collection` to a value which is the accumulated result of running\neach element in `collection` through `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not provided the first element of `collection` is used as the initial\nvalue. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n(accumulator, value, index|key, collection).",
            "line": " src\\bower_components\\lodash\\lodash.js:6059"
        },
        {
            "message": "Missing item type\nThis method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
            "line": " src\\bower_components\\lodash\\lodash.js:6092"
        },
        {
            "message": "Missing item type\nThe opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:6116"
        },
        {
            "message": "Missing item type\nGets a random element or `n` random elements from a collection.",
            "line": " src\\bower_components\\lodash\\lodash.js:6162"
        },
        {
            "message": "Missing item type\nCreates an array of shuffled values, using a version of the Fisher-Yates\nshuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:6191"
        },
        {
            "message": "Missing item type\nGets the size of `collection` by returning `collection.length` for\narray-like values or the number of own enumerable properties for objects.",
            "line": " src\\bower_components\\lodash\\lodash.js:6223"
        },
        {
            "message": "Missing item type\nChecks if `predicate` returns truthy for **any** element of `collection`.\nThe function returns as soon as it finds a passing value and does not iterate\nover the entire collection. The predicate is bound to `thisArg` and invoked\nwith three arguments; (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:6248"
        },
        {
            "message": "Missing item type\nCreates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection through `iteratee`. This method performs\na stable sort, that is, it preserves the original sort order of equal elements.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments;\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:6298"
        },
        {
            "message": "Missing item type\nThis method is like `_.sortBy` except that it sorts by property names\ninstead of an iteratee function.",
            "line": " src\\bower_components\\lodash\\lodash.js:6354"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between each element in `collection` and the\nsource object, returning an array of all elements that have equivalent\nproperty values.",
            "line": " src\\bower_components\\lodash\\lodash.js:6399"
        },
        {
            "message": "Missing item type\nGets the number of milliseconds that have elapsed since the Unix epoch\n(1 January 1970 00:00:00 UTC).",
            "line": " src\\bower_components\\lodash\\lodash.js:6432"
        },
        {
            "message": "Missing item type\nThe opposite of `_.before`; this method creates a function that invokes\n`func` once it is called `n` or more times.",
            "line": " src\\bower_components\\lodash\\lodash.js:6450"
        },
        {
            "message": "Missing item type\nCreates a function that accepts up to `n` arguments ignoring any\nadditional arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:6491"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func`, with the `this` binding and arguments\nof the created function, while it is called less than `n` times. Subsequent\ncalls to the created function return the result of the last `func` invocation.",
            "line": " src\\bower_components\\lodash\\lodash.js:6515"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with the `this` binding of `thisArg`\nand prepends any additional `_.bind` arguments to those provided to the\nbound function.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind` this method does not set the `length`\nproperty of bound functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:6552"
        },
        {
            "message": "Missing item type\nBinds methods of an object to the object itself, overwriting the existing\nmethod. Method names may be specified as individual arguments or as arrays\nof method names. If no method names are provided all enumerable function\nproperties, own and inherited, of `object` are bound.\n\n**Note:** This method does not set the `length` property of bound functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:6598"
        },
        {
            "message": "Missing item type\nCreates a function that invokes the method at `object[key]` and prepends\nany additional `_.bindKey` arguments to those provided to the bound function.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist.\nSee [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
            "line": " src\\bower_components\\lodash\\lodash.js:6632"
        },
        {
            "message": "Missing item type\nCreates a function that accepts one or more arguments of `func` that when\ncalled either invokes `func` returning its result, if all `func` arguments\nhave been provided, or returns a function that accepts one or more of the\nremaining `func` arguments, and so on. The arity of `func` may be specified\nif `func.length` is not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the `length` property of curried functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:6687"
        },
        {
            "message": "Missing item type\nThis method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the `length` property of curried functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:6736"
        },
        {
            "message": "Missing item type\nCreates a function that delays invoking `func` until after `wait` milliseconds\nhave elapsed since the last time it was invoked. The created function comes\nwith a `cancel` method to cancel delayed invocations. Provide an options\nobject to indicate that `func` should be invoked on the leading and/or\ntrailing edge of the `wait` timeout. Subsequent calls to the debounced\nfunction return the result of the last `func` invocation.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the debounced function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.debounce` and `_.throttle`.",
            "line": " src\\bower_components\\lodash\\lodash.js:6782"
        },
        {
            "message": "Missing item type\nDefers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it is invoked.",
            "line": " src\\bower_components\\lodash\\lodash.js:6958"
        },
        {
            "message": "Missing item type\nInvokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it is invoked.",
            "line": " src\\bower_components\\lodash\\lodash.js:6977"
        },
        {
            "message": "Missing item type\nCreates a function that returns the result of invoking the provided\nfunctions with the `this` binding of the created function, where each\nsuccessive invocation is supplied the return value of the previous.",
            "line": " src\\bower_components\\lodash\\lodash.js:6997"
        },
        {
            "message": "Missing item type\nThis method is like `_.flow` except that it creates a function that\ninvokes the provided functions from right to left.",
            "line": " src\\bower_components\\lodash\\lodash.js:7042"
        },
        {
            "message": "Missing item type\nCreates a function that memoizes the result of `func`. If `resolver` is\nprovided it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is coerced to a string and used as the\ncache key. The `func` is invoked with the `this` binding of the memoized\nfunction.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the ES `Map` method interface\nof `get`, `has`, and `set`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:7087"
        },
        {
            "message": "Missing item type\nCreates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
            "line": " src\\bower_components\\lodash\\lodash.js:7159"
        },
        {
            "message": "Missing item type\nCreates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first call. The `func` is invoked\nwith the `this` binding of the created function.",
            "line": " src\\bower_components\\lodash\\lodash.js:7187"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with `partial` arguments prepended\nto those provided to the new function. This method is like `_.bind` except\nit does **not** alter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the `length` property of partially\napplied functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:7209"
        },
        {
            "message": "Missing item type\nThis method is like `_.partial` except that partially applied arguments\nare appended to those provided to the new function.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the `length` property of partially\napplied functions.",
            "line": " src\\bower_components\\lodash\\lodash.js:7248"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with arguments arranged according\nto the specified indexes where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
            "line": " src\\bower_components\\lodash\\lodash.js:7286"
        },
        {
            "message": "Missing item type\nCreates a function that only invokes `func` at most once per every `wait`\nmilliseconds. The created function comes with a `cancel` method to cancel\ndelayed invocations. Provide an options object to indicate that `func`\nshould be invoked on the leading and/or trailing edge of the `wait` timeout.\nSubsequent calls to the throttled function return the result of the last\n`func` call.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the throttled function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.throttle` and `_.debounce`.",
            "line": " src\\bower_components\\lodash\\lodash.js:7317"
        },
        {
            "message": "Missing item type\nCreates a function that provides `value` to the wrapper function as its\nfirst argument. Any additional arguments provided to the function are\nappended to those provided to the wrapper function. The wrapper is invoked\nwith the `this` binding of the created function.",
            "line": " src\\bower_components\\lodash\\lodash.js:7374"
        },
        {
            "message": "Missing item type\nCreates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\notherwise they are assigned by reference. If `customizer` is provided it is\ninvoked to produce the cloned values. If `customizer` returns `undefined`\ncloning is handled by the method instead. The `customizer` is bound to\n`thisArg` and invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the structured clone algorithm.\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:7402"
        },
        {
            "message": "Missing item type\nCreates a deep clone of `value`. If `customizer` is provided it is invoked\nto produce the cloned values. If `customizer` returns `undefined` cloning\nis handled by the method instead. The `customizer` is bound to `thisArg`\nand invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the structured clone algorithm.\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:7462"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as an `arguments` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:7510"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as an `Array` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:7531"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a boolean primitive or object.",
            "line": " src\\bower_components\\lodash\\lodash.js:7551"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `Date` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:7571"
        },
        {
            "message": "Missing item type\nChecks if `value` is a DOM element.",
            "line": " src\\bower_components\\lodash\\lodash.js:7591"
        },
        {
            "message": "Missing item type\nChecks if a value is empty. A value is considered empty unless it is an\n`arguments` object, array, string, or jQuery-like collection with a length\ngreater than `0` or an object with own enumerable properties.",
            "line": " src\\bower_components\\lodash\\lodash.js:7618"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between two values to determine if they are\nequivalent. If `customizer` is provided it is invoked to compare values.\nIf `customizer` returns `undefined` comparisons are handled by the method\ninstead. The `customizer` is bound to `thisArg` and invoked with three\narguments; (value, other [, index|key]).\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Functions and DOM nodes\nare **not** supported. Provide a customizer function to extend support\nfor comparing other values.",
            "line": " src\\bower_components\\lodash\\lodash.js:7657"
        },
        {
            "message": "Missing item type\nChecks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:7706"
        },
        {
            "message": "Missing item type\nChecks if `value` is a finite primitive number.\n\n**Note:** This method is based on ES `Number.isFinite`. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:7727"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `Function` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:7760"
        },
        {
            "message": "Missing item type\nChecks if `value` is the language type of `Object`.\n(e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\n**Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:7791"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between `object` and `source` to determine if\n`object` contains equivalent property values. If `customizer` is provided\nit is invoked to compare values. If `customizer` returns `undefined`\ncomparisons are handled by the method instead. The `customizer` is bound\nto `thisArg` and invoked with three arguments; (value, other, index|key).\n\n**Note:** This method supports comparing properties of arrays, booleans,\n`Date` objects, numbers, `Object` objects, regexes, and strings. Functions\nand DOM nodes are **not** supported. Provide a customizer function to extend\nsupport for comparing other values.",
            "line": " src\\bower_components\\lodash\\lodash.js:7820"
        },
        {
            "message": "Missing item type\nChecks if `value` is `NaN`.\n\n**Note:** This method is not the same as native `isNaN` which returns `true`\nfor `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:7882"
        },
        {
            "message": "Missing item type\nChecks if `value` is a native function.",
            "line": " src\\bower_components\\lodash\\lodash.js:7914"
        },
        {
            "message": "Missing item type\nChecks if `value` is `null`.",
            "line": " src\\bower_components\\lodash\\lodash.js:7940"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\nas numbers, use the `_.isFinite` method.",
            "line": " src\\bower_components\\lodash\\lodash.js:7960"
        },
        {
            "message": "Missing item type\nChecks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.\n\n**Note:** This method assumes objects created by the `Object` constructor\nhave no inherited enumerable properties.",
            "line": " src\\bower_components\\lodash\\lodash.js:7986"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `RegExp` object.",
            "line": " src\\bower_components\\lodash\\lodash.js:8028"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `String` primitive or object.",
            "line": " src\\bower_components\\lodash\\lodash.js:8048"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a typed array.",
            "line": " src\\bower_components\\lodash\\lodash.js:8068"
        },
        {
            "message": "Missing item type\nChecks if `value` is `undefined`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8088"
        },
        {
            "message": "Missing item type\nConverts `value` to an array.",
            "line": " src\\bower_components\\lodash\\lodash.js:8108"
        },
        {
            "message": "Missing item type\nConverts `value` to a plain object flattening inherited enumerable\nproperties of `value` to own properties of the plain object.",
            "line": " src\\bower_components\\lodash\\lodash.js:8132"
        },
        {
            "message": "Missing item type\nAssigns own enumerable properties of source object(s) to the destination\nobject. Subsequent sources overwrite property assignments of previous sources.\nIf `customizer` is provided it is invoked to produce the assigned values.\nThe `customizer` is bound to `thisArg` and invoked with five arguments;\n(objectValue, sourceValue, key, object, source).",
            "line": " src\\bower_components\\lodash\\lodash.js:8161"
        },
        {
            "message": "Missing item type\nCreates an object that inherits from the given `prototype` object. If a\n`properties` object is provided its own enumerable properties are assigned\nto the created object.",
            "line": " src\\bower_components\\lodash\\lodash.js:8192"
        },
        {
            "message": "Missing item type\nAssigns own enumerable properties of source object(s) to the destination\nobject for all destination properties that resolve to `undefined`. Once a\nproperty is set, additional defaults of the same property are ignored.",
            "line": " src\\bower_components\\lodash\\lodash.js:8232"
        },
        {
            "message": "Missing item type\nThis method is like `_.findIndex` except that it returns the key of the\nfirst element `predicate` returns truthy for, instead of the element itself.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8257"
        },
        {
            "message": "Missing item type\nThis method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.\n\nIf a property name is provided for `predicate` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `predicate` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8301"
        },
        {
            "message": "Missing item type\nIterates over own and inherited enumerable properties of an object invoking\n`iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\nwith three arguments; (value, key, object). Iterator functions may exit\niteration early by explicitly returning `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8345"
        },
        {
            "message": "Missing item type\nThis method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
            "line": " src\\bower_components\\lodash\\lodash.js:8379"
        },
        {
            "message": "Missing item type\nIterates over own enumerable properties of an object invoking `iteratee`\nfor each property. The `iteratee` is bound to `thisArg` and invoked with\nthree arguments; (value, key, object). Iterator functions may exit iteration\nearly by explicitly returning `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8409"
        },
        {
            "message": "Missing item type\nThis method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
            "line": " src\\bower_components\\lodash\\lodash.js:8436"
        },
        {
            "message": "Missing item type\nCreates an array of function property names from all enumerable properties,\nown and inherited, of `object`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8459"
        },
        {
            "message": "Missing item type\nChecks if `key` exists as a direct property of `object` instead of an\ninherited property.",
            "line": " src\\bower_components\\lodash\\lodash.js:8478"
        },
        {
            "message": "Missing item type\nCreates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite property\nassignments of previous values unless `multiValue` is `true`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8497"
        },
        {
            "message": "Missing item type\nCreates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:8549"
        },
        {
            "message": "Missing item type\nCreates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "line": " src\\bower_components\\lodash\\lodash.js:8588"
        },
        {
            "message": "Missing item type\nCreates an object with the same keys as `object` and values generated by\nrunning each own enumerable property of `object` through `iteratee`. The\niteratee function is bound to `thisArg` and invoked with three arguments;\n(value, key, object).\n\nIf a property name is provided for `iteratee` the created \"_.property\"\nstyle callback returns the property value of the given element.\n\nIf an object is provided for `iteratee` the created \"_.matches\" style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8639"
        },
        {
            "message": "Missing item type\nRecursively merges own enumerable properties of the source object(s), that\ndon't resolve to `undefined` into the destination object. Subsequent sources\noverwrite property assignments of previous sources. If `customizer` is\nprovided it is invoked to produce the merged values of the destination and\nsource properties. If `customizer` returns `undefined` merging is handled\nby the method instead. The `customizer` is bound to `thisArg` and invoked\nwith five arguments; (objectValue, sourceValue, key, object, source).",
            "line": " src\\bower_components\\lodash\\lodash.js:8685"
        },
        {
            "message": "Missing item type\nThe opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable properties of `object` that are not omitted.\nProperty names may be specified as individual arguments or as arrays of\nproperty names. If `predicate` is provided it is invoked for each property\nof `object` omitting the properties `predicate` returns truthy for. The\npredicate is bound to `thisArg` and invoked with three arguments;\n(value, key, object).",
            "line": " src\\bower_components\\lodash\\lodash.js:8733"
        },
        {
            "message": "Missing item type\nCreates a two dimensional array of the key-value pairs for `object`,\ne.g. `[[key1, value1], [key2, value2]]`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8775"
        },
        {
            "message": "Missing item type\nCreates an object composed of the picked `object` properties. Property\nnames may be specified as individual arguments or as arrays of property\nnames. If `predicate` is provided it is invoked for each property of `object`\npicking the properties `predicate` returns truthy for. The predicate is\nbound to `thisArg` and invoked with three arguments; (value, key, object).",
            "line": " src\\bower_components\\lodash\\lodash.js:8802"
        },
        {
            "message": "Missing item type\nResolves the value of property `key` on `object`. If the value of `key` is\na function it is invoked with the `this` binding of `object` and its result\nis returned, else the property value is returned. If the property value is\n`undefined` the `defaultValue` is used in its place.",
            "line": " src\\bower_components\\lodash\\lodash.js:8837"
        },
        {
            "message": "Missing item type\nAn alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own enumerable\nproperties through `iteratee`, with each invocation potentially mutating\nthe `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\nwith four arguments; (accumulator, value, key, object). Iterator functions\nmay exit iteration early by explicitly returning `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:8875"
        },
        {
            "message": "Missing item type\nCreates an array of the own enumerable property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "line": " src\\bower_components\\lodash\\lodash.js:8928"
        },
        {
            "message": "Missing item type\nCreates an array of the own and inherited enumerable property values\nof `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "line": " src\\bower_components\\lodash\\lodash.js:8957"
        },
        {
            "message": "Missing item type\nProduces a random number between `min` and `max` (inclusive). If only one\nargument is provided a number between `0` and the given number is returned.\nIf `floating` is `true`, or either `min` or `max` are floats, a floating-point\nnumber is returned instead of an integer.",
            "line": " src\\bower_components\\lodash\\lodash.js:8986"
        },
        {
            "message": "Missing item type\nConverts `string` to camel case.\nSee [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9050"
        },
        {
            "message": "Missing item type\nCapitalizes the first character of `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9075"
        },
        {
            "message": "Missing item type\nDeburrs `string` by converting latin-1 supplementary letters to basic latin letters.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9093"
        },
        {
            "message": "Missing item type\nChecks if `string` ends with the given target string.",
            "line": " src\\bower_components\\lodash\\lodash.js:9113"
        },
        {
            "message": "Missing item type\nConverts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\ntheir corresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional characters\nuse a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't require escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value.\nSee [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nBackticks are escaped because in Internet Explorer < 9, they can break out\nof attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n[#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\nthe [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\nWhen working with HTML you should always quote attribute values to reduce\nXSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9143"
        },
        {
            "message": "Missing item type\nEscapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n\"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9183"
        },
        {
            "message": "Missing item type\nConverts `string` to kebab case (a.k.a. spinal case).\nSee [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\nmore details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9204"
        },
        {
            "message": "Missing item type\nPads `string` on the left and right sides if it is shorter then the given\npadding length. The `chars` string may be truncated if the number of padding\ncharacters can't be evenly divided by the padding length.",
            "line": " src\\bower_components\\lodash\\lodash.js:9229"
        },
        {
            "message": "Missing item type\nPads `string` on the left side if it is shorter then the given padding\nlength. The `chars` string may be truncated if the number of padding\ncharacters exceeds the padding length.",
            "line": " src\\bower_components\\lodash\\lodash.js:9268"
        },
        {
            "message": "Missing item type\nPads `string` on the right side if it is shorter then the given padding\nlength. The `chars` string may be truncated if the number of padding\ncharacters exceeds the padding length.",
            "line": " src\\bower_components\\lodash\\lodash.js:9296"
        },
        {
            "message": "Missing item type\nConverts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\nin which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the ES5 implementation of `parseInt`.\nSee the [ES5 spec](https://es5.github.io/#E) for more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9324"
        },
        {
            "message": "Missing item type\nRepeats the given string `n` times.",
            "line": " src\\bower_components\\lodash\\lodash.js:9369"
        },
        {
            "message": "Missing item type\nConverts `string` to snake case.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9409"
        },
        {
            "message": "Missing item type\nConverts `string` to start case.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\nfor more details.",
            "line": " src\\bower_components\\lodash\\lodash.js:9433"
        },
        {
            "message": "Missing item type\nChecks if `string` starts with the given target string.",
            "line": " src\\bower_components\\lodash\\lodash.js:9458"
        },
        {
            "message": "Missing item type\nCreates a compiled template function that can interpolate data properties\nin \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\nproperties may be accessed as free variables in the template. If a setting\nobject is provided it takes precedence over `_.templateSettings` values.\n\n**Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\nSee the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\nfor more details.\n\nFor more information on precompiling templates see\n[lodash's custom builds documentation](https://lodash.com/custom-builds).\n\nFor more information on Chrome extension sandboxes see\n[Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).",
            "line": " src\\bower_components\\lodash\\lodash.js:9485"
        },
        {
            "message": "Missing item type\nRemoves leading and trailing whitespace or specified characters from `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9687"
        },
        {
            "message": "Missing item type\nRemoves leading whitespace or specified characters from `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9721"
        },
        {
            "message": "Missing item type\nRemoves trailing whitespace or specified characters from `string`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9751"
        },
        {
            "message": "Missing item type\nTruncates `string` if it is longer than the given maximum string length.\nThe last characters of the truncated string are replaced with the omission\nstring which defaults to \"...\".",
            "line": " src\\bower_components\\lodash\\lodash.js:9781"
        },
        {
            "message": "Missing item type\nThe inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\ncorresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional HTML\nentities use a third-party library like [_he_](https://mths.be/he).",
            "line": " src\\bower_components\\lodash\\lodash.js:9865"
        },
        {
            "message": "Missing item type\nSplits `string` into an array of its words.",
            "line": " src\\bower_components\\lodash\\lodash.js:9890"
        },
        {
            "message": "Missing item type\nAttempts to invoke `func`, returning either the result or the caught\nerror object.",
            "line": " src\\bower_components\\lodash\\lodash.js:9918"
        },
        {
            "message": "Missing item type\nCreates a function bound to an optional `thisArg`. If `func` is a property\nname the created callback returns the property value for a given element.\nIf `func` is an object the created callback returns `true` for elements\nthat contain the equivalent object properties, otherwise it returns `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9946"
        },
        {
            "message": "Missing item type\nCreates a function that returns `value`.",
            "line": " src\\bower_components\\lodash\\lodash.js:9990"
        },
        {
            "message": "Missing item type\nThis method returns the first argument provided to it.",
            "line": " src\\bower_components\\lodash\\lodash.js:10011"
        },
        {
            "message": "Missing item type\nCreates a function which performs a deep comparison between a given object\nand `source`, returning `true` if the given object has equivalent property\nvalues, else `false`.",
            "line": " src\\bower_components\\lodash\\lodash.js:10029"
        },
        {
            "message": "Missing item type\nAdds all own enumerable function properties of a source object to the\ndestination object. If `object` is a function then methods are added to\nits prototype as well.",
            "line": " src\\bower_components\\lodash\\lodash.js:10058"
        },
        {
            "message": "Missing item type\nReverts the `_` variable to its previous value and returns a reference to\nthe `lodash` function.",
            "line": " src\\bower_components\\lodash\\lodash.js:10142"
        },
        {
            "message": "Missing item type\nA no-operation function.",
            "line": " src\\bower_components\\lodash\\lodash.js:10159"
        },
        {
            "message": "Missing item type\nCreates a function which returns the property value of `key` on a given object.",
            "line": " src\\bower_components\\lodash\\lodash.js:10175"
        },
        {
            "message": "Missing item type\nThe inverse of `_.property`; this method creates a function which returns\nthe property value of a given key on `object`.",
            "line": " src\\bower_components\\lodash\\lodash.js:10202"
        },
        {
            "message": "Missing item type\nCreates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. If `start` is less than `end` a\nzero-length range is created unless a negative `step` is specified.",
            "line": " src\\bower_components\\lodash\\lodash.js:10227"
        },
        {
            "message": "Missing item type\nInvokes the iteratee function `n` times, returning an array of the results\nof each invocation. The `iteratee` is bound to `thisArg` and invoked with\none argument; (index).",
            "line": " src\\bower_components\\lodash\\lodash.js:10285"
        },
        {
            "message": "Missing item type\nGenerates a unique ID. If `prefix` is provided the ID is appended to it.",
            "line": " src\\bower_components\\lodash\\lodash.js:10330"
        },
        {
            "message": "Missing item type\nThe semantic version number.",
            "line": " src\\bower_components\\lodash\\lodash.js:10600"
        },
        {
            "message": "Missing item type",
            "line": " src\\bower_components\\lodash\\lodash.min.js:1"
        },
        {
            "message": "Missing item type\nSplice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "line": " src\\bower_components\\observe-js\\src\\observe.js:1399"
        },
        {
            "message": "Missing item type\nLacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "line": " src\\bower_components\\observe-js\\src\\observe.js:1413"
        },
        {
            "message": "Missing item type\nCreated by Gaetano Lazzo on 07/02/2015.\nThanks to lodash, ObjectObserve",
            "line": " src\\jsDataSet.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\jsDataSet.js:11"
        },
        {
            "message": "Missing item type",
            "line": " src\\jsDataSet.js:52"
        },
        {
            "message": "Missing item type\nUsed as a reference to the global object. (thanks lodash)\n\nThe `this` value is used if it is the global object to avoid Greasemonkey's\nrestricted `window` object, otherwise the `window` object is used.",
            "line": " src\\jsDataSet.js:58"
        },
        {
            "message": "Missing item type",
            "line": " src\\jsDataSet.js:66"
        },
        {
            "message": "Missing item type",
            "line": " src\\jsDataSet.js:69"
        },
        {
            "message": "Missing item type",
            "line": " src\\jsDataSet.js:72"
        },
        {
            "message": "Missing item type",
            "line": " src\\jsDataSet.js:78"
        },
        {
            "message": "Missing item type\nEnumerates possible state of a DataRow: detached, deleted, added, unchanged, modified",
            "line": " src\\jsDataSet.js:93"
        },
        {
            "message": "Missing item type\nGets all parent rows of this one",
            "line": " src\\jsDataSet.js:567"
        },
        {
            "message": "Missing item type\nGets all child rows of this one",
            "line": " src\\jsDataSet.js:606"
        },
        {
            "message": "Missing item type\nreturn the first object not null in the  array parameter",
            "line": " src\\jsDataSet.js:1558"
        },
        {
            "message": "Missing item type\nGets a function that filter selector fields eventually masking with selectorMask",
            "line": " src\\jsDataSet.js:2431"
        },
        {
            "message": "Missing item type\nCreates an empty DataTable",
            "line": " src\\jsDataSet.js:2527"
        },
        {
            "message": "Missing item type\nEvaluates the max of an expression without using any cached value. If len = 0 the expression is treated\n as a number with max(field) otherwise it is performed max(convertToInt(substring(field,start,len)))",
            "line": " src\\jsDataSet.js:2698"
        },
        {
            "message": "Missing item type\nCompares the key of two objects",
            "line": " src\\jsDataSet.js:2793"
        },
        {
            "message": "Missing item type\nGet/set the ordering that have to be user reading from db",
            "line": " src\\jsDataSet.js:3147"
        },
        {
            "message": "Missing item type\nGets all autoincrement column names of this table",
            "line": " src\\jsDataSet.js:3172"
        },
        {
            "message": "Missing item type\nGet a serializable version of this table. If serializeStructure=true, also structure information is serialized",
            "line": " src\\jsDataSet.js:3196"
        },
        {
            "message": "Missing item type\nGet data from a serialized structure. If serializeStructure=true, also structure information is serialized",
            "line": " src\\jsDataSet.js:3236"
        },
        {
            "message": "Missing item type\nClones table structure and copies data\nmethod @copy",
            "line": " src\\jsDataSet.js:3319"
        },
        {
            "message": "Missing item type\nget/set the activation filter for the relation, i.e. a condition that must be satisfied in order to\n follow the relation when automatically filling dataset from database. The condition is meant to be applied\n to parent rows",
            "line": " src\\jsDataSet.js:3744"
        }
    ]
}